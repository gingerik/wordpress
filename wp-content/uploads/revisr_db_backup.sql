-- MySQL dump 10.13  Distrib 5.5.40, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: wordpress
-- ------------------------------------------------------
-- Server version	5.5.40-0+wheezy1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext NOT NULL,
  `comment_author_email` varchar(100) NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) NOT NULL DEFAULT '',
  `comment_type` varchar(20) NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (1,1,'Mr WordPress','','http://wordpress.org/','','2014-10-11 15:51:08','2014-10-11 15:51:08','Hi, this is a comment.\nTo delete a comment, just log in and view the post&#039;s comments. There you will have the option to edit or delete them.',0,'post-trashed','','',0,0);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) NOT NULL DEFAULT '',
  `link_name` varchar(255) NOT NULL DEFAULT '',
  `link_image` varchar(255) NOT NULL DEFAULT '',
  `link_target` varchar(25) NOT NULL DEFAULT '',
  `link_description` varchar(255) NOT NULL DEFAULT '',
  `link_visible` varchar(20) NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) NOT NULL DEFAULT '',
  `link_notes` mediumtext NOT NULL,
  `link_rss` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(64) NOT NULL DEFAULT '',
  `option_value` longtext NOT NULL,
  `autoload` varchar(20) NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=InnoDB AUTO_INCREMENT=696 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','http://blog.gingerik.nl','yes'),(2,'blogname','gingerik','yes'),(3,'blogdescription','the figment of our imaginations','yes'),(4,'users_can_register','0','yes'),(5,'admin_email','e.timmers@gmail.com','yes'),(6,'start_of_week','1','yes'),(7,'use_balanceTags','','yes'),(8,'use_smilies','','yes'),(9,'require_name_email','1','yes'),(10,'comments_notify','1','yes'),(11,'posts_per_rss','10','yes'),(12,'rss_use_excerpt','0','yes'),(13,'mailserver_url','mail.example.com','yes'),(14,'mailserver_login','login@example.com','yes'),(15,'mailserver_pass','password','yes'),(16,'mailserver_port','110','yes'),(17,'default_category','4','yes'),(18,'default_comment_status','open','yes'),(19,'default_ping_status','open','yes'),(20,'default_pingback_flag','0','yes'),(21,'posts_per_page','10','yes'),(22,'date_format','F j, Y','yes'),(23,'time_format','H:i','yes'),(24,'links_updated_date_format','F j, Y g:i a','yes'),(28,'comment_moderation','0','yes'),(29,'moderation_notify','1','yes'),(30,'permalink_structure','','yes'),(31,'gzipcompression','0','yes'),(32,'hack_file','0','yes'),(33,'blog_charset','UTF-8','yes'),(34,'moderation_keys','','no'),(35,'active_plugins','a:3:{i:0;s:17:\"revisr/revisr.php\";i:1;s:37:\"wp-code-prettify/wp-code-prettify.php\";i:2;s:19:\"wp-gfm/markdown.php\";}','yes'),(36,'home','http://blog.gingerik.nl','yes'),(37,'category_base','','yes'),(38,'ping_sites','http://rpc.pingomatic.com/','yes'),(39,'advanced_edit','0','yes'),(40,'comment_max_links','2','yes'),(41,'gmt_offset','','yes'),(42,'default_email_category','1','yes'),(43,'recently_edited','a:5:{i:0;s:82:\"/var/www/blog.gingerik.nl/wp-content/plugins/wp-code-prettify/wp-code-prettify.php\";i:1;s:86:\"/var/www/blog.gingerik.nl/wp-content/plugins/code-prettify-syntax-highlighter/cpsh.php\";i:2;s:64:\"/srv/www/wp-content/blog.gingerik.nl/plugins/akismet/akismet.php\";i:3;s:65:\"/srv/www/wp-content/gingerik.nl/themes/themes/sparkling/style.css\";i:4;s:0:\"\";}','no'),(44,'template','sparkling','yes'),(45,'stylesheet','sparkling','yes'),(46,'comment_whitelist','1','yes'),(47,'blacklist_keys','','no'),(48,'comment_registration','0','yes'),(49,'html_type','text/html','yes'),(50,'use_trackback','0','yes'),(51,'default_role','subscriber','yes'),(52,'db_version','29630','yes'),(53,'uploads_use_yearmonth_folders','1','yes'),(54,'upload_path','','yes'),(55,'blog_public','0','yes'),(56,'default_link_category','0','yes'),(57,'show_on_front','posts','yes'),(58,'tag_base','','yes'),(59,'show_avatars','1','yes'),(60,'avatar_rating','G','yes'),(61,'upload_url_path','','yes'),(62,'thumbnail_size_w','150','yes'),(63,'thumbnail_size_h','150','yes'),(64,'thumbnail_crop','1','yes'),(65,'medium_size_w','300','yes'),(66,'medium_size_h','300','yes'),(67,'avatar_default','mystery','yes'),(68,'large_size_w','1024','yes'),(69,'large_size_h','1024','yes'),(70,'image_default_link_type','file','yes'),(71,'image_default_size','','yes'),(72,'image_default_align','','yes'),(73,'close_comments_for_old_posts','0','yes'),(74,'close_comments_days_old','14','yes'),(75,'thread_comments','1','yes'),(76,'thread_comments_depth','5','yes'),(77,'page_comments','0','yes'),(78,'comments_per_page','50','yes'),(79,'default_comments_page','newest','yes'),(80,'comment_order','asc','yes'),(81,'sticky_posts','a:0:{}','yes'),(82,'widget_categories','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(83,'widget_text','a:0:{}','yes'),(84,'widget_rss','a:0:{}','yes'),(85,'uninstall_plugins','a:1:{s:41:\"code-prettify-syntax-highlighter/cpsh.php\";s:14:\"cpsh_deinstall\";}','no'),(86,'timezone_string','Europe/Amsterdam','yes'),(87,'page_for_posts','0','yes'),(88,'page_on_front','0','yes'),(89,'default_post_format','0','yes'),(90,'link_manager_enabled','0','yes'),(91,'initial_db_version','24448','yes'),(92,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:62:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:9:\"add_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),(93,'widget_search','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(94,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes'),(95,'widget_recent-comments','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(96,'widget_archives','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(97,'widget_meta','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(98,'sidebars_widgets','a:9:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:3:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:10:\"archives-2\";}s:13:\"home-widget-1\";a:0:{}s:13:\"home-widget-2\";a:0:{}s:13:\"home-widget-3\";N;s:15:\"footer-widget-1\";N;s:15:\"footer-widget-2\";N;s:15:\"footer-widget-3\";N;s:13:\"array_version\";i:3;}','yes'),(99,'cron','a:6:{i:1413906683;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1413906696;a:1:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1413907282;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1413911460;a:1:{s:20:\"wp_maybe_auto_update\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1413930392;a:1:{s:11:\"revisr_cron\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}','yes'),(106,'_transient_random_seed','845bc6af7f5f91680bd2efd9991c66b3','yes'),(107,'auth_salt','1EHD+W:^~sz@_[/W*lk|3wbT-#^Q/pxd&tqk*QuR^KBQ;L82%~AJ|@cZdj,@lRHL','yes'),(108,'logged_in_salt','e-M<l|%cDND^3As?_4QDFWl1>beRim,yA5|xRyU#nZVv$x5E$y67SQ=b;-{U.a_<','yes'),(109,'nonce_salt','>)B)=KvUwGU.r}+:U_ASN*$B+$n*@LPH[A<UF7e#XF[Qj~aY~tN4o?_y/1uh#v,c','yes'),(112,'dashboard_widget_options','a:4:{s:25:\"dashboard_recent_comments\";a:1:{s:5:\"items\";i:5;}s:24:\"dashboard_incoming_links\";a:5:{s:4:\"home\";s:23:\"http://blog.gingerik.nl\";s:4:\"link\";s:99:\"http://blogsearch.google.com/blogsearch?scoring=d&partner=wordpress&q=link:http://blog.gingerik.nl/\";s:3:\"url\";s:127:\"http://blogsearch.google.com/blogsearch_feeds?scoring=d&ie=utf-8&num=10&output=rss&partner=wordpress&q=link:http://gingerik.nl/\";s:5:\"items\";i:10;s:9:\"show_date\";b:0;}s:17:\"dashboard_primary\";a:7:{s:4:\"link\";s:26:\"http://wordpress.org/news/\";s:3:\"url\";s:31:\"http://wordpress.org/news/feed/\";s:5:\"title\";s:14:\"WordPress Blog\";s:5:\"items\";i:2;s:12:\"show_summary\";i:1;s:11:\"show_author\";i:0;s:9:\"show_date\";i:1;}s:19:\"dashboard_secondary\";a:7:{s:4:\"link\";s:28:\"http://planet.wordpress.org/\";s:3:\"url\";s:33:\"http://planet.wordpress.org/feed/\";s:5:\"title\";s:20:\"Other WordPress News\";s:5:\"items\";i:5;s:12:\"show_summary\";i:0;s:11:\"show_author\";i:0;s:9:\"show_date\";i:0;}}','yes'),(141,'recently_activated','a:1:{s:41:\"code-prettify-syntax-highlighter/cpsh.php\";i:1413841596;}','yes'),(142,'ftp_credentials','a:3:{s:8:\"hostname\";s:11:\"gingerik.nl\";s:8:\"username\";s:4:\"erik\";s:15:\"connection_type\";s:3:\"ftp\";}','yes'),(149,'_site_transient_timeout_plugins/wp-gfm-0.7.2/markdown.php_new_ve','1413065669','yes'),(150,'_site_transient_plugins/wp-gfm-0.7.2/markdown.php_new_version','0.7.3','yes'),(151,'_site_transient_timeout_plugins/wp-gfm-0.7.2/markdown.php_github','1413065669','yes'),(152,'_site_transient_plugins/wp-gfm-0.7.2/markdown.php_github_data','O:8:\"stdClass\":2:{s:7:\"message\";s:15:\"Bad credentials\";s:17:\"documentation_url\";s:31:\"https://developer.github.com/v3\";}','yes'),(153,'gfm','a:3:{s:21:\"php_md_always_convert\";s:1:\"1\";s:34:\"php_md_fenced_code_blocks_template\";s:76:\"<pre class=\"prettyprint lang-{{lang}}\" title=\"{{title}}\">{{codeblock}}</pre>\";s:10:\"render_url\";s:35:\"https://api.github.com/markdown/raw\";}','yes'),(154,'gfm_array','a:3:{s:21:\"php_md_always_convert\";s:1:\"1\";s:34:\"php_md_fenced_code_blocks_template\";s:76:\"<pre class=\"prettyprint lang-{{lang}}\" title=\"{{title}}\">{{codeblock}}</pre>\";s:10:\"render_url\";s:35:\"https://api.github.com/markdown/raw\";}','yes'),(164,'wp_code_prettify','s:636:\"a:6:{s:19:\"wpcp_update_options\";s:1:\"Y\";s:8:\"load_pos\";s:4:\"head\";s:12:\"allways_load\";s:3:\"yes\";s:10:\"style_file\";s:10:\"desert.css\";s:12:\"style_custom\";s:441:\"/* Style file contents */\r\npre.prettyprint.file {\r\n    margin-left: 2em;\r\n}\r\n\r\n/* Style line numbers */\r\nol {\r\n    counter-reset: item;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n}\r\nol > li {\r\n    display: block;\r\n    margin-bottom: .25em;\r\n    margin-left: 2em;\r\n}\r\nol > li:before {\r\n    display: inline-block;\r\n    content: counter(item, decimal-leading-zero) \" \";\r\n    counter-increment: item;\r\n    width: 2em;\r\n    margin-left: -2em;\r\n}\";s:6:\"Submit\";s:12:\"Save Changes\";}\";','yes'),(172,'theme_mods_twentythirteen','a:4:{s:16:\"header_textcolor\";s:6:\"220e10\";s:12:\"header_image\";s:78:\"http://gingerik.nl/wp-content/themes/twentythirteen/images/headers/diamond.png\";s:17:\"header_image_data\";a:3:{s:3:\"url\";s:78:\"http://gingerik.nl/wp-content/themes/twentythirteen/images/headers/diamond.png\";s:13:\"thumbnail_url\";s:88:\"http://gingerik.nl/wp-content/themes/twentythirteen/images/headers/diamond-thumbnail.png\";s:11:\"description\";s:7:\"Diamond\";}s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1413062161;s:4:\"data\";a:3:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:9:\"sidebar-2\";a:0:{}}}}','yes'),(202,'optionsframework','a:1:{s:2:\"id\";s:9:\"sparkling\";}','yes'),(203,'current_theme','Sparkling','yes'),(204,'theme_mods_themes/sparkling','a:8:{i:0;b:0;s:16:\"header_textcolor\";s:6:\"dadada\";s:16:\"background_color\";s:6:\"F2F2F2\";s:16:\"background_image\";s:0:\"\";s:17:\"background_repeat\";s:6:\"repeat\";s:21:\"background_position_x\";s:4:\"left\";s:21:\"background_attachment\";s:5:\"fixed\";s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1413840546;s:4:\"data\";a:8:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:3:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:10:\"archives-2\";}s:13:\"home-widget-1\";a:0:{}s:13:\"home-widget-2\";a:0:{}s:13:\"home-widget-3\";a:0:{}s:15:\"footer-widget-1\";a:0:{}s:15:\"footer-widget-2\";a:0:{}s:15:\"footer-widget-3\";a:0:{}}}}','yes'),(205,'theme_switched','','yes'),(313,'category_children','a:0:{}','yes'),(474,'_site_transient_timeout_browser_50be0cb264ceab84fc527e654c40b2e2','1413961072','yes'),(475,'_site_transient_browser_50be0cb264ceab84fc527e654c40b2e2','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"38.0.2125.104\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(512,'_site_transient_timeout_browser_d689f678fda35a95bcd984ed9921aae6','1414088831','yes'),(513,'_site_transient_browser_d689f678fda35a95bcd984ed9921aae6','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:12:\"39.0.2171.27\";s:10:\"update_url\";s:28:\"http://www.google.com/chrome\";s:7:\"img_src\";s:49:\"http://s.wordpress.org/images/browsers/chrome.png\";s:11:\"img_src_ssl\";s:48:\"https://wordpress.org/images/browsers/chrome.png\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(530,'_transient_timeout_plugin_slugs','1413929331','no'),(531,'_transient_plugin_slugs','a:4:{i:0;s:19:\"akismet/akismet.php\";i:1;s:19:\"wp-gfm/markdown.php\";i:2;s:17:\"revisr/revisr.php\";i:3;s:37:\"wp-code-prettify/wp-code-prettify.php\";}','no'),(606,'_site_transient_timeout_browser_f831d14a192ca255be138b1d201a7d7f','1414442769','yes'),(607,'_site_transient_browser_f831d14a192ca255be138b1d201a7d7f','a:9:{s:8:\"platform\";s:5:\"Linux\";s:4:\"name\";s:13:\"Mobile Safari\";s:7:\"version\";s:6:\"537.36\";s:10:\"update_url\";s:0:\"\";s:7:\"img_src\";s:0:\"\";s:11:\"img_src_ssl\";s:0:\"\";s:15:\"current_version\";s:0:\"\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;}','yes'),(608,'_transient_timeout_dash_20494a3d90a6669585674ed0eb8dcd8f','1413881172','no'),(609,'_transient_dash_20494a3d90a6669585674ed0eb8dcd8f','<p><strong>RSS Error</strong>: A feed could not be found at http://blogsearch.google.com/blogsearch_feeds?scoring=d&ie=utf-8&num=10&output=rss&partner=wordpress&q=link:http://gingerik.nl/. A feed with an invalid mime type may fall victim to this error, or SimplePie was unable to auto-discover it.. Use force_feed() if you are certain this URL is a real feed.</p>','no'),(610,'_transient_timeout_dash_aa95765b5cc111c56d5993d476b1c2f0','1413881189','no'),(611,'_transient_dash_aa95765b5cc111c56d5993d476b1c2f0','<div class=\"rss-widget\"><p><strong>RSS Error</strong>: This XML document is invalid, likely due to invalid characters. XML error: EntityRef: expecting \';\' at line 237, column 9</p></div>','no'),(612,'_transient_timeout_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca','1413881255','yes'),(613,'_transient_feed_ac0b00fe65abe10e0c5b588f3ed8c7ca','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:51:\"\n	\n	\n	\n	\n	\n	\n		\n		\n	\n	\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"https://wordpress.org/news\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"WordPress News\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:13:\"lastBuildDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 15 Oct 2014 13:39:33 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"http://wordpress.org/?v=4.1-alpha-20141018\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 4.0 â€œBennyâ€\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"https://wordpress.org/news/2014/09/benny/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"https://wordpress.org/news/2014/09/benny/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 17:05:39 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3296\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:370:\"Version 4.0 of WordPress, named â€œBennyâ€ in honor of jazz clarinetist and bandleader Benny Goodman, is availableÂ for downloadÂ or update in your WordPress dashboard.Â While 4.0 is just another number for us after 3.9 and before 4.1, we feel we&#8217;ve put a little extra polish into it. This release brings you a smoother writing and management experience [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:23575:\"<p>Version 4.0 of WordPress, named â€œBennyâ€ in honor of jazz clarinetist and bandleader <a href=\"http://en.wikipedia.org/wiki/Benny_Goodman\">Benny Goodman</a>, is availableÂ <a href=\"https://wordpress.org/download/\">for download</a>Â or update in your WordPress dashboard.Â While 4.0 is just another number for us after 3.9 and before 4.1, we feel we&#8217;ve put a little extra polish into it. This release brings you a smoother writing and management experience we think you&#8217;ll enjoy.</p>\n<div id=\"v-bUdzKMro-1\" class=\"video-player\"><embed id=\"v-bUdzKMro-1-video\" src=\"https://v0.wordpress.com/player.swf?v=1.03&amp;guid=bUdzKMro&amp;isDynamicSeeking=true\" type=\"application/x-shockwave-flash\" width=\"692\" height=\"388\" title=\"Introducing WordPress 4.0 &quot;Benny&quot;\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\"></embed></div>\n<hr />\n<h2 style=\"text-align: center\">Manage your media with style</h2>\n<p><img class=\"alignnone size-full wp-image-3316\" src=\"https://wordpress.org/news/files/2014/09/media.jpg\" alt=\"Media Library\" width=\"1000\" height=\"586\" />Explore your uploads in a beautiful, endless grid. A new details preview makes viewing and editing any amount of media in sequence a snap.</p>\n<hr />\n<h2 style=\"text-align: center\">Working with embeds has never been easier</h2>\n<div style=\"width: 632px; height: 445px; \" class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement(\'video\');</script><![endif]-->\n<video class=\"wp-video-shortcode\" id=\"video-3296-1\" width=\"632\" height=\"445\" autoplay=\"true\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"//s.w.org/images/core/4.0/embed.mp4?_=1\" /><source type=\"video/webm\" src=\"//s.w.org/images/core/4.0/embed.webm?_=1\" /><source type=\"video/ogg\" src=\"//s.w.org/images/core/4.0/embed.ogv?_=1\" /><a href=\"//s.w.org/images/core/4.0/embed.mp4\">//s.w.org/images/core/4.0/embed.mp4</a></video></div>\n<p>Paste in a YouTube URL on a new line, and watch it magically become an embedded video. Now try it with a tweet. Oh yeah â€” embedding has become a visual experience. The editor shows a true preview of your embedded content, saving you time and giving you confidence.</p>\n<p>Weâ€™ve expanded the services supported by default, too â€” you can embed videos from CollegeHumor, playlists from YouTube, and talks from TED.Â <a href=\"https://codex.wordpress.org/Embeds\">Check out all of the embeds</a> that WordPress supports.</p>\n<hr />\n<h2 style=\"text-align: center\">Focus on your content</h2>\n<div style=\"width: 632px; height: 356px; \" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-3296-2\" width=\"632\" height=\"356\" autoplay=\"true\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"//s.w.org/images/core/4.0/focus.mp4?_=2\" /><source type=\"video/webm\" src=\"//s.w.org/images/core/4.0/focus.webm?_=2\" /><source type=\"video/ogg\" src=\"//s.w.org/images/core/4.0/focus.ogv?_=2\" /><a href=\"//s.w.org/images/core/4.0/focus.mp4\">//s.w.org/images/core/4.0/focus.mp4</a></video></div>\n<p>Writing and editing is smoother and more immersive with an editor that expands to fit your content as you write, and keeps the formatting tools available at all times.</p>\n<hr />\n<h2 style=\"text-align: center\">Finding the right plugin</h2>\n<p><img class=\"aligncenter size-large wp-image-3309\" src=\"https://wordpress.org/news/files/2014/09/add-plugin1-1024x600.png\" alt=\"Add plugins\" width=\"692\" height=\"405\" /></p>\n<p>There are more than 30,000 free and open source plugins in the WordPress plugin directory. WordPress 4.0 makes it easier to find the right one for your needs, with new metrics, improved search, and a more visual browsing experience.</p>\n<hr />\n<h2 style=\"text-align: center\">The Ensemble</h2>\n<p>This release was led by <a href=\"http://helenhousandi.com\">Helen Hou-SandÃ­</a>, with the help of these fine individuals. There are 275 contributors with props in this release, a new high. Pull up some Benny Goodman on your music service of choice, as a bandleader or in one of his turns as a classical clarinetist, and check out some of their profiles:</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>, <a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>, <a href=\"https://profiles.wordpress.org/viper007bond\">Alex Mills (Viper007Bond)</a>, <a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>, <a href=\"https://profiles.wordpress.org/alexanderrohmann\">Alexander Rohmann</a>, <a href=\"https://profiles.wordpress.org/aliso\">Alison Barrett</a>, <a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>, <a href=\"https://profiles.wordpress.org/amit\">Amit Gupta</a>, <a href=\"https://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>, <a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>, <a href=\"https://profiles.wordpress.org/andrezrv\">Andres Villarreal</a>, <a href=\"https://profiles.wordpress.org/zamfeer\">Andrew Mowe</a>, <a href=\"https://profiles.wordpress.org/sumobi\">Andrew Munro (sumobi)</a>, <a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"https://profiles.wordpress.org/andy\">Andy Skelton</a>, <a href=\"https://profiles.wordpress.org/ankit-k-gupta\">Ankit K Gupta</a>, <a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>, <a href=\"https://profiles.wordpress.org/arnee\">arnee</a>, <a href=\"https://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>, <a href=\"https://profiles.wordpress.org/filosofo\">Austin Matzko</a>, <a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>, <a href=\"https://profiles.wordpress.org/kau-boy\">Bernhard Kau</a>, <a href=\"https://profiles.wordpress.org/boonebgorges\">Boone Gorges</a>, <a href=\"https://profiles.wordpress.org/bradyvercher\">Brady Vercher</a>, <a href=\"https://profiles.wordpress.org/bramd\">Bram Duvigneau</a>, <a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>, <a href=\"https://profiles.wordpress.org/brianlayman\">Brian Layman</a>, <a href=\"https://profiles.wordpress.org/rzen\">Brian Richards</a>, <a href=\"https://profiles.wordpress.org/camdensegal\">Camden Segal</a>, <a href=\"https://profiles.wordpress.org/sixhours\">Caroline Moore</a>, <a href=\"https://profiles.wordpress.org/mackensen\">Charles Fulton</a>, <a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"https://profiles.wordpress.org/chrico\">ChriCo</a>, <a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>, <a href=\"https://profiles.wordpress.org/chrisl27\">chrisl27</a>, <a href=\"https://profiles.wordpress.org/caxelsson\">Christian Axelsson</a>, <a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>, <a href=\"https://profiles.wordpress.org/boda1982\">Christopher Spires</a>, <a href=\"https://profiles.wordpress.org/clifgriffin\">Clifton Griffin</a>, <a href=\"https://profiles.wordpress.org/jupiterwise\">Corey McKrill</a>, <a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>, <a href=\"https://profiles.wordpress.org/extendwings\">Daisuke Takahashi</a>, <a href=\"https://profiles.wordpress.org/ghost1227\">Dan Griffiths</a>, <a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>, <a href=\"https://profiles.wordpress.org/danielhuesken\">Daniel Husken</a>, <a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>, <a href=\"https://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>, <a href=\"https://profiles.wordpress.org/dkotter\">Darin Kotter</a>, <a href=\"https://profiles.wordpress.org/koop\">Daryl Koopersmith</a>, <a href=\"https://profiles.wordpress.org/dllh\">Daryl L. L. Houston (dllh)</a>, <a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>, <a href=\"https://profiles.wordpress.org/dlh\">David Herrera</a>, <a href=\"https://profiles.wordpress.org/dnaber-de\">David Naber</a>, <a href=\"https://profiles.wordpress.org/davidthemachine\">DavidTheMachine</a>, <a href=\"https://profiles.wordpress.org/debaat\">DeBAAT</a>, <a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"https://profiles.wordpress.org/donncha\">Donncha O Caoimh</a>, <a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>, <a href=\"https://profiles.wordpress.org/dustyn\">Dustyn Doyle</a>, <a href=\"https://profiles.wordpress.org/eddiemoya\">Eddie Moya</a>, <a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>, <a href=\"https://profiles.wordpress.org/edwin-at-studiojoyocom\">Edwin Siebel</a>, <a href=\"https://profiles.wordpress.org/ehg\">ehg</a>, <a href=\"https://profiles.wordpress.org/tmeister\">Enrique Chavez</a>, <a href=\"https://profiles.wordpress.org/erayalakese\">erayalakese</a>, <a href=\"https://profiles.wordpress.org/ericlewis\">Eric Andrew Lewis</a>, <a href=\"https://profiles.wordpress.org/ebinnion\">Eric Binnion</a>, <a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>, <a href=\"https://profiles.wordpress.org/ejdanderson\">Evan Anderson</a>, <a href=\"https://profiles.wordpress.org/eherman24\">Evan Herman</a>, <a href=\"https://profiles.wordpress.org/fab1en\">Fab1en</a>, <a href=\"https://profiles.wordpress.org/fahmiadib\">Fahmi Adib</a>, <a href=\"https://profiles.wordpress.org/feedmeastraycat\">feedmeastraycat</a>, <a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>, <a href=\"https://profiles.wordpress.org/garhdez\">garhdez</a>, <a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>, <a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>, <a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>, <a href=\"https://profiles.wordpress.org/garza\">garza</a>, <a href=\"https://profiles.wordpress.org/gauravmittal1995\">gauravmittal1995</a>, <a href=\"https://profiles.wordpress.org/gavra\">Gavrisimo</a>, <a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>, <a href=\"https://profiles.wordpress.org/vancoder\">Grant Mangham</a>, <a href=\"https://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"https://profiles.wordpress.org/bordoni\">Gustavo Bordoni</a>, <a href=\"https://profiles.wordpress.org/harrym\">harrym</a>, <a href=\"https://profiles.wordpress.org/hebbet\">hebbet</a>, <a href=\"https://profiles.wordpress.org/hinnerk\">Hinnerk Altenburg</a>, <a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a>, <a href=\"https://profiles.wordpress.org/iljoja\">iljoja</a>, <a href=\"https://profiles.wordpress.org/imath\">imath</a>, <a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"https://profiles.wordpress.org/issuu\">issuu</a>, <a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>, <a href=\"https://profiles.wordpress.org/jacklenox\">Jack Lenox</a>, <a href=\"https://profiles.wordpress.org/jackreichert\">Jack Reichert</a>, <a href=\"https://profiles.wordpress.org/jacobdubail\">Jacob Dubail</a>, <a href=\"https://profiles.wordpress.org/janhenkg\">JanHenkG</a>, <a href=\"https://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>, <a href=\"https://profiles.wordpress.org/jwenerd\">Jared Wenerd</a>, <a href=\"https://profiles.wordpress.org/jaza613\">Jaza613</a>, <a href=\"https://profiles.wordpress.org/jeffstieler\">Jeff Stieler</a>, <a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"https://profiles.wordpress.org/jpry\">Jeremy Pry</a>, <a href=\"https://profiles.wordpress.org/slimndap\">Jeroen Schmit</a>, <a href=\"https://profiles.wordpress.org/jerrysarcastic\">Jerry Bates (jerrysarcastic)</a>, <a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>, <a href=\"https://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>, <a href=\"https://profiles.wordpress.org/engelen\">Jesper van Engelen</a>, <a href=\"https://profiles.wordpress.org/jesper800\">Jesper van Engelen</a>, <a href=\"https://profiles.wordpress.org/jessepollak\">Jesse Pollak</a>, <a href=\"https://profiles.wordpress.org/jgadbois\">jgadbois</a>, <a href=\"https://profiles.wordpress.org/jartes\">Joan Artes</a>, <a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>, <a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"https://profiles.wordpress.org/jkudish\">Joey Kudish</a>, <a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>, <a href=\"https://profiles.wordpress.org/johnzanussi\">John Zanussi</a>, <a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>, <a href=\"https://profiles.wordpress.org/jonnyauk\">jonnyauk</a>, <a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>, <a href=\"https://profiles.wordpress.org/softmodeling\">Jordi Cabot</a>, <a href=\"https://profiles.wordpress.org/jjeaton\">Josh Eaton</a>, <a href=\"https://profiles.wordpress.org/tai\">JOTAKI Taisuke</a>, <a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>, <a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>, <a href=\"https://profiles.wordpress.org/jtsternberg\">Justin Sternberg</a>, <a href=\"https://profiles.wordpress.org/greenshady\">Justin Tadlock</a>, <a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>, <a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>, <a href=\"https://profiles.wordpress.org/ixkaito\">Kaito</a>, <a href=\"https://profiles.wordpress.org/kapeels\">kapeels</a>, <a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"https://profiles.wordpress.org/kevinlangleyjr\">Kevin Langley</a>, <a href=\"https://profiles.wordpress.org/kworthington\">Kevin Worthington</a>, <a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>, <a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>, <a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>, <a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>, <a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>, <a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"https://profiles.wordpress.org/krogsgard\">krogsgard</a>, <a href=\"https://profiles.wordpress.org/kurtpayne\">Kurt Payne</a>, <a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>, <a href=\"https://profiles.wordpress.org/lessbloat\">lessbloat</a>, <a href=\"https://profiles.wordpress.org/layotte\">Lew Ayotte</a>, <a href=\"https://profiles.wordpress.org/lritter\">lritter</a>, <a href=\"https://profiles.wordpress.org/lukecarbis\">Luke Carbis</a>, <a href=\"https://profiles.wordpress.org/lgedeon\">Luke Gedeon</a>, <a href=\"https://profiles.wordpress.org/m_i_n\">m_i_n</a>, <a href=\"https://profiles.wordpress.org/funkatronic\">Manny Fleurmond</a>, <a href=\"https://profiles.wordpress.org/targz-1\">Manuel Schmalstieg</a>, <a href=\"https://profiles.wordpress.org/clorith\">Marius (Clorith)</a>, <a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>, <a href=\"https://profiles.wordpress.org/mjbanks\">Matt Banks</a>, <a href=\"https://profiles.wordpress.org/sivel\">Matt Martz</a>, <a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>, <a href=\"https://profiles.wordpress.org/mattwiebe\">Matt Wiebe</a>, <a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>, <a href=\"https://profiles.wordpress.org/mdbitz\">Matthew Denton</a>, <a href=\"https://profiles.wordpress.org/mattheweppelsheimer\">Matthew Eppelsheimer</a>, <a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>, <a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>, <a href=\"https://profiles.wordpress.org/meekyhwang\">meekyhwang</a>, <a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"https://profiles.wordpress.org/midxcat\">mi_cat</a>, <a href=\"https://profiles.wordpress.org/mdawaffe\">Michael Adams (mdawaffe)</a>, <a href=\"https://profiles.wordpress.org/michalzuber\">michalzuber</a>, <a href=\"https://profiles.wordpress.org/mauteri\">Mike Auteri</a>, <a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>, <a href=\"https://profiles.wordpress.org/mikejolley\">Mike Jolley</a>, <a href=\"https://profiles.wordpress.org/mikelittle\">Mike Little</a>, <a href=\"https://profiles.wordpress.org/mikemanger\">Mike Manger</a>, <a href=\"https://profiles.wordpress.org/mnelson4\">Mike Nelson</a>, <a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>, <a href=\"https://profiles.wordpress.org/mikeyarce\">Mikey Arce</a>, <a href=\"https://profiles.wordpress.org/dimadin\">Milan Dinic</a>, <a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>, <a href=\"https://profiles.wordpress.org/usermrpapa\">Mr Papa</a>, <a href=\"https://profiles.wordpress.org/mrmist\">mrmist</a>, <a href=\"https://profiles.wordpress.org/m_uysl\">Mustafa Uysal</a>, <a href=\"https://profiles.wordpress.org/muvimotv\">MuViMoTV</a>, <a href=\"https://profiles.wordpress.org/nabil_kadimi\">nabil_kadimi</a>, <a href=\"https://profiles.wordpress.org/namibia\">Namibia</a>, <a href=\"https://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>, <a href=\"https://profiles.wordpress.org/nd987\">nd987</a>, <a href=\"https://profiles.wordpress.org/neil_pie\">Neil Pie</a>, <a href=\"https://profiles.wordpress.org/niallkennedy\">Niall Kennedy</a>, <a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>, <a href=\"https://profiles.wordpress.org/nbachiyski\">Nikolay Bachiyski</a>, <a href=\"https://profiles.wordpress.org/schoenwaldnils\">Nils Schonwald</a>, <a href=\"https://profiles.wordpress.org/ninos-ego\">Ninos</a>, <a href=\"https://profiles.wordpress.org/nvwd\">Nowell VanHoesen</a>, <a href=\"https://profiles.wordpress.org/compute\">Patrick Hesselberg</a>, <a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>, <a href=\"https://profiles.wordpress.org/pdclark\">Paul Clark</a>, <a href=\"https://profiles.wordpress.org/paulschreiber\">Paul Schreiber</a>, <a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>, <a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"https://profiles.wordpress.org/westi\">Peter Westwood</a>, <a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>, <a href=\"https://profiles.wordpress.org/philipjohn\">Philip John</a>, <a href=\"https://profiles.wordpress.org/senlin\">Piet</a>, <a href=\"https://profiles.wordpress.org/psoluch\">Piotr Soluch</a>, <a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>, <a href=\"https://profiles.wordpress.org/purzlbaum\">purzlbaum</a>, <a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>, <a href=\"https://profiles.wordpress.org/rclations\">RC Lations</a>, <a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>, <a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>, <a href=\"https://profiles.wordpress.org/rob1n\">rob1n</a>, <a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>, <a href=\"https://profiles.wordpress.org/rdall\">Robert Dall</a>, <a href=\"https://profiles.wordpress.org/harmr\">RobertHarm</a>, <a href=\"https://profiles.wordpress.org/rohan013\">Rohan Rawat</a>, <a href=\"https://profiles.wordpress.org/rhurling\">Rouven Hurling</a>, <a href=\"https://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>, <a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>, <a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"https://profiles.wordpress.org/sammybeats\">Sam Brodie</a>, <a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"https://profiles.wordpress.org/sathishn\">Sathish Nagarajan</a>, <a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>, <a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>, <a href=\"https://profiles.wordpress.org/scribu\">scribu</a>, <a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>, <a href=\"https://profiles.wordpress.org/nessworthy\">Sean Nessworthy</a>, <a href=\"https://profiles.wordpress.org/sergejmueller\">Sergej Muller</a>, <a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"https://profiles.wordpress.org/shanebp\">shanebp</a>, <a href=\"https://profiles.wordpress.org/sharonaustin\">Sharon Austin</a>, <a href=\"https://profiles.wordpress.org/shaunandrews\">Shaun Andrews</a>, <a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>, <a href=\"https://profiles.wordpress.org/simonp303\">simonp303</a>, <a href=\"https://profiles.wordpress.org/slobodanmanic\">Slobodan Manic</a>, <a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>, <a href=\"https://profiles.wordpress.org/sphoid\">sphoid</a>, <a href=\"https://profiles.wordpress.org/stephdau\">Stephane Daury</a>, <a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>, <a href=\"https://profiles.wordpress.org/stompweb\">Steven Jones</a>, <a href=\"https://profiles.wordpress.org/strangerstudios\">strangerstudios</a>, <a href=\"https://profiles.wordpress.org/5um17\">Sumit Singh</a>, <a href=\"https://profiles.wordpress.org/t4k1s\">t4k1s</a>, <a href=\"https://profiles.wordpress.org/iamtakashi\">Takashi Irie</a>, <a href=\"https://profiles.wordpress.org/taylorde\">Taylor Dewey</a>, <a href=\"https://profiles.wordpress.org/thomasvanderbeek\">Thomas van der Beek</a>, <a href=\"https://profiles.wordpress.org/tillkruess\">Till Kruss</a>, <a href=\"https://profiles.wordpress.org/codenameeli\">Tim \'Eli\' Dalbey</a>, <a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>, <a href=\"https://profiles.wordpress.org/tjnowell\">Tom J Nowell</a>, <a href=\"https://profiles.wordpress.org/willmot\">Tom Willmot</a>, <a href=\"https://profiles.wordpress.org/topher1kenobe\">Topher</a>, <a href=\"https://profiles.wordpress.org/torresga\">torresga</a>, <a href=\"https://profiles.wordpress.org/liljimmi\">Tracy Levesque</a>, <a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>, <a href=\"https://profiles.wordpress.org/treyhunner\">treyhunner</a>, <a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>, <a href=\"https://profiles.wordpress.org/vinod-dalvi\">Vinod Dalvi</a>, <a href=\"https://profiles.wordpress.org/vlajos\">vlajos</a>, <a href=\"https://profiles.wordpress.org/voldemortensen\">voldemortensen</a>, <a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>, <a href=\"https://profiles.wordpress.org/winterdev\">winterDev</a>, <a href=\"https://profiles.wordpress.org/wojtekszkutnik\">Wojtek Szkutnik</a>, <a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>, <a href=\"https://profiles.wordpress.org/katzwebdesign\">Zack Katz</a>, <a href=\"https://profiles.wordpress.org/tollmanz\">Zack Tollman</a>, and <a href=\"https://profiles.wordpress.org/zoerooney\">Zoe Rooney</a>.Â Also thanks to <a href=\"http://michaelpick.wordpress.com/\">Michael Pick</a> for producing the release video, and Helen with <a href=\"http://adriansandi.com\">AdriÃ¡n SandÃ­</a> for the music.</p>\n<p>If you want to follow along or help out, check out <a href=\"https://make.wordpress.org/\">Make WordPress</a> and our <a href=\"https://make.wordpress.org/core/\">core development blog</a>. Thanks for choosing WordPress. See you soon for version 4.1!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"https://wordpress.org/news/2014/09/benny/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"WordPress 4.0 Release Candidate\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"https://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"https://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 27 Aug 2014 12:20:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3287\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:321:\"The first release candidate for WordPress 4.0 is now available! In RC 1, weâ€™ve made refinements to what we&#8217;ve been working on for this release. Check out the Beta 1 announcement post for more details on those features. We hope to ship WordPress 4.0 next week, but we need your help to get there.Â If you [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2134:\"<p>The first release candidate for WordPress 4.0 is now available!</p>\n<p>In RC 1, weâ€™ve made refinements to what we&#8217;ve been working on for this release. Check out the <a href=\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\">Beta 1 announcement post</a> for more details on those features. We hope to ship WordPress 4.0 <em>next week</em>, but we need your help to get there.Â If you havenâ€™t tested 4.0 yet, thereâ€™s no time like the present. (Please, not on a production site, unless youâ€™re adventurous.)</p>\n<p><strong>Think youâ€™ve found a bug?Â </strong>Please post to theÂ <a href=\"https://wordpress.org/support/forum/alphabeta/\">Alpha/Beta area in the support forums</a>. If any known issues come up, youâ€™ll be able toÂ <a href=\"https://core.trac.wordpress.org/report/5\">find them here</a>.</p>\n<p>To test WordPress 4.0 RC1, try theÂ <a href=\"https://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>Â plugin (youâ€™ll want â€œbleeding edge nightliesâ€). Or you canÂ <a href=\"https://wordpress.org/wordpress-4.0-RC1.zip\">download the release candidate here</a>Â (zip).Â If youâ€™d like to learn more about whatâ€™s new in WordPress 4.0, visit the awesome About screen in your dashboard (<strong><img src=\"https://i0.wp.com/core.svn.wordpress.org/branches/3.6/wp-content/themes/twentyten/images/wordpress.png?w=692\" alt=\"\" width=\"16\" height=\"16\" />Â â†’ About</strong>Â in the toolbar).</p>\n<p><strong>Developers,</strong>Â please test your plugins and themes against WordPress 4.0 and update your plugin&#8217;s <em>Tested up to</em> version in the readme to 4.0 before next week. If you find compatibility problems, please be sure to post any issues to the support forums so we can figure those out before the final release.Â You also may want to <a href=\"https://make.wordpress.org/core/2014/08/21/introducing-plugin-icons-in-the-plugin-installer/\">give your plugin an icon</a>, which we launched last week and will appear in the dashboard along with banners.</p>\n<p><em>It is almost time</em><br />\n<em> For the 4.0 release</em><br />\n<em> And its awesomeness</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"https://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 4.0 Beta 4\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/08/wordpress-4-0-beta-4/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"https://wordpress.org/news/2014/08/wordpress-4-0-beta-4/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 15 Aug 2014 05:06:19 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3280\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:353:\"The fourth and likely final beta for WordPress 4.0 is now available. We&#8217;ve made more than 250 changes in the past month, including: Further improvements to the editor scrolling experience, especially when it comes to the second column of boxes. Better handling of small screens in the media library modals. A separate bulk selection mode [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2003:\"<p>The fourth and likely final beta for WordPress 4.0 is now available. We&#8217;ve made <a href=\"https://core.trac.wordpress.org/log?rev=29496&amp;stop_rev=29229&amp;limit=300\">more than 250 changes</a> in the past month, including:</p>\n<ul>\n<li>Further improvements to the editor scrolling experience, especially when it comes to the second column of boxes.</li>\n<li>Better handling of small screens in the media library modals.</li>\n<li>A separate bulk selection mode for the media library grid view.</li>\n<li>Improvements to the installation language selector.</li>\n<li>Visual tweaks to plugin details and customizer panels.</li>\n</ul>\n<p><strong>We need your help</strong>.Â Weâ€™re still aimingÂ for a release this month, which means the next week will be critical forÂ identifying and squashing bugs. If youâ€™re just joining us, please seeÂ <a href=\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\">the Beta 1 announcement post</a>Â for what to look out for.</p>\n<p><strong>If you think youâ€™ve found a bug</strong>, you can post to theÂ <a href=\"https://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a>Â in the support forums, where friendly moderators are standing by.Â <b>Plugin developers</b><strong>,</strong> if you havenâ€™t tested WordPress 4.0 yet, now is the time â€” and be sure to update the â€œtested up toâ€ version for your plugins so theyâ€™re listed as compatible with 4.0.</p>\n<p><strong>This software is still in development,</strong>Â so we donâ€™t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try theÂ <a href=\"https://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>Â plugin (youâ€™ll want â€œbleeding edge nightliesâ€). Or you canÂ <a href=\"https://wordpress.org/wordpress-4.0-beta4.zip\">download the beta here</a>Â (zip).</p>\n<p><em>We are working hard</em><br />\n<em>To finish up 4.0<br />\n</em><em>Will you help us too?</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://wordpress.org/news/2014/08/wordpress-4-0-beta-4/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"WordPress 3.9.2 Security Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/news/2014/08/wordpress-3-9-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/news/2014/08/wordpress-3-9-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 06 Aug 2014 19:04:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3269\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:377:\"WordPress 3.9.2 is now available as a security release for all previous versions.Â We strongly encourage you to update your sites immediately. This release fixes a possible denial of service issue in PHP&#8217;s XML processing, reported by Nir Goldshlager of the Salesforce.com Product Security Team. ItÂ Â was fixed by Michael Adams and Andrew Nacin of the WordPress [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2353:\"<p>WordPress 3.9.2 is now available as a security release for all previous versions.Â We strongly encourage you to update your sites immediately.</p>\n<p>This release fixes a possible denial of service issue in PHP&#8217;s XML processing, reported by <a href=\"https://twitter.com/nirgoldshlager\">Nir Goldshlager</a> of the Salesforce.com Product Security Team. ItÂ Â was fixed by Michael Adams and Andrew Nacin of the WordPress security team andÂ David Rothstein of the <a href=\"https://www.drupal.org/SA-CORE-2014-004\">Drupal security team</a>. This is the first time our two projects have coordinated joint security releases.</p>\n<p>WordPress 3.9.2 also contains other security changes:</p>\n<ul>\n<li>Fixes a possible but unlikely code execution when processing widgets (WordPress is not affected by default), discovered by <a href=\"http://www.buayacorp.com/\">Alex Concha</a> of the WordPress security team.</li>\n<li>Prevents information disclosure via XML entity attacks in the external GetID3 library, reported by <a href=\"http://onsec.ru/en/\">Ivan Novikov</a>Â of ONSec.</li>\n<li>Adds protections against brute attacks against CSRF tokens, reported by <a href=\"http://systemoverlord.com/\">David Tomaschik</a> of the Google Security Team.</li>\n<li>Contains some additional security hardening, like preventing cross-site scripting that could be triggered only by administrators.</li>\n</ul>\n<p>We appreciated responsible disclosure of these issues directly to our security team. For more information, see the <a href=\"https://codex.wordpress.org/Version_3.9.2\">release notes</a> or consult the <a href=\"https://core.trac.wordpress.org/log/branches/3.9?stop_rev=29383&amp;rev=29411\">list of changes</a>.</p>\n<p><a href=\"https://wordpress.org/download/\">Download WordPress 3.9.2</a> or venture over to <strong>Dashboard â†’ Updates</strong> and simply click &#8220;Update Now&#8221;.</p>\n<p>Sites that support automatic background updates will be updated to WordPress 3.9.2 within 12 hours. (If you are still on WordPress 3.8.3 or 3.7.3, you will also be updated to 3.8.4 or 3.7.4. We don&#8217;t support older versions, so please update to 3.9.2 for the latest and greatest.)</p>\n<p>Already testing WordPress 4.0? The third beta is <a href=\"https://wordpress.org/wordpress-4.0-beta3.zip\">now available</a> (zip) and it contains these security fixes.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/08/wordpress-3-9-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 4.0 Beta 2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 18 Jul 2014 21:15:35 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3261\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:374:\"WordPress 4.0 Beta 2 is now available for download and testing.Â This is software still in development, so weÂ donâ€™t recommend that you run it on a production site. To get the beta, try theÂ WordPress Beta TesterÂ plugin (youâ€™ll want â€œbleeding edge nightliesâ€). Or you canÂ download the beta hereÂ (zip). For more of whatâ€™s new in version 4.0,Â check out [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:1745:\"<p>WordPress 4.0 Beta 2 is now available for download and testing.Â This is software still in development, so weÂ donâ€™t recommend that you run it on a production site. To get the beta, try theÂ <a href=\"https://wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>Â plugin (youâ€™ll want â€œbleeding edge nightliesâ€). Or you canÂ <a href=\"https://wordpress.org/wordpress-4.0-beta2.zip\">download the beta here</a>Â (zip).</p>\n<p>For more of whatâ€™s new in version 4.0,Â <a href=\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\">check out the Beta 1 blog post</a>. Some of the changes in Beta 2 include:</p>\n<ul>\n<li>Further refinements for the the plugin installation and media library experiences.</li>\n<li>Updated TinyMCE, which now includes better indentation for lists and the restoration of the color picker.</li>\n<li>Cookies are now tied to a session internally, so if you have trouble logging in, <a href=\"https://core.trac.wordpress.org/ticket/20276\">#20276</a> may be the culprit.</li>\n<li>Various bug fixes (there were <a href=\"https://core.trac.wordpress.org/log?rev=29228&amp;stop_rev=29060&amp;limit=200\">nearly 170Â changes</a> since last week).</li>\n</ul>\n<p>If you think youâ€™ve found a bug, you can post to theÂ <a href=\"https://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a>Â in the support forums. Or, if youâ€™re comfortable writing a bug report,Â <a href=\"https://core.trac.wordpress.org/\">file one on the WordPress Trac</a>. There, you can also findÂ <a href=\"https://core.trac.wordpress.org/tickets/major\">a list of known bugs</a>Â andÂ <a href=\"https://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=4.0\">everything weâ€™ve fixed</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"WordPress 4.0 Beta 1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 10 Jul 2014 10:17:41 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3248\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:329:\"WordPress 4.0 Beta 1 is now available! This software is still in development, so we donâ€™t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the WordPress Beta Tester plugin (youâ€™ll want â€œbleeding edge nightliesâ€). Or you can [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Helen Hou-Sandi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:4031:\"<p>WordPress 4.0 Beta 1 is now available!</p>\n<p><strong>This software is still in development,</strong> so we donâ€™t recommend you run it on a production site. Consider setting up a test site just to play with the new version. To test WordPress 4.0, try the <a href=\"https://wordpress.org/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a> plugin (youâ€™ll want â€œbleeding edge nightliesâ€). Or you can <a href=\"https://wordpress.org/wordpress-4.0-beta1.zip\">download the beta here</a> (zip).</p>\n<p>4.0 is due out next month, but to get there, we need your help testing what we&#8217;ve been working on:</p>\n<ul>\n<li><strong>Previews of <a href=\"https://codex.wordpress.org/Embeds\">embedding via URLs</a></strong> in the visual editor and the &#8220;Insert from URL&#8221; tab in the media modal. Try pasting a URL (such as a <a href=\"http://wordpress.tv/\">WordPress.tv</a> or YouTube video) onto its own line in the visual editor. (<a href=\"https://core.trac.wordpress.org/ticket/28195\">#28195</a>, <a href=\"https://core.trac.wordpress.org/ticket/15490\">#15490</a>)</li>\n<li>The <strong>Media Library</strong> now has a &#8220;grid&#8221; view in addition to the existing list view. Clicking on an item takes you into a modal where you can see a larger preview and edit information about that attachment, and you can navigate between items right from the modal without closing it. (<a href=\"https://core.trac.wordpress.org/ticket/24716\">#24716</a>)</li>\n<li>We&#8217;re freshening up the <strong>plugin install experience</strong>. You&#8217;ll see some early visual changes as well as more information when searching for plugins and viewing details. (<a href=\"https://core.trac.wordpress.org/ticket/28785\">#28785</a>, <a href=\"https://core.trac.wordpress.org/ticket/27440\">#27440</a>)</li>\n<li><strong>Selecting a language</strong> when you run the installation process. (<a href=\"https://core.trac.wordpress.org/ticket/28577\">#28577</a>)</li>\n<li>The <strong>editor</strong> intelligently resizes and its top and bottom bars pin when needed. Browsers don&#8217;t like to agree on where to put things like cursors, so if you find a bug here, please also let us know your browser and operating system. (<a href=\"https://core.trac.wordpress.org/ticket/28328\">#28328</a>)</li>\n<li>We&#8217;ve made some improvements to how your keyboard and cursor interact with <strong>TinyMCE views</strong> such as the gallery preview. Much like the editor resizing and scrolling improvements, knowing about your setup is particularly important for bug reports here. (<a href=\"https://core.trac.wordpress.org/ticket/28595\">#28595</a>)</li>\n<li><strong>Widgets in the Customizer</strong> are now loaded in a separate panel. (<a href=\"https://core.trac.wordpress.org/ticket/27406\">#27406</a>)</li>\n<li>We&#8217;ve also made some changes to some <strong>formatting</strong> functions, so if you see quotes curling in the wrong direction, please file a bug report.</li>\n</ul>\n<p><strong>If you think youâ€™ve found a bug</strong>, you can post to the <a href=\"https://wordpress.org/support/forum/alphabeta\">Alpha/Beta area</a> in the support forums. Weâ€™d love to hear from you! If youâ€™re comfortable writing a reproducible bug report, <a href=\"https://make.wordpress.org/core/reports/\">file one on the WordPress Trac</a>. There, you can also find <a href=\"https://core.trac.wordpress.org/tickets/major\">a list of known bugs</a> and <a href=\"https://core.trac.wordpress.org/query?status=closed&amp;group=component&amp;milestone=4.0\">everything weâ€™ve fixed</a> so far.</p>\n<p><strong>Developers:</strong> Never fear, we haven&#8217;t forgotten you. There&#8217;s plenty for you, too &#8211; more on that in upcoming posts. In the meantime, check out the <a href=\"https://make.wordpress.org/core/2014/07/08/customizer-improvements-in-4-0/#customizer-panels\">API for panels in the Customizer</a>.</p>\n<p>Happy testing!</p>\n<p><em>Plugins, editor</em><br />\n<em>Media, things in between</em><br />\n<em>Please help look for bugs</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"https://wordpress.org/news/2014/07/wordpress-4-0-beta-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"WordPress 3.9.1 Maintenance Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/news/2014/05/wordpress-3-9-1/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/news/2014/05/wordpress-3-9-1/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 08 May 2014 18:40:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3241\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:385:\"After three weeks and more than 9 million downloads of WordPress 3.9, we&#8217;re pleased to announce that WordPress 3.9.1 is now available. This maintenance release fixes 34 bugs in 3.9, including numerous fixes for multisite networks, customizing widgets while previewing themes, and the updated visual editor. We&#8217;ve also made some improvements to the new audio/video [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:3106:\"<p>After three weeks and more than 9 million downloads of <a title=\"WordPress 3.9 â€œSmithâ€\" href=\"https://wordpress.org/news/2014/04/smith/\">WordPress 3.9</a>, we&#8217;re pleased to announce that WordPress 3.9.1 is now available.</p>\n<p>This maintenance release fixes 34 bugs in 3.9, including numerous fixes for multisite networks, customizing widgets while previewing themes, and the updated visual editor. We&#8217;ve also made some improvements to the new audio/video playlists feature and made some adjustments to improve performance. For a full list of changes, consult the <a href=\"https://core.trac.wordpress.org/query?milestone=3.9.1\">list of tickets</a> and the <a href=\"https://core.trac.wordpress.org/log/branches/3.9?rev=28353&amp;stop_rev=28154\">changelog</a>.</p>\n<p>If you are one of the millions already running WordPress 3.9, we&#8217;ve started rolling out automatic background updates for 3.9.1. For sitesÂ <a href=\"https://wordpress.org/plugins/background-update-tester/\">that support them</a>, of course.</p>\n<p><a href=\"https://wordpress.org/download/\">Download WordPress 3.9.1</a>Â or venture over toÂ <strong>Dashboard â†’ Updates</strong>Â and simply click &#8220;Update Now.&#8221;</p>\n<p>Thanks to all of these fine individuals for contributing to 3.9.1:Â <a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"https://profiles.wordpress.org/rzen\">Brian Richards</a>, <a href=\"https://profiles.wordpress.org/ehg\">Chris Blower</a>, <a href=\"https://profiles.wordpress.org/jupiterwise\">Corey McKrill</a>, <a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>, <a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"https://profiles.wordpress.org/feedmeastraycat\">feedmeastraycat</a>, <a href=\"https://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"https://profiles.wordpress.org/helen\">Helen Hou-Sandi</a>, <a href=\"https://profiles.wordpress.org/imath\">imath</a>, <a href=\"https://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>, <a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"https://profiles.wordpress.org/m_i_n\">m_i_n</a>, <a href=\"https://profiles.wordpress.org/clorith\">Marius Jensen</a>, <a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"https://profiles.wordpress.org/dimadin\">Milan DiniÄ‡</a>, <a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>, <a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"https://profiles.wordpress.org/SergeyBiryukov\">Sergey Biryukov</a>, and <a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/05/wordpress-3-9-1/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"WordPress 3.9 â€œSmithâ€\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"https://wordpress.org/news/2014/04/smith/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:50:\"https://wordpress.org/news/2014/04/smith/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 16 Apr 2014 18:33:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3154\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:411:\"Version 3.9 of WordPress, named &#8220;Smith&#8221; in honor of jazz organistÂ Jimmy Smith, is availableÂ for downloadÂ or update in your WordPress dashboard. This release features a number of refinements that we hope you&#8217;ll love. A smoother media editingÂ experience Improved visual editing The updated visual editor has improved speed, accessibility, and mobile support. You can paste into the [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:23571:\"<p>Version 3.9 of WordPress, named &#8220;Smith&#8221; in honor of jazz organistÂ <a href=\"http://en.wikipedia.org/wiki/Jimmy_Smith_(musician)\">Jimmy Smith</a>, is availableÂ <a href=\"https://wordpress.org/download/\">for download</a>Â or update in your WordPress dashboard. This release features a number of refinements that we hope you&#8217;ll love.</p>\n<div id=\"v-sAiXhCfV-1\" class=\"video-player\"><embed id=\"v-sAiXhCfV-1-video\" src=\"https://v0.wordpress.com/player.swf?v=1.03&amp;guid=sAiXhCfV&amp;isDynamicSeeking=true\" type=\"application/x-shockwave-flash\" width=\"692\" height=\"388\" wmode=\"direct\" seamlesstabbing=\"true\" allowfullscreen=\"true\" allowscriptaccess=\"always\" overstretch=\"true\"></embed></div>\n<h2 class=\"about-headline-callout\" style=\"text-align: center\">A smoother media editingÂ experience</h2>\n<div>\n<p><img class=\"alignright wp-image-3168\" src=\"//wordpress.org/news/files/2014/04/editor1-300x233.jpg\" alt=\"editor\" width=\"228\" height=\"177\" /></p>\n<h3>Improved visual editing</h3>\n<p>The updated visual editor has improved speed, accessibility, and mobile support. You can paste into the visual editor from your word processor without wasting time to clean up messy styling. (Yeah, weâ€™re talking about you, Microsoft Word.)</p>\n</div>\n<div style=\"clear: both\"></div>\n<div>\n<p><img class=\"alignright wp-image-3170\" src=\"//wordpress.org/news/files/2014/04/image1-300x233.jpg\" alt=\"image\" width=\"228\" height=\"178\" /></p>\n<h3>Edit images easily</h3>\n<p>With quicker access to crop and rotation tools, itâ€™s now much easier to edit your images while editing posts. You can also scale images directly in the editor to find just the right fit.</p>\n</div>\n<div style=\"clear: both\"></div>\n<div>\n<p><img class=\"alignright wp-image-3187\" src=\"//wordpress.org/news/files/2014/04/dragdrop1-300x233.jpg\" alt=\"dragdrop\" width=\"228\" height=\"178\" /></p>\n<h3>Drag and drop your images</h3>\n<p>Uploading your images is easier than ever. Just grab them from your desktop and drop them in the editor.</p>\n</div>\n<div style=\"clear: both\"></div>\n<hr />\n<h2 style=\"text-align: center\">Gallery previews</h2>\n<p><img class=\"aligncenter size-full wp-image-3169\" src=\"//wordpress.org/news/files/2014/04/gallery1.jpg\" alt=\"gallery\" width=\"980\" height=\"550\" /></p>\n<p>Galleries display a beautiful grid of images right in the editor, just like they do in your published post.</p>\n<hr />\n<h2 style=\"text-align: center\">Do more with audio and video</h2>\n\n<a href=\'https://wordpress.org/news/files/2014/04/AintMisbehavin.mp3\'>Ain\'t Misbehavin\'</a>\n<a href=\'https://wordpress.org/news/files/2014/04/DavenportBlues.mp3\'>Davenport Blues</a>\n<a href=\'https://wordpress.org/news/files/2014/04/JellyRollMorton-BuddyBoldensBlues.mp3\'>Buddy Bolden\'s Blues</a>\n<a href=\'https://wordpress.org/news/files/2014/04/Johnny_Hodges_Orchestra-Squaty_Roo-1941.mp3\'>Squaty Roo</a>\n<a href=\'https://wordpress.org/news/files/2014/04/Louisiana_Five-Dixie_Blues-1919.mp3\'>Dixie Blues</a>\n<a href=\'https://wordpress.org/news/files/2014/04/WolverineBlues.mp3\'>Wolverine Blues</a>\n\n<p>Images have galleries; now weâ€™ve added simple audio and video playlists, so you can showcase your music and clips.</p>\n<hr />\n<h2 style=\"text-align: center\">Live widget and header previews</h2>\n<div style=\"width: 692px; height: 448px; \" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-3154-3\" width=\"692\" height=\"448\" preload=\"metadata\" controls=\"controls\"><source type=\"video/mp4\" src=\"//wordpress.org/news/files/2014/04/widgets.mp4?_=3\" /><a href=\"//wordpress.org/news/files/2014/04/widgets.mp4\">//wordpress.org/news/files/2014/04/widgets.mp4</a></video></div>\n<p>Add, edit, and rearrange your siteâ€™s widgets right in the theme customizer. No â€œsave and surpriseâ€ â€” preview your changes live and only save them when youâ€™re ready.</p>\n<p>The improved header image tool also lets you upload, crop, and manage headers while customizing your theme.</p>\n<hr />\n<h2 style=\"text-align: center\">Stunning new theme browser</h2>\n<p><img class=\"aligncenter size-full wp-image-3172\" src=\"//wordpress.org/news/files/2014/04/theme1.jpg\" alt=\"theme\" width=\"1003\" height=\"558\" /><br />\nLooking for a new theme should be easy and fun. Lose yourself in the boundless supply of free WordPress.org themes with the beautiful new theme browser.</p>\n<hr />\n<h2 style=\"text-align: center\">The Crew</h2>\n<p>This release was led by <a href=\"http://nacin.com/\">Andrew Nacin</a> and <a href=\"http://www.getsource.net/\">Mike Schroder</a>, with the help of these fine individuals. There are 267 contributors with props in this release, a new high:</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a>, <a href=\"https://profiles.wordpress.org/jorbin\">Aaron Jorbin</a>, <a href=\"https://profiles.wordpress.org/kawauso\">Adam Harley (Kawauso)</a>, <a href=\"https://profiles.wordpress.org/adamsilverstein\">Adam Silverstein</a>, <a href=\"https://profiles.wordpress.org/adelval\">adelval</a>, <a href=\"https://profiles.wordpress.org/ajay\">Ajay</a>, <a href=\"https://profiles.wordpress.org/akeda\">Akeda Bagus</a>, <a href=\"https://profiles.wordpress.org/xknown\">Alex Concha</a>, <a href=\"https://profiles.wordpress.org/tellyworth\">Alex Shiels</a>, <a href=\"https://profiles.wordpress.org/aliso\">Alison Barrett</a>, <a href=\"https://profiles.wordpress.org/collinsinternet\">Allan Collins</a>, <a href=\"https://profiles.wordpress.org/sabreuse\">Amy Hendrix (sabreuse)</a>, <a href=\"https://profiles.wordpress.org/afercia\">Andrea Fercia</a>, <a href=\"https://profiles.wordpress.org/nacin\">Andrew Nacin</a>, <a href=\"https://profiles.wordpress.org/norcross\">Andrew Norcross</a>, <a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a>, <a href=\"https://profiles.wordpress.org/rarst\">Andrey \"Rarst\" Savchenko</a>, <a href=\"https://profiles.wordpress.org/andykeith\">Andy Keith</a>, <a href=\"https://profiles.wordpress.org/andy\">Andy Skelton</a>, <a href=\"https://profiles.wordpress.org/atimmer\">Anton Timmermans</a>, <a href=\"https://profiles.wordpress.org/aubreypwd\">Aubrey Portwood</a>, <a href=\"https://profiles.wordpress.org/barry\">Barry</a>, <a href=\"https://profiles.wordpress.org/toszcze\">Bartosz Romanowski</a>, <a href=\"https://profiles.wordpress.org/bassgang\">bassgang</a>, <a href=\"https://profiles.wordpress.org/bcworkz\">bcworkz</a>, <a href=\"https://profiles.wordpress.org/empireoflight\">Ben Dunkle</a>, <a href=\"https://profiles.wordpress.org/neoxx\">Bernhard Riedl</a>, <a href=\"https://profiles.wordpress.org/bigdawggi\">bigdawggi</a>, <a href=\"https://profiles.wordpress.org/bobbravo2\">Bob Gregor</a>, <a href=\"https://profiles.wordpress.org/bobbingwide\">bobbingwide</a>, <a href=\"https://profiles.wordpress.org/bradt\">Brad Touesnard</a>, <a href=\"https://profiles.wordpress.org/bradparbs\">bradparbs</a>, <a href=\"https://profiles.wordpress.org/bramd\">Bram Duvigneau</a>, <a href=\"https://profiles.wordpress.org/kraftbj\">Brandon Kraft</a>, <a href=\"https://profiles.wordpress.org/brasofilo\">brasofilo</a>, <a href=\"https://profiles.wordpress.org/bravokeyl\">bravokeyl</a>, <a href=\"https://profiles.wordpress.org/bpetty\">Bryan Petty</a>, <a href=\"https://profiles.wordpress.org/cgaffga\">cgaffga</a>, <a href=\"https://profiles.wordpress.org/chiragswadia\">Chirag Swadia</a>, <a href=\"https://profiles.wordpress.org/chouby\">Chouby</a>, <a href=\"https://profiles.wordpress.org/ehg\">Chris Blower</a>, <a href=\"https://profiles.wordpress.org/cmmarslender\">Chris Marslender</a>, <a href=\"https://profiles.wordpress.org/c3mdigital\">Chris Olbekson</a>, <a href=\"https://profiles.wordpress.org/chrisscott\">Chris Scott</a>, <a href=\"https://profiles.wordpress.org/chriseverson\">chriseverson</a>, <a href=\"https://profiles.wordpress.org/chrisguitarguy\">chrisguitarguy</a>, <a href=\"https://profiles.wordpress.org/cfinke\">Christopher Finke</a>, <a href=\"https://profiles.wordpress.org/ciantic\">ciantic</a>, <a href=\"https://profiles.wordpress.org/antorome\">Comparativa de Bancos</a>, <a href=\"https://profiles.wordpress.org/cojennin\">Connor Jennings</a>, <a href=\"https://profiles.wordpress.org/corvannoorloos\">Cor van Noorloos</a>, <a href=\"https://profiles.wordpress.org/corphi\">Corphi</a>, <a href=\"https://profiles.wordpress.org/cramdesign\">cramdesign</a>, <a href=\"https://profiles.wordpress.org/danielbachhuber\">Daniel Bachhuber</a>, <a href=\"https://profiles.wordpress.org/redsweater\">Daniel Jalkut (Red Sweater)</a>, <a href=\"https://profiles.wordpress.org/dannydehaan\">Danny de Haan</a>, <a href=\"https://profiles.wordpress.org/koop\">Daryl Koopersmith</a>, <a href=\"https://profiles.wordpress.org/eightface\">Dave Kellam (eightface)</a>, <a href=\"https://profiles.wordpress.org/dpe415\">DaveE</a>, <a href=\"https://profiles.wordpress.org/davidakennedy\">David A. Kennedy</a>, <a href=\"https://profiles.wordpress.org/davidanderson\">David Anderson</a>, <a href=\"https://profiles.wordpress.org/davidmarichal\">David Marichal</a>, <a href=\"https://profiles.wordpress.org/denis-de-bernardy\">Denis de Bernardy</a>, <a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a>, <a href=\"https://profiles.wordpress.org/ocean90\">Dominik Schilling</a>, <a href=\"https://profiles.wordpress.org/dougwollison\">Doug Wollison</a>, <a href=\"https://profiles.wordpress.org/drewapicture\">Drew Jaynes</a>, <a href=\"https://profiles.wordpress.org/drprotocols\">DrProtocols</a>, <a href=\"https://profiles.wordpress.org/dustyf\">Dustin Filippini</a>, <a href=\"https://profiles.wordpress.org/eatingrules\">eatingrules</a>, <a href=\"https://profiles.wordpress.org/plocha\">edik</a>, <a href=\"https://profiles.wordpress.org/oso96_2000\">Eduardo Reveles</a>, <a href=\"https://profiles.wordpress.org/eliorivero\">Elio Rivero</a>, <a href=\"https://profiles.wordpress.org/enej\">enej</a>, <a href=\"https://profiles.wordpress.org/ericlewis\">Eric Lewis</a>, <a href=\"https://profiles.wordpress.org/ericmann\">Eric Mann</a>, <a href=\"https://profiles.wordpress.org/evarlese\">Erica Varlese</a>, <a href=\"https://profiles.wordpress.org/ethitter\">Erick Hitter</a>, <a href=\"https://profiles.wordpress.org/ejdanderson\">Evan Anderson</a>, <a href=\"https://profiles.wordpress.org/fahmiadib\">Fahmi Adib</a>, <a href=\"https://profiles.wordpress.org/fboender\">fboender</a>, <a href=\"https://profiles.wordpress.org/frank-klein\">Frank Klein</a>, <a href=\"https://profiles.wordpress.org/garyc40\">Gary Cao</a>, <a href=\"https://profiles.wordpress.org/garyj\">Gary Jones</a>, <a href=\"https://profiles.wordpress.org/pento\">Gary Pendergast</a>, <a href=\"https://profiles.wordpress.org/genkisan\">genkisan</a>, <a href=\"https://profiles.wordpress.org/soulseekah\">Gennady Kovshenin</a>, <a href=\"https://profiles.wordpress.org/georgestephanis\">George Stephanis</a>, <a href=\"https://profiles.wordpress.org/grahamarmfield\">Graham Armfield</a>, <a href=\"https://profiles.wordpress.org/vancoder\">Grant Mangham</a>, <a href=\"https://profiles.wordpress.org/gcorne\">Gregory Cornelius</a>, <a href=\"https://profiles.wordpress.org/tivnet\">Gregory Karpinsky (@tivnet)</a>, <a href=\"https://profiles.wordpress.org/hakre\">hakre</a>, <a href=\"https://profiles.wordpress.org/hanni\">hanni</a>, <a href=\"https://profiles.wordpress.org/helen\">Helen Hou-SandÃ­</a>, <a href=\"https://profiles.wordpress.org/ippetkov\">ippetkov</a>, <a href=\"https://profiles.wordpress.org/ipstenu\">Ipstenu (Mika Epstein)</a>, <a href=\"https://profiles.wordpress.org/jdgrimes\">J.D. Grimes</a>, <a href=\"https://profiles.wordpress.org/jackreichert\">Jack Reichert</a>, <a href=\"https://profiles.wordpress.org/_jameslee\">jameslee</a>, <a href=\"https://profiles.wordpress.org/avryl\">Janneke Van Dorpe</a>, <a href=\"https://profiles.wordpress.org/janrenn\">janrenn</a>, <a href=\"https://profiles.wordpress.org/jaycc\">JayCC</a>, <a href=\"https://profiles.wordpress.org/jeffsebring\">Jeff Sebring</a>, <a href=\"https://profiles.wordpress.org/jenmylo\">Jen</a>, <a href=\"https://profiles.wordpress.org/jeremyfelt\">Jeremy Felt</a>, <a href=\"https://profiles.wordpress.org/jesin\">Jesin A</a>, <a href=\"https://profiles.wordpress.org/jayjdk\">Jesper Johansen (jayjdk)</a>, <a href=\"https://profiles.wordpress.org/jnielsendotnet\">jnielsendotnet</a>, <a href=\"https://profiles.wordpress.org/jartes\">Joan Artes</a>, <a href=\"https://profiles.wordpress.org/joedolson\">Joe Dolson</a>, <a href=\"https://profiles.wordpress.org/joehoyle\">Joe Hoyle</a>, <a href=\"https://profiles.wordpress.org/johnbillion\">John Blackbourn</a>, <a href=\"https://profiles.wordpress.org/johnjamesjacoby\">John James Jacoby</a>, <a href=\"https://profiles.wordpress.org/johnpbloch\">John P. Bloch</a>, <a href=\"https://profiles.wordpress.org/johnregan3\">John Regan</a>, <a href=\"https://profiles.wordpress.org/duck_\">Jon Cave</a>, <a href=\"https://profiles.wordpress.org/jond3r\">Jonas Bolinder (jond3r)</a>, <a href=\"https://profiles.wordpress.org/joostdevalk\">Joost de Valk</a>, <a href=\"https://profiles.wordpress.org/shelob9\">Josh Pollock</a>, <a href=\"https://profiles.wordpress.org/joshuaabenazer\">Joshua Abenazer</a>, <a href=\"https://profiles.wordpress.org/jstraitiff\">jstraitiff</a>, <a href=\"https://profiles.wordpress.org/juliobox\">Julio Potier</a>, <a href=\"https://profiles.wordpress.org/kopepasah\">Justin Kopepasah</a>, <a href=\"https://profiles.wordpress.org/justinsainton\">Justin Sainton</a>, <a href=\"https://profiles.wordpress.org/kadamwhite\">K.Adam White</a>, <a href=\"https://profiles.wordpress.org/trepmal\">Kailey (trepmal)</a>, <a href=\"https://profiles.wordpress.org/kasparsd\">Kaspars</a>, <a href=\"https://profiles.wordpress.org/ryelle\">Kelly Dwan</a>, <a href=\"https://profiles.wordpress.org/kerikae\">kerikae</a>, <a href=\"https://profiles.wordpress.org/kworthington\">Kevin Worthington</a>, <a href=\"https://profiles.wordpress.org/kpdesign\">Kim Parsell</a>, <a href=\"https://profiles.wordpress.org/kwight\">Kirk Wight</a>, <a href=\"https://profiles.wordpress.org/kitchin\">kitchin</a>, <a href=\"https://profiles.wordpress.org/klihelp\">klihelp</a>, <a href=\"https://profiles.wordpress.org/knutsp\">Knut Sparhell</a>, <a href=\"https://profiles.wordpress.org/kovshenin\">Konstantin Kovshenin</a>, <a href=\"https://profiles.wordpress.org/obenland\">Konstantin Obenland</a>, <a href=\"https://profiles.wordpress.org/drozdz\">Krzysiek Drozdz</a>, <a href=\"https://profiles.wordpress.org/lancewillett\">Lance Willett</a>, <a href=\"https://profiles.wordpress.org/ldebrouwer\">ldebrouwer</a>, <a href=\"https://profiles.wordpress.org/leewillis77\">Lee Willis</a>, <a href=\"https://profiles.wordpress.org/lpointet\">lpointet</a>, <a href=\"https://profiles.wordpress.org/spmlucas\">Lucas Karpiuk</a>, <a href=\"https://profiles.wordpress.org/lkwdwrd\">Luke Woodward</a>, <a href=\"https://profiles.wordpress.org/nofearinc\">Mario Peshev</a>, <a href=\"https://profiles.wordpress.org/mark8barnes\">Mark Barnes</a>, <a href=\"https://profiles.wordpress.org/markjaquith\">Mark Jaquith</a>, <a href=\"https://profiles.wordpress.org/markoheijnen\">Marko Heijnen</a>, <a href=\"https://profiles.wordpress.org/marventus\">Marventus</a>, <a href=\"https://profiles.wordpress.org/iammattthomas\">Matt (Thomas) Miklic</a>, <a href=\"https://profiles.wordpress.org/mjbanks\">Matt Banks</a>, <a href=\"https://profiles.wordpress.org/matt\">Matt Mullenweg</a>, <a href=\"https://profiles.wordpress.org/mboynes\">Matthew Boynes</a>, <a href=\"https://profiles.wordpress.org/mdbitz\">Matthew Denton</a>, <a href=\"https://profiles.wordpress.org/mattheu\">Matthew Haines-Young</a>, <a href=\"https://profiles.wordpress.org/mattonomics\">mattonomics</a>, <a href=\"https://profiles.wordpress.org/mattyrob\">mattyrob</a>, <a href=\"https://profiles.wordpress.org/matveb\">MatÃ­as Ventura</a>, <a href=\"https://profiles.wordpress.org/maxcutler\">Max Cutler</a>, <a href=\"https://profiles.wordpress.org/mcadwell\">mcadwell</a>, <a href=\"https://profiles.wordpress.org/melchoyce\">Mel Choyce</a>, <a href=\"https://profiles.wordpress.org/meloniq\">meloniq</a>, <a href=\"https://profiles.wordpress.org/michael-arestad\">Michael Arestad</a>, <a href=\"https://profiles.wordpress.org/michelwppi\">Michel - xiligroup dev</a>, <a href=\"https://profiles.wordpress.org/mcsf\">Miguel Fonseca</a>, <a href=\"https://profiles.wordpress.org/gradyetc\">Mike Burns</a>, <a href=\"https://profiles.wordpress.org/mikehansenme\">Mike Hansen</a>, <a href=\"https://profiles.wordpress.org/mikemanger\">Mike Manger</a>, <a href=\"https://profiles.wordpress.org/mikeschinkel\">Mike Schinkel</a>, <a href=\"https://profiles.wordpress.org/dh-shredder\">Mike Schroder</a>, <a href=\"https://profiles.wordpress.org/mikecorkum\">mikecorkum</a>, <a href=\"https://profiles.wordpress.org/mitchoyoshitaka\">mitcho (Michael Yoshitaka Erlewine)</a>, <a href=\"https://profiles.wordpress.org/batmoo\">Mohammad Jangda</a>, <a href=\"https://profiles.wordpress.org/morganestes\">Morgan Estes</a>, <a href=\"https://profiles.wordpress.org/mor10\">Morten Rand-Hendriksen</a>, <a href=\"https://profiles.wordpress.org/Nao\">Naoko Takano</a>, <a href=\"https://profiles.wordpress.org/alex-ye\">Nashwan Doaqan</a>, <a href=\"https://profiles.wordpress.org/nendeb55\">nendeb55</a>, <a href=\"https://profiles.wordpress.org/celloexpressions\">Nick Halsey</a>, <a href=\"https://profiles.wordpress.org/nicolealleyinteractivecom\">Nicole Arnold</a>, <a href=\"https://profiles.wordpress.org/nikv\">Nikhil Vimal (NikV)</a>, <a href=\"https://profiles.wordpress.org/nivijah\">Nivi Jah</a>, <a href=\"https://profiles.wordpress.org/nunomorgadinho\">Nuno Morgadinho</a>, <a href=\"https://profiles.wordpress.org/olivm\">olivM</a>, <a href=\"https://profiles.wordpress.org/jbkkd\">Omer Korner</a>, <a href=\"https://profiles.wordpress.org/originalexe\">OriginalEXE</a>, <a href=\"https://profiles.wordpress.org/patricknami\">patricknami</a>, <a href=\"https://profiles.wordpress.org/pbearne\">Paul Bearne</a>, <a href=\"https://profiles.wordpress.org/djpaul\">Paul Gibbs</a>, <a href=\"https://profiles.wordpress.org/paulwilde\">Paul Wilde</a>, <a href=\"https://profiles.wordpress.org/pavelevap\">pavelevap</a>, <a href=\"https://profiles.wordpress.org/westi\">Peter Westwood</a>, <a href=\"https://profiles.wordpress.org/philiparthurmoore\">Philip Arthur Moore</a>, <a href=\"https://profiles.wordpress.org/mordauk\">Pippin Williamson</a>, <a href=\"https://profiles.wordpress.org/nprasath002\">Prasath Nadarajah</a>, <a href=\"https://profiles.wordpress.org/prettyboymp\">prettyboymp</a>, <a href=\"https://profiles.wordpress.org/raamdev\">Raam Dev</a>, <a href=\"https://profiles.wordpress.org/rachelbaker\">Rachel Baker</a>, <a href=\"https://profiles.wordpress.org/mauryaratan\">Ram Ratan Maurya</a>, <a href=\"https://profiles.wordpress.org/ramonchiara\">ramonchiara</a>, <a href=\"https://profiles.wordpress.org/ounziw\">Rescuework Support</a>, <a href=\"https://profiles.wordpress.org/rhyswynne\">Rhys Wynne</a>, <a href=\"https://profiles.wordpress.org/ricardocorreia\">Ricardo Correia</a>, <a href=\"https://profiles.wordpress.org/richard2222\">Richard</a>, <a href=\"https://profiles.wordpress.org/theorboman\">Richard Sweeney</a>, <a href=\"https://profiles.wordpress.org/iamfriendly\">Richard Tape</a>, <a href=\"https://profiles.wordpress.org/rickalee\">Ricky Lee Whittemore</a>, <a href=\"https://profiles.wordpress.org/miqrogroove\">Robert Chapin</a>, <a href=\"https://profiles.wordpress.org/robmiller\">robmiller</a>, <a href=\"https://profiles.wordpress.org/rodrigosprimo\">Rodrigo Primo</a>, <a href=\"https://profiles.wordpress.org/romaimperator\">romaimperator</a>, <a href=\"https://profiles.wordpress.org/roothorick\">roothorick</a>, <a href=\"https://profiles.wordpress.org/ruudjoyo\">Ruud Laan</a>, <a href=\"https://profiles.wordpress.org/ryan\">Ryan Boren</a>, <a href=\"https://profiles.wordpress.org/rmccue\">Ryan McCue</a>, <a href=\"https://profiles.wordpress.org/salcode\">Sal Ferrarello</a>, <a href=\"https://profiles.wordpress.org/otto42\">Samuel Wood (Otto)</a>, <a href=\"https://profiles.wordpress.org/sandyr\">Sandeep</a>, <a href=\"https://profiles.wordpress.org/scottlee\">Scott Lee</a>, <a href=\"https://profiles.wordpress.org/coffee2code\">Scott Reilly</a>, <a href=\"https://profiles.wordpress.org/wonderboymusic\">Scott Taylor</a>, <a href=\"https://profiles.wordpress.org/greglone\">ScreenfeedFr</a>, <a href=\"https://profiles.wordpress.org/scribu\">scribu</a>, <a href=\"https://profiles.wordpress.org/sdasse\">sdasse</a>, <a href=\"https://profiles.wordpress.org/bootsz\">Sean Butze</a>, <a href=\"https://profiles.wordpress.org/seanchayes\">Sean Hayes</a>, <a href=\"https://profiles.wordpress.org/nessworthy\">Sean Nessworthy</a>, <a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a>, <a href=\"https://profiles.wordpress.org/shahpranaf\">shahpranaf</a>, <a href=\"https://profiles.wordpress.org/shaunandrews\">Shaun Andrews</a>, <a href=\"https://profiles.wordpress.org/shinichin\">ShinichiN</a>, <a href=\"https://profiles.wordpress.org/pross\">Simon Prosser</a>, <a href=\"https://profiles.wordpress.org/simonwheatley\">Simon Wheatley</a>, <a href=\"https://profiles.wordpress.org/siobhan\">Siobhan</a>, <a href=\"https://profiles.wordpress.org/siobhyb\">Siobhan Bamber (siobhyb)</a>, <a href=\"https://profiles.wordpress.org/sirzooro\">sirzooro</a>, <a href=\"https://profiles.wordpress.org/solarissmoke\">solarissmoke</a>, <a href=\"https://profiles.wordpress.org/sonjanyc\">sonjanyc</a>, <a href=\"https://profiles.wordpress.org/spencerfinnell\">Spencer Finnell</a>, <a href=\"https://profiles.wordpress.org/piontkowski\">Spencer Piontkowski</a>, <a href=\"https://profiles.wordpress.org/stephcook22\">stephcook22</a>, <a href=\"https://profiles.wordpress.org/netweb\">Stephen Edgar</a>, <a href=\"https://profiles.wordpress.org/stephenharris\">Stephen Harris</a>, <a href=\"https://profiles.wordpress.org/sbruner\">Steve Bruner</a>, <a href=\"https://profiles.wordpress.org/stevenkword\">Steven Word</a>, <a href=\"https://profiles.wordpress.org/miyauchi\">Takayuki Miyauchi</a>, <a href=\"https://profiles.wordpress.org/tanner-m\">Tanner Moushey</a>, <a href=\"https://profiles.wordpress.org/tlovett1\">Taylor Lovett</a>, <a href=\"https://profiles.wordpress.org/tbrams\">tbrams</a>, <a href=\"https://profiles.wordpress.org/tobiasbg\">TobiasBg</a>, <a href=\"https://profiles.wordpress.org/tomauger\">Tom Auger</a>, <a href=\"https://profiles.wordpress.org/willmot\">Tom Willmot</a>, <a href=\"https://profiles.wordpress.org/topher1kenobe\">Topher</a>, <a href=\"https://profiles.wordpress.org/topquarky\">topquarky</a>, <a href=\"https://profiles.wordpress.org/zodiac1978\">Torsten Landsiedel</a>, <a href=\"https://profiles.wordpress.org/toru\">Toru Miki</a>, <a href=\"https://profiles.wordpress.org/wpsmith\">Travis Smith</a>, <a href=\"https://profiles.wordpress.org/umeshsingla\">Umesh Kumar</a>, <a href=\"https://profiles.wordpress.org/undergroundnetwork\">undergroundnetwork</a>, <a href=\"https://profiles.wordpress.org/varunagw\">VarunAgw</a>, <a href=\"https://profiles.wordpress.org/wawco\">wawco</a>, <a href=\"https://profiles.wordpress.org/westonruter\">Weston Ruter</a>, <a href=\"https://profiles.wordpress.org/wokamoto\">wokamoto</a>, <a href=\"https://profiles.wordpress.org/xsonic\">xsonic</a>, <a href=\"https://profiles.wordpress.org/yoavf\">Yoav Farhi</a>, <a href=\"https://profiles.wordpress.org/yurivictor\">Yuri Victor</a>, <a href=\"https://profiles.wordpress.org/zbtirrell\">Zach Tirrell</a>, and <a href=\"https://profiles.wordpress.org/vanillalounge\">Ze Fontainhas</a>. Also thanks to <a href=\"http://michaelpick.wordpress.com/\">Michael Pick</a> for producing the release video.</p>\n<p>If you want to follow along or help out, check out <a href=\"https://make.wordpress.org/\">Make WordPress</a> and our <a href=\"https://make.wordpress.org/core/\">core development blog</a>. Thanks for choosing WordPress. See you soon for version 4.0!</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"https://wordpress.org/news/2014/04/smith/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:45:\"\n		\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WordPress 3.9 Release Candidate 2\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:78:\"https://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 15 Apr 2014 09:47:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:11:\"Development\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3151\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:356:\"The second release candidate for WordPress 3.9 is now available for testing. If you haven&#8217;t tested 3.9 yet, you&#8217;re running out of time! We made about five dozen changes since the first release candidate, and those changes are all helpfully summarized in our weekly post on the development blog. Probably the biggest fixesÂ are to live [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2273:\"<p>The second release candidate for WordPress 3.9 is now available for testing.</p>\n<p>If you haven&#8217;t tested 3.9 yet, you&#8217;re running out of time! We made about five dozen changes since the <a title=\"WordPress 3.9 Release Candidate\" href=\"//wordpress.org/news/2014/04/wordpress-3-9-release-candidate/\">first release candidate</a>, and those changes are all helpfully summarized <a href=\"//make.wordpress.org/core/?p=10237\">in our weekly post</a> on the development blog. Probably the biggest fixesÂ are to live widget previews and the new theme browser, along with some extra TinyMCE compatibility and some RTL fixes.</p>\n<p><strong>Plugin authors:</strong>Â Could you test your plugins against 3.9, and if they&#8217;re compatible, make sure they are marked as tested up to 3.9?Â It only takes a few minutes and this really helps make launch easier.Â Be sure to follow along the core development blog; we&#8217;ve been postingÂ <a href=\"//make.wordpress.org/core/tag/3-9-dev-notes/\">notes forÂ developers for 3.9</a>. (For example: <a href=\"//make.wordpress.org/core/2014/04/15/html5-galleries-captions-in-wordpress-3-9/\">HTML5</a>, <a href=\"//make.wordpress.org/core/2014/04/14/symlinked-plugins-in-wordpress-3-9/\">symlinks</a>, <a href=\"//make.wordpress.org/core/2014/04/07/mysql-in-wordpress-3-9/\">MySQL</a>, <a href=\"//make.wordpress.org/core/2014/04/11/plupload-2-x-in-wordpress-3-9/\">Plupload</a>.)</p>\n<p>To test WordPress 3.9 RC2, try theÂ <a href=\"//wordpress.org/extend/plugins/wordpress-beta-tester/\">WordPress Beta Tester</a>Â plugin (youâ€™ll want â€œbleeding edge nightliesâ€). Or you canÂ <a href=\"//wordpress.org/wordpress-3.9-RC2.zip\">download the release candidate here</a>Â (zip).Â If youâ€™d like to learn more about whatâ€™s new in WordPress 3.9, visit the nearly completeÂ About screen in your dashboard (<strong><img src=\"//i0.wp.com/core.svn.wordpress.org/branches/3.6/wp-content/themes/twentyten/images/wordpress.png?w=692\" alt=\"\" width=\"16\" height=\"16\" />Â â†’ About</strong>Â in the toolbar) and also check outÂ <a title=\"WordPress 3.9 Beta 1\" href=\"//wordpress.org/news/2014/03/wordpress-3-9-beta-1/\">the Beta 1 post</a>.</p>\n<p><em>This is for testing,</em><br />\n<em>so not recommended for<br />\nproductionÂ sitesâ€”yet.</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:74:\"https://wordpress.org/news/2014/04/wordpress-3-9-release-candidate-2/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:42:\"\n		\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\n		\n		\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:5:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"WordPress 3.8.3 Maintenance Release\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/news/2014/04/wordpress-3-8-3/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/news/2014/04/wordpress-3-8-3/#comments\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 14 Apr 2014 19:29:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"http://wordpress.org/news/?p=3145\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:338:\"WordPress 3.8.3 is now available to fix a small but unfortunate bug in the WordPress 3.8.2 security release. The &#8220;Quick Draft&#8221; tool on the dashboard screen was broken in the 3.8.2 update. If you tried to use it, your draft would disappear and it wouldn&#8217;t save. While we doubt anyone was writing a novella using [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Andrew Nacin\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2341:\"<p>WordPress 3.8.3 is now available to fix a small but unfortunate bug in the <a title=\"WordPress 3.8.2 Security Release\" href=\"https://wordpress.org/news/2014/04/wordpress-3-8-2/\">WordPress 3.8.2 security release</a>.</p>\n<p>The &#8220;Quick Draft&#8221; tool on the dashboard screen was broken in the 3.8.2 update. If you tried to use it, your draft would disappear and it wouldn&#8217;t save. While we doubt anyone was writing a novella using this tool, <em>any</em> loss of content is unacceptable to us.</p>\n<p>We recognize how much trust you place in us to safeguard your content, and we take this responsibility very seriously. We&#8217;re sorry we let you down.</p>\n<p>We&#8217;ve all lost words we&#8217;ve written before, like an email thanks to a cat on the keyboard or a term paper to a blue screen of death. Over the last few WordPress releases, we&#8217;ve made a number of improvements to features like autosaves and revisions. With revisions, an old edit can always be restored. We&#8217;re trying our hardest to save your content somewhere even if your power goes out or your browser crashes. We even monitor your internet connection and prevent you from hitting that &#8220;Publish&#8221; button at the exact moment the coffee shop Wi-Fi has a hiccup.</p>\n<p>It&#8217;s <em>possible</em> that the quick draft you lost last week is still in the database, and just hidden from view. As an added complication, these &#8220;discarded drafts&#8221; normally get deleted after seven days, and it&#8217;s already been sixÂ days since the release. If we were able to rescue your draft, you&#8217;ll see it on the &#8220;All Posts&#8221; screen after you update to 3.8.3. (We&#8217;ll also be pushing 3.8.3 out as a background update, so you may just see a draft appear.)</p>\n<p>So, if you tried to jot down a quick idea last week, I hope WordPress has recovered it for you. Maybe it&#8217;ll turn into that novella.</p>\n<p><a href=\"https://wordpress.org/download/\">Download WordPress 3.8.3</a> or click &#8220;Update Now&#8221; on Dashboard â†’ Updates.</p>\n<p><em>This affected version 3.7.2 as well, so we&#8217;re pushing a 3.7.3 to these installs, but we&#8217;d encourage you to update to the latest and greatest.</em></p>\n<hr />\n<p><em>Now for some good news:<br />\nWordPress 3.9 is near.<br />\nExpect it thisÂ week</em></p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:36:\"http://wellformedweb.org/CommentAPI/\";a:1:{s:10:\"commentRss\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/news/2014/04/wordpress-3-8-3/feed/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:38:\"http://purl.org/rss/1.0/modules/slash/\";a:1:{s:8:\"comments\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"0\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:32:\"https://wordpress.org/news/feed/\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:44:\"http://purl.org/rss/1.0/modules/syndication/\";a:2:{s:12:\"updatePeriod\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"hourly\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:15:\"updateFrequency\";a:1:{i:0;a:5:{s:4:\"data\";s:1:\"1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:9:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Mon, 20 Oct 2014 20:32:10 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:10:\"x-pingback\";s:37:\"https://wordpress.org/news/xmlrpc.php\";s:13:\"last-modified\";s:29:\"Wed, 15 Oct 2014 13:39:33 GMT\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 250\";}s:5:\"build\";s:14:\"20130708171016\";}','no'),(614,'_transient_timeout_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca','1413881255','no'),(615,'_transient_feed_mod_ac0b00fe65abe10e0c5b588f3ed8c7ca','1413838055','no'),(616,'_transient_timeout_dash_4077549d03da2e451c8b5f002294ff51','1413881255','yes'),(617,'_transient_dash_4077549d03da2e451c8b5f002294ff51','<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://wordpress.org/news/2014/09/benny/\' title=\'Version 4.0 of WordPress, named â€œBennyâ€ in honor of jazz clarinetist and bandleader Benny Goodman, is availableÂ for downloadÂ or update in your WordPress dashboard.Â While 4.0 is just another number for us after 3.9 and before 4.1, we feel weâ€™ve put a little extra polish into it. This release brings you a smoother writing and management experience [â€¦]\'>WordPress 4.0 â€œBennyâ€</a> <span class=\"rss-date\">September 4, 2014</span><div class=\'rssSummary\'>Version 4.0 of WordPress, named â€œBennyâ€ in honor of jazz clarinetist and bandleader Benny Goodman, is availableÂ for downloadÂ or update in your WordPress dashboard.Â While 4.0 is just another number for us after 3.9 and before 4.1, we feel weâ€™ve put a little extra polish into it. This release brings you a smoother writing and management experience [â€¦]</div></li><li><a class=\'rsswidget\' href=\'https://wordpress.org/news/2014/08/wordpress-4-0-release-candidate/\' title=\'The first release candidate for WordPress 4.0 is now available! In RC 1, weâ€™ve made refinements to what weâ€™ve been working on for this release. Check out the Beta 1 announcement post for more details on those features. We hope to ship WordPress 4.0 next week, but we need your help to get there.Â If you [â€¦]\'>WordPress 4.0 Release Candidate</a> <span class=\"rss-date\">August 27, 2014</span><div class=\'rssSummary\'>The first release candidate for WordPress 4.0 is now available! In RC 1, weâ€™ve made refinements to what weâ€™ve been working on for this release. Check out the Beta 1 announcement post for more details on those features. We hope to ship WordPress 4.0 next week, but we need your help to get there.Â If you [â€¦]</div></li></ul></div>','no'),(618,'_transient_timeout_feed_77fa140e07ce53fe8c87136636f83d72','1413881231','no'),(619,'_transient_feed_77fa140e07ce53fe8c87136636f83d72','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n	\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:72:\"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WordPress Plugins Â» View: Newest\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"https://wordpress.org/plugins/browse/new/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WordPress Plugins Â» View: Newest\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 20 Oct 2014 20:17:07 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://bbpress.org/?v=1.1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:15:{i:0;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"SimplePay WooCommerce Payment Gateway\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:79:\"https://wordpress.org/plugins/simplepay-woocommerce-payment-gateway/#post-73249\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 15 Oct 2014 00:33:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73249@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:145:\"Simplepay Woocommerce Payment Gateway allows you to accept local and International payment via Verve Card, MasterCard, Visa Card &#38; eTranzact.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Tunbosun Ayinla\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:38:\"Advanced Custom Fields: Markdown Field\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:73:\"https://wordpress.org/plugins/advanced-custom-fields-markdown/#post-73305\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Oct 2014 20:48:14 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73305@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"Adds a markdown-field.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"jensnilsson\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"CC Child Pages\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/plugins/cc-child-pages/#post-73097\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 10 Oct 2014 16:51:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73097@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"Show links to child pages\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:17:\"caterhamcomputing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:15:\"Portfolio Magic\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://wordpress.org/plugins/portfolio-magic/#post-73299\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Oct 2014 16:25:29 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73299@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"Easy portfolio custom post type with image slider\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"TakiraThemes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"Order SMS Notification - WooCommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"https://wordpress.org/plugins/order-sms-notification-woocommerce/#post-73316\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 17 Oct 2014 07:15:23 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73316@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"A plugin for sending sms notification after placing orders using woocommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"sabbir1991\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Blocked Banners Stats\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"https://wordpress.org/plugins/blocked-banners-stats/#post-73271\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 15 Oct 2014 18:53:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73271@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"Count visitors who has ad-blockers enabled\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:6:\"botmon\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Viral Sign Ups\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://wordpress.org/plugins/viral-sign-ups/#post-73036\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 09 Oct 2014 10:38:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73036@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:130:\"Grow your email list with Viral Sign Ups &#38; get your customers to easily refer friends and earn incentives for their referrals.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"globeorange\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"seedtag\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"https://wordpress.org/plugins/seedtag/#post-71745\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 04 Sep 2014 17:29:01 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"71745@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"Easy seedtag install\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"seedtag\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"ACF Enhanced Message Field\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:68:\"https://wordpress.org/plugins/acf-enhanced-message-field/#post-73286\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Oct 2014 03:04:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73286@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"Adds an enhanced version of the default Message field to accept PHP and certainly no wpauto().\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Dreb Bits\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"WooCommerce Coupon Schedule\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wordpress.org/plugins/woocommerce-coupon-schedule/#post-73317\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 17 Oct 2014 07:16:25 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73317@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"Replaces default coupon expiry field with dedicated tab for coupon validity settings.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"karolisg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:21:\"Home &amp; Blog Label\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:57:\"https://wordpress.org/plugins/home-blog-label/#post-73295\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 16 Oct 2014 13:52:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73295@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:111:\"Simply adds a Home or Blog label to a page title if it&#039;s manually set to display as the home or blog page.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"Dan Nisbet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"OSD Social Media Sharing\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"https://wordpress.org/plugins/osd-social-media-sharing/#post-73272\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 15 Oct 2014 19:19:48 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73272@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:145:\"OSD Social Media Sharing is extremely light weight and does not require external libraries to share your WordPress content on social media sites.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"osdwebdev\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"ElasticPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"https://wordpress.org/plugins/elasticpress/#post-73243\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 14 Oct 2014 19:01:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73243@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"Integrate Elasticsearch with WordPress.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Taylor Lovett\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:10:\"VictorChat\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"https://wordpress.org/plugins/victorchat/#post-70627\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 06 Aug 2014 07:12:24 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"70627@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:99:\"VictorChat is a live chat solution that helps website owners convert their visitors into customers!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"serop\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"Maven Central Shortcodes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:66:\"https://wordpress.org/plugins/maven-central-shortcodes/#post-73239\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 14 Oct 2014 15:53:33 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"73239@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:91:\"A WordPress plugin that uses shortcodes to display Maven Central dependencies and versions.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"bensechrist\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:42:\"https://wordpress.org/plugins/rss/view/new\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:11:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Mon, 20 Oct 2014 20:32:27 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:7:\"expires\";s:29:\"Mon, 20 Oct 2014 20:52:07 GMT\";s:13:\"cache-control\";s:0:\"\";s:6:\"pragma\";s:0:\"\";s:13:\"last-modified\";s:31:\"Mon, 20 Oct 2014 20:17:07 +0000\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 250\";}s:5:\"build\";s:14:\"20130708171016\";}','no'),(620,'_transient_timeout_feed_mod_77fa140e07ce53fe8c87136636f83d72','1413881231','no'),(621,'_transient_feed_mod_77fa140e07ce53fe8c87136636f83d72','1413838031','no'),(622,'_transient_timeout_dash_de3249c4736ad3bd2cd29147c4a0d43e','1413881234','yes'),(623,'_transient_dash_de3249c4736ad3bd2cd29147c4a0d43e','<h4>Most Popular</h4>\n<h5><a href=\'https://wordpress.org/plugins/mass-advertising/\'>Mass Advertising for WordPress</a></h5>&nbsp;<span>(<a href=\'plugin-install.php?tab=plugin-information&amp;plugin=mass-advertising&amp;_wpnonce=ab4c4e935f&amp;TB_iframe=true&amp;width=600&amp;height=800\' class=\'thickbox\' title=\'Mass Advertising for WordPress\'>Install</a>)</span>\n<p>Grow your -enterprise brand- and your business! Simply install, select your -advertising power- and... you are off to the races!</p>\n<h4>Newest Plugins</h4>\n<h5><a href=\'https://wordpress.org/plugins/woocommerce-coupon-schedule/\'>WooCommerce Coupon Schedule</a></h5>&nbsp;<span>(<a href=\'plugin-install.php?tab=plugin-information&amp;plugin=woocommerce-coupon-schedule&amp;_wpnonce=1f5867eb80&amp;TB_iframe=true&amp;width=600&amp;height=800\' class=\'thickbox\' title=\'WooCommerce Coupon Schedule\'>Install</a>)</span>\n<p>Replaces default coupon expiry field with dedicated tab for coupon validity settings.</p>\n','no'),(624,'_transient_timeout_feed_b9388c83948825c1edaef0d856b7b109','1413881233','no'),(625,'_transient_feed_b9388c83948825c1edaef0d856b7b109','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n	\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:72:\"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"WordPress Plugins Â» View: Most Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:45:\"https://wordpress.org/plugins/browse/popular/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"WordPress Plugins Â» View: Most Popular\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"en-US\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 20 Oct 2014 20:02:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"http://bbpress.org/?v=1.1\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:15:{i:0;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Contact Form 7\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"https://wordpress.org/plugins/contact-form-7/#post-2141\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 02 Aug 2007 12:45:03 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2141@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"Just another contact form plugin. Simple but flexible.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Takayuki Miyoshi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"WordPress SEO by Yoast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"https://wordpress.org/plugins/wordpress-seo/#post-8321\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 01 Jan 2009 20:34:44 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"8321@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:131:\"Improve your WordPress SEO: Write better content and have a fully optimized WordPress site using Yoast&#039;s WordPress SEO plugin.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"Akismet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"https://wordpress.org/plugins/akismet/#post-15\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:11:30 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"15@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:98:\"Akismet checks your comments against the Akismet Web service to see if they look like spam or not.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Matt Mullenweg\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Wordfence Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/plugins/wordfence/#post-29832\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 04 Sep 2011 03:13:51 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"29832@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:137:\"Wordfence Security is a free enterprise class security and performance plugin that makes your site up to 50 times faster and more secure.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Wordfence\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"Google Analytics by Yoast\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://wordpress.org/plugins/google-analytics-for-wordpress/#post-2316\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 14 Sep 2007 12:15:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:35:\"2316@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:124:\"Track your WordPress site easily with the latest tracking codes and lots added data for search result pages and error pages.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Joost de Valk\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:33:\"WooCommerce - excelling eCommerce\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"https://wordpress.org/plugins/woocommerce/#post-29860\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 05 Sep 2011 08:13:36 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"29860@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:97:\"WooCommerce is a powerful, extendable eCommerce plugin that helps you sell anything. Beautifully.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"WooThemes\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:20:\"MailPoet Newsletters\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/wysija-newsletters/#post-32629\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 02 Dec 2011 17:09:16 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"32629@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:94:\"Send newsletters, post notifications or autoresponders from WordPress easily, and beautifully.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"MailPoet Staff\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"Jetpack by WordPress.com\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"https://wordpress.org/plugins/jetpack/#post-23862\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 Jan 2011 02:21:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"23862@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:104:\"Supercharge your WordPress site with powerful features previously only available to WordPress.com users.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"Tim Moore\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"iThemes Security (formerly Better WP Security)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/better-wp-security/#post-21738\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 22 Oct 2010 22:06:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"21738@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"The easiest, most effective way to secure WordPress in seconds.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Chris Wiegman\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"WordPress Importer\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:60:\"https://wordpress.org/plugins/wordpress-importer/#post-18101\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 20 May 2010 17:42:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"18101@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"Import posts, pages, comments, custom fields, categories, tags and more from a WordPress export file.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Brian Colinger\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"Google XML Sitemaps\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:64:\"https://wordpress.org/plugins/google-sitemap-generator/#post-132\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 09 Mar 2007 22:31:32 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"132@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:105:\"This plugin will generate a special XML sitemap which will help search engines to better index your blog.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"arnee\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:19:\"All in One SEO Pack\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:59:\"https://wordpress.org/plugins/all-in-one-seo-pack/#post-753\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 30 Mar 2007 20:08:18 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"753@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:126:\"All in One SEO Pack is a WordPress SEO plugin to automatically optimize your WordPress blog for Search Engines such as Google.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"uberdose\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:12;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:27:\"Black Studio TinyMCE Widget\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wordpress.org/plugins/black-studio-tinymce-widget/#post-31973\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 10 Nov 2011 15:06:14 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"31973@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:39:\"The visual editor widget for Wordpress.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Marco Chiesi\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:13;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Meta Slider\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"https://wordpress.org/plugins/ml-slider/#post-49521\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 14 Feb 2013 16:56:31 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"49521@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:145:\"Easy to use WordPress slider plugin. Create SEO optimised responsive slideshows with Nivo Slider, Flex Slider, Coin Slider and Responsive Slides.\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:11:\"Matcha Labs\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:14;a:6:{s:4:\"data\";s:30:\"\n			\n			\n			\n			\n			\n			\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"Mass Advertising for WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:58:\"https://wordpress.org/plugins/mass-advertising/#post-69628\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 09 Jul 2014 12:05:49 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:36:\"69628@https://wordpress.org/plugins/\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:128:\"Grow your -enterprise brand- and your business! Simply install, select your -advertising power- and... you are off to the races!\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"Mass Advertising\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:46:\"https://wordpress.org/plugins/rss/view/popular\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";a:11:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Mon, 20 Oct 2014 20:32:29 GMT\";s:12:\"content-type\";s:23:\"text/xml; charset=UTF-8\";s:10:\"connection\";s:5:\"close\";s:4:\"vary\";s:15:\"Accept-Encoding\";s:7:\"expires\";s:29:\"Mon, 20 Oct 2014 20:37:36 GMT\";s:13:\"cache-control\";s:0:\"\";s:6:\"pragma\";s:0:\"\";s:13:\"last-modified\";s:31:\"Mon, 20 Oct 2014 20:02:36 +0000\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:11:\"HIT lax 250\";}s:5:\"build\";s:14:\"20130708171016\";}','no'),(626,'_transient_timeout_feed_mod_b9388c83948825c1edaef0d856b7b109','1413881233','no'),(627,'_transient_feed_mod_b9388c83948825c1edaef0d856b7b109','1413838033','no'),(631,'WPLANG','','yes'),(632,'db_upgraded','','yes'),(633,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:1:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:6:\"latest\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-4.0.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-4.0.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-4.0-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-4.0-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"4.0\";s:7:\"version\";s:3:\"4.0\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"3.8\";s:15:\"partial_version\";s:0:\"\";}}s:12:\"last_checked\";i:1413871128;s:15:\"version_checked\";s:3:\"4.0\";s:12:\"translations\";a:0:{}}','yes'),(634,'can_compress_scripts','0','yes'),(637,'theme_mods_twentyfourteen','a:2:{i:0;b:0;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1413871131;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:3:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:10:\"archives-2\";}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}}}}','yes'),(638,'_site_transient_timeout_wporg_theme_feature_list','1413852727','yes'),(639,'_site_transient_wporg_theme_feature_list','a:4:{s:6:\"Colors\";a:15:{i:0;s:5:\"black\";i:1;s:4:\"blue\";i:2;s:5:\"brown\";i:3;s:4:\"gray\";i:4;s:5:\"green\";i:5;s:6:\"orange\";i:6;s:4:\"pink\";i:7;s:6:\"purple\";i:8;s:3:\"red\";i:9;s:6:\"silver\";i:10;s:3:\"tan\";i:11;s:5:\"white\";i:12;s:6:\"yellow\";i:13;s:4:\"dark\";i:14;s:5:\"light\";}s:6:\"Layout\";a:9:{i:0;s:12:\"fixed-layout\";i:1;s:12:\"fluid-layout\";i:2;s:17:\"responsive-layout\";i:3;s:10:\"one-column\";i:4;s:11:\"two-columns\";i:5;s:13:\"three-columns\";i:6;s:12:\"four-columns\";i:7;s:12:\"left-sidebar\";i:8;s:13:\"right-sidebar\";}s:8:\"Features\";a:20:{i:0;s:19:\"accessibility-ready\";i:1;s:8:\"blavatar\";i:2;s:10:\"buddypress\";i:3;s:17:\"custom-background\";i:4;s:13:\"custom-colors\";i:5;s:13:\"custom-header\";i:6;s:11:\"custom-menu\";i:7;s:12:\"editor-style\";i:8;s:21:\"featured-image-header\";i:9;s:15:\"featured-images\";i:10;s:15:\"flexible-header\";i:11;s:20:\"front-page-post-form\";i:12;s:19:\"full-width-template\";i:13;s:12:\"microformats\";i:14;s:12:\"post-formats\";i:15;s:20:\"rtl-language-support\";i:16;s:11:\"sticky-post\";i:17;s:13:\"theme-options\";i:18;s:17:\"threaded-comments\";i:19;s:17:\"translation-ready\";}s:7:\"Subject\";a:3:{i:0;s:7:\"holiday\";i:1;s:13:\"photoblogging\";i:2;s:8:\"seasonal\";}}','yes'),(640,'_site_transient_timeout_poptags_40cd750bba9870f18aada2478b24840a','1413851691','yes'),(641,'_site_transient_poptags_40cd750bba9870f18aada2478b24840a','a:40:{s:6:\"widget\";a:3:{s:4:\"name\";s:6:\"widget\";s:4:\"slug\";s:6:\"widget\";s:5:\"count\";s:4:\"4690\";}s:4:\"post\";a:3:{s:4:\"name\";s:4:\"Post\";s:4:\"slug\";s:4:\"post\";s:5:\"count\";s:4:\"2907\";}s:6:\"plugin\";a:3:{s:4:\"name\";s:6:\"plugin\";s:4:\"slug\";s:6:\"plugin\";s:5:\"count\";s:4:\"2823\";}s:5:\"admin\";a:3:{s:4:\"name\";s:5:\"admin\";s:4:\"slug\";s:5:\"admin\";s:5:\"count\";s:4:\"2344\";}s:5:\"posts\";a:3:{s:4:\"name\";s:5:\"posts\";s:4:\"slug\";s:5:\"posts\";s:5:\"count\";s:4:\"2238\";}s:7:\"sidebar\";a:3:{s:4:\"name\";s:7:\"sidebar\";s:4:\"slug\";s:7:\"sidebar\";s:5:\"count\";s:4:\"1804\";}s:6:\"google\";a:3:{s:4:\"name\";s:6:\"google\";s:4:\"slug\";s:6:\"google\";s:5:\"count\";s:4:\"1619\";}s:7:\"twitter\";a:3:{s:4:\"name\";s:7:\"twitter\";s:4:\"slug\";s:7:\"twitter\";s:5:\"count\";s:4:\"1591\";}s:6:\"images\";a:3:{s:4:\"name\";s:6:\"images\";s:4:\"slug\";s:6:\"images\";s:5:\"count\";s:4:\"1569\";}s:8:\"comments\";a:3:{s:4:\"name\";s:8:\"comments\";s:4:\"slug\";s:8:\"comments\";s:5:\"count\";s:4:\"1533\";}s:4:\"page\";a:3:{s:4:\"name\";s:4:\"page\";s:4:\"slug\";s:4:\"page\";s:5:\"count\";s:4:\"1496\";}s:9:\"shortcode\";a:3:{s:4:\"name\";s:9:\"shortcode\";s:4:\"slug\";s:9:\"shortcode\";s:5:\"count\";s:4:\"1485\";}s:5:\"image\";a:3:{s:4:\"name\";s:5:\"image\";s:4:\"slug\";s:5:\"image\";s:5:\"count\";s:4:\"1403\";}s:8:\"facebook\";a:3:{s:4:\"name\";s:8:\"Facebook\";s:4:\"slug\";s:8:\"facebook\";s:5:\"count\";s:4:\"1236\";}s:3:\"seo\";a:3:{s:4:\"name\";s:3:\"seo\";s:4:\"slug\";s:3:\"seo\";s:5:\"count\";s:4:\"1183\";}s:5:\"links\";a:3:{s:4:\"name\";s:5:\"links\";s:4:\"slug\";s:5:\"links\";s:5:\"count\";s:4:\"1133\";}s:9:\"wordpress\";a:3:{s:4:\"name\";s:9:\"wordpress\";s:4:\"slug\";s:9:\"wordpress\";s:5:\"count\";s:4:\"1081\";}s:7:\"gallery\";a:3:{s:4:\"name\";s:7:\"gallery\";s:4:\"slug\";s:7:\"gallery\";s:5:\"count\";s:4:\"1027\";}s:6:\"social\";a:3:{s:4:\"name\";s:6:\"social\";s:4:\"slug\";s:6:\"social\";s:5:\"count\";s:4:\"1018\";}s:7:\"widgets\";a:3:{s:4:\"name\";s:7:\"widgets\";s:4:\"slug\";s:7:\"widgets\";s:5:\"count\";s:3:\"849\";}s:5:\"email\";a:3:{s:4:\"name\";s:5:\"email\";s:4:\"slug\";s:5:\"email\";s:5:\"count\";s:3:\"844\";}s:5:\"pages\";a:3:{s:4:\"name\";s:5:\"pages\";s:4:\"slug\";s:5:\"pages\";s:5:\"count\";s:3:\"838\";}s:3:\"rss\";a:3:{s:4:\"name\";s:3:\"rss\";s:4:\"slug\";s:3:\"rss\";s:5:\"count\";s:3:\"806\";}s:6:\"jquery\";a:3:{s:4:\"name\";s:6:\"jquery\";s:4:\"slug\";s:6:\"jquery\";s:5:\"count\";s:3:\"798\";}s:5:\"media\";a:3:{s:4:\"name\";s:5:\"media\";s:4:\"slug\";s:5:\"media\";s:5:\"count\";s:3:\"747\";}s:5:\"video\";a:3:{s:4:\"name\";s:5:\"video\";s:4:\"slug\";s:5:\"video\";s:5:\"count\";s:3:\"710\";}s:4:\"ajax\";a:3:{s:4:\"name\";s:4:\"AJAX\";s:4:\"slug\";s:4:\"ajax\";s:5:\"count\";s:3:\"709\";}s:10:\"javascript\";a:3:{s:4:\"name\";s:10:\"javascript\";s:4:\"slug\";s:10:\"javascript\";s:5:\"count\";s:3:\"673\";}s:7:\"content\";a:3:{s:4:\"name\";s:7:\"content\";s:4:\"slug\";s:7:\"content\";s:5:\"count\";s:3:\"663\";}s:5:\"login\";a:3:{s:4:\"name\";s:5:\"login\";s:4:\"slug\";s:5:\"login\";s:5:\"count\";s:3:\"631\";}s:5:\"photo\";a:3:{s:4:\"name\";s:5:\"photo\";s:4:\"slug\";s:5:\"photo\";s:5:\"count\";s:3:\"626\";}s:10:\"buddypress\";a:3:{s:4:\"name\";s:10:\"buddypress\";s:4:\"slug\";s:10:\"buddypress\";s:5:\"count\";s:3:\"623\";}s:4:\"feed\";a:3:{s:4:\"name\";s:4:\"feed\";s:4:\"slug\";s:4:\"feed\";s:5:\"count\";s:3:\"619\";}s:4:\"link\";a:3:{s:4:\"name\";s:4:\"link\";s:4:\"slug\";s:4:\"link\";s:5:\"count\";s:3:\"613\";}s:6:\"photos\";a:3:{s:4:\"name\";s:6:\"photos\";s:4:\"slug\";s:6:\"photos\";s:5:\"count\";s:3:\"600\";}s:11:\"woocommerce\";a:3:{s:4:\"name\";s:11:\"woocommerce\";s:4:\"slug\";s:11:\"woocommerce\";s:5:\"count\";s:3:\"572\";}s:7:\"youtube\";a:3:{s:4:\"name\";s:7:\"youtube\";s:4:\"slug\";s:7:\"youtube\";s:5:\"count\";s:3:\"564\";}s:8:\"category\";a:3:{s:4:\"name\";s:8:\"category\";s:4:\"slug\";s:8:\"category\";s:5:\"count\";s:3:\"561\";}s:4:\"spam\";a:3:{s:4:\"name\";s:4:\"spam\";s:4:\"slug\";s:4:\"spam\";s:5:\"count\";s:3:\"554\";}s:5:\"share\";a:3:{s:4:\"name\";s:5:\"Share\";s:4:\"slug\";s:5:\"share\";s:5:\"count\";s:3:\"553\";}}','yes'),(648,'_site_transient_timeout_wp-gfm-0.7.2/markdown.php_new_version','1413863074','yes'),(649,'_site_transient_wp-gfm-0.7.2/markdown.php_new_version','0.7.3','yes'),(650,'_site_transient_timeout_wp-gfm-0.7.2/markdown.php_github_data','1413863075','yes'),(651,'_site_transient_wp-gfm-0.7.2/markdown.php_github_data','O:8:\"stdClass\":2:{s:7:\"message\";s:15:\"Bad credentials\";s:17:\"documentation_url\";s:31:\"https://developer.github.com/v3\";}','yes'),(660,'_site_transient_update_plugins','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1413871137;s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:3:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:2:\"15\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:5:\"3.0.2\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/akismet.3.0.2.zip\";}s:17:\"revisr/revisr.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:5:\"51065\";s:4:\"slug\";s:6:\"revisr\";s:6:\"plugin\";s:17:\"revisr/revisr.php\";s:11:\"new_version\";s:5:\"1.7.2\";s:3:\"url\";s:37:\"https://wordpress.org/plugins/revisr/\";s:7:\"package\";s:49:\"https://downloads.wordpress.org/plugin/revisr.zip\";}s:37:\"wp-code-prettify/wp-code-prettify.php\";O:8:\"stdClass\":6:{s:2:\"id\";s:5:\"22472\";s:4:\"slug\";s:16:\"wp-code-prettify\";s:6:\"plugin\";s:37:\"wp-code-prettify/wp-code-prettify.php\";s:11:\"new_version\";s:5:\"0.2.4\";s:3:\"url\";s:47:\"https://wordpress.org/plugins/wp-code-prettify/\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/plugin/wp-code-prettify.zip\";}}}','yes'),(663,'revisr_db_version','1.0','yes'),(664,'revisr_general_settings','a:4:{s:8:\"username\";s:9:\"WordPress\";s:5:\"email\";s:16:\"blog@gingerik.nl\";s:9:\"gitignore\";s:67:\".htaccess\r\nwp-config.php\r\nwp-content/languages/\r\nwp-content/themes/\";s:17:\"automatic_backups\";s:5:\"daily\";}','yes'),(665,'_transient_timeout_settings_errors','1413844073','no'),(666,'_transient_settings_errors','a:1:{i:0;a:4:{s:7:\"setting\";s:7:\"general\";s:4:\"code\";s:16:\"settings_updated\";s:7:\"message\";s:15:\"Settings saved.\";s:4:\"type\";s:7:\"updated\";}}','no'),(671,'revisr_remote_settings','a:3:{s:11:\"remote_name\";s:0:\"\";s:10:\"remote_url\";s:37:\"git@github.com:gingerik/wordpress.git\";s:9:\"auto_push\";s:2:\"on\";}','yes'),(673,'_transient_is_multi_author','0','yes'),(674,'_transient_twentyfourteen_category_count','3','yes'),(682,'_site_transient_timeout_wp-gfm/markdown.php_new_version','1413892728','yes'),(683,'_site_transient_wp-gfm/markdown.php_new_version','0.7.3','yes'),(684,'_site_transient_timeout_wp-gfm/markdown.php_github_data','1413892729','yes'),(686,'_site_transient_wp-gfm/markdown.php_github_data','O:8:\"stdClass\":2:{s:7:\"message\";s:15:\"Bad credentials\";s:17:\"documentation_url\";s:31:\"https://developer.github.com/v3\";}','yes'),(688,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1413871136;s:7:\"checked\";a:4:{s:9:\"sparkling\";s:5:\"1.6.0\";s:14:\"twentyfourteen\";s:3:\"1.2\";s:14:\"twentythirteen\";s:3:\"1.3\";s:12:\"twentytwelve\";s:3:\"1.5\";}s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}}','yes'),(689,'_site_transient_timeout_theme_roots','1413872929','yes'),(690,'_site_transient_theme_roots','a:4:{s:9:\"sparkling\";s:7:\"/themes\";s:14:\"twentyfourteen\";s:7:\"/themes\";s:14:\"twentythirteen\";s:7:\"/themes\";s:12:\"twentytwelve\";s:7:\"/themes\";}','yes'),(692,'theme_mods_sparkling','a:1:{i:0;b:0;}','yes'),(694,'_transient_timeout_revisr_error','1413875326','no'),(695,'_transient_revisr_error','Failed to backup the database.','no');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB AUTO_INCREMENT=65 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (1,2,'_wp_page_template','default'),(2,4,'_edit_last','1'),(3,4,'_edit_lock','1413358782:1'),(5,2,'_edit_lock','1413045228:1'),(6,2,'_edit_last','1'),(7,15,'_edit_last','1'),(8,15,'_edit_lock','1413117918:1'),(10,1,'_wp_trash_meta_status','publish'),(11,1,'_wp_trash_meta_time','1413045518'),(12,1,'_wp_trash_meta_comments_status','a:1:{i:1;s:1:\"1\";}'),(20,22,'_edit_last','1'),(21,22,'_edit_lock','1413356732:1'),(31,37,'_edit_last','1'),(32,37,'_edit_lock','1413117292:1'),(37,45,'_edit_last','1'),(38,45,'_edit_lock','1413132338:1'),(43,51,'_edit_last','1'),(44,51,'_edit_lock','1413318450:1'),(46,54,'_edit_last','1'),(47,54,'_edit_lock','1413357967:1'),(56,70,'_edit_last','1'),(57,70,'_edit_lock','1413489732:1'),(60,108,'branch','master'),(61,108,'commit_hash','d86736c'),(62,108,'files_changed','19'),(63,108,'committed_files','a:19:{i:0;s:12:\"?? index.php\";i:1;s:14:\"?? license.txt\";i:2;s:14:\"?? readme.html\";i:3;s:18:\"?? wp-activate.php\";i:4;s:12:\"?? wp-admin/\";i:5;s:21:\"?? wp-blog-header.php\";i:6;s:23:\"?? wp-comments-post.php\";i:7;s:23:\"?? wp-config-sample.php\";i:8;s:14:\"?? wp-content/\";i:9;s:14:\"?? wp-cron.php\";i:10;s:15:\"?? wp-includes/\";i:11;s:20:\"?? wp-links-opml.php\";i:12;s:14:\"?? wp-load.php\";i:13;s:15:\"?? wp-login.php\";i:14;s:14:\"?? wp-mail.php\";i:15;s:18:\"?? wp-settings.php\";i:16;s:16:\"?? wp-signup.php\";i:17;s:19:\"?? wp-trackback.php\";i:18;s:13:\"?? xmlrpc.php\";}'),(64,108,'db_hash','d86736c');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(20) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB AUTO_INCREMENT=109 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (1,1,'2014-10-11 15:51:08','2014-10-11 15:51:08','Welcome to WordPress. This is your first post. Edit or delete it, then start blogging!','Hello world!','','trash','open','open','','hello-world','','','2014-10-11 18:38:38','2014-10-11 16:38:38','',0,'http://gingerik.nl/?p=1',0,'post','',1),(2,1,'2014-10-11 15:51:08','2014-10-11 15:51:08','','General','','publish','open','open','','sample-page','','','2014-10-11 18:34:19','2014-10-11 16:34:19','',0,'http://gingerik.nl/?page_id=2',0,'page','',0),(4,1,'2014-10-11 18:33:04','2014-10-11 16:33:04','## Installation\r\n\r\n_Make sure you download the latest plugings from [1] and [2]._\r\n\r\nInstall the plugins.\r\n\r\n```bash\r\ncd /tmp\r\n# install wp-gfm\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n# install wp-code-prettify\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\n* Visit <http://blog.gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://blog.gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`;\r\n* Visit <http://blog.gingerik.nl/wp-admin/options-general.php?page=wp-code-prettify> and:\r\n  - set _Always load the js/css files?_ to `Yes`;\r\n  - add some custom CSS to change the line numbering and indent when adding `.linenums`:\r\n\r\n```css file\r\n/* style file contents */\r\npre.prettyprint.file {\r\n    margin-left: 2em;\r\n    margin-right: 2em;\r\n}\r\n\r\n/* style line numbers */\r\nol {\r\n    counter-reset: item;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n}\r\nol > li {\r\n    display: block;\r\n    margin-bottom: .25em;\r\n    margin-left: 2em;\r\n}\r\nol > li:before {\r\n    display: inline-block;\r\n    content: counter(item, decimal-leading-zero) \" \";\r\n    counter-increment: item;\r\n    width: 2em;\r\n    margin-left: -2em;\r\n}\r\n```\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Install Markdown & Prettify on Wordpress','','publish','open','open','','markdown','','','2014-10-15 09:41:34','2014-10-15 07:41:34','',0,'http://gingerik.nl/?p=4',0,'post','',0),(5,1,'2014-10-11 18:08:12','2014-10-11 16:08:12','[markdown]\r\n\r\n# Install Markdown on Wordpress\r\n\r\nFrom the official repository[1].\r\nSurf to https://github.com/makotokw/wp-gfm/releases and download the latest release.\r\n\r\n```bash\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo cp wp-gfm-0.7.2.tar.gz  /var/lib/wordpress/wp-content/plugins/\r\n```\r\n\r\n[1] https://github.com/makotokw/wp-gfm\r\n\r\n[/markdown]','Markdown','','inherit','open','open','','4-revision-v1','','','2014-10-11 18:08:12','2014-10-11 16:08:12','',4,'http://gingerik.nl/?p=5',0,'revision','',0),(6,1,'2014-10-11 18:15:26','2014-10-11 16:15:26','# Install Markdown on Wordpress\r\n\r\nFrom the official repository[1].\r\nSurf to https://github.com/makotokw/wp-gfm/releases and download the latest release.\r\n\r\n```bash\r\ncd /tmp\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n[1] https://github.com/makotokw/wp-gfm\r\n','Markdown','','inherit','open','open','','4-revision-v1','','','2014-10-11 18:15:26','2014-10-11 16:15:26','',4,'http://gingerik.nl/?p=6',0,'revision','',0),(7,1,'2014-10-11 18:16:38','2014-10-11 16:16:38','# Install Markdown on Wordpress\r\n\r\nFrom the official repository[1].\r\nSurf to https://github.com/makotokw/wp-gfm/releases and download the latest release.\r\n\r\n```bash\r\ncd /tmp\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\nGo to http://gingerik.nl/wp-admin/options-general.php?page=wp-gfm and check `All contents are markdown!`.\r\n\r\n[1] https://github.com/makotokw/wp-gfm\r\n','Markdown','','inherit','open','open','','4-revision-v1','','','2014-10-11 18:16:38','2014-10-11 16:16:38','',4,'http://gingerik.nl/?p=7',0,'revision','',0),(8,1,'2014-10-11 18:17:20','2014-10-11 16:17:20','# Install Markdown on Wordpress\r\n\r\nFrom the official repository[1].\r\nSurf to <https://github.com/makotokw/wp-gfm/releases> and download the latest release.\r\n\r\n```bash\r\ncd /tmp\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\nGo to <http://gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`.\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n','Markdown','','inherit','open','open','','4-revision-v1','','','2014-10-11 18:17:20','2014-10-11 16:17:20','',4,'http://gingerik.nl/?p=8',0,'revision','',0),(9,1,'2014-10-11 18:21:34','2014-10-11 16:21:34','# Install Markdown on Wordpress\r\n\r\nFrom the official repository[1].\r\nSurf to <https://github.com/makotokw/wp-gfm/releases> and download the latest release.\r\n\r\n```bash\r\ncd /tmp\r\n\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n* Visit <http://gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`.\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n','Markdown','','inherit','open','open','','4-revision-v1','','','2014-10-11 18:21:34','2014-10-11 16:21:34','',4,'http://gingerik.nl/?p=9',0,'revision','',0),(10,1,'2014-10-11 18:23:11','2014-10-11 16:23:11','# Install Markdown on Wordpress\r\n\r\nMake sure you download the latest plugings from [1] and [2].\r\n\r\n* Install the plugins\r\n\r\n```bash\r\ncd /tmp\r\n\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n* Visit <http://gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`.\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Markdown','','inherit','open','open','','4-revision-v1','','','2014-10-11 18:23:11','2014-10-11 16:23:11','',4,'http://gingerik.nl/?p=10',0,'revision','',0),(11,1,'2014-10-11 18:23:35','2014-10-11 16:23:35','# Install Markdown on Wordpress\r\n\r\n_Make sure you download the latest plugings from [1] and [2]._\r\n\r\n* Install the plugins\r\n\r\n```bash\r\ncd /tmp\r\n\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n* Visit <http://gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`.\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Markdown','','inherit','open','open','','4-revision-v1','','','2014-10-11 18:23:35','2014-10-11 16:23:35','',4,'http://gingerik.nl/?p=11',0,'revision','',0),(12,1,'2014-10-11 18:25:53','2014-10-11 16:25:53','# Install Markdown on Wordpress\r\n\r\n_Make sure you download the latest plugings from [1] and [2]._\r\n\r\n* Install the plugins\r\n```bash\r\ncd /tmp\r\n\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n* Visit <http://gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`;\r\n* Visit <https://wordpress.org/plugins/wp-code-prettify> and set `Allways load the js/css files?` to `Yes`.\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Markdown','','inherit','open','open','','4-revision-v1','','','2014-10-11 18:25:53','2014-10-11 16:25:53','',4,'http://gingerik.nl/?p=12',0,'revision','',0),(13,1,'2014-10-11 18:33:04','2014-10-11 16:33:04','# Install Markdown on Wordpress\r\n\r\n_Make sure you download the latest plugings from [1] and [2]._\r\n\r\n* Install the plugins\r\n```bash\r\ncd /tmp\r\n\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n* Visit <http://gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`;\r\n* Visit <https://wordpress.org/plugins/wp-code-prettify> and set `Always load the js/css files?` to `Yes`.\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Markdown','','inherit','open','open','','4-revision-v1','','','2014-10-11 18:33:04','2014-10-11 16:33:04','',4,'http://gingerik.nl/?p=13',0,'revision','',0),(14,1,'2014-10-11 18:34:19','2014-10-11 16:34:19','','General','','inherit','open','open','','2-revision-v1','','','2014-10-11 18:34:19','2014-10-11 16:34:19','',2,'http://gingerik.nl/?p=14',0,'revision','',0),(15,1,'2014-10-11 18:38:17','2014-10-11 16:38:17','In my DD-WRT firmware, the NAT loopback is broken. Therefore, if I want to connect to an external hostname from within the internal network, this fails. Though it _does_ work if I connect from outside the LAN!\r\n\r\nThe fix is easy[1], simply add the following command in `administration > commands` as a `startup command`:\r\n\r\n```bash\r\niptables -t nat -I POSTROUTING -o br0 -s 192.168.1.0/24 -d 192.168.1.0/24 -j MASQUERADE\r\n```\r\n\r\n[1] <http://hax.at/text/41>','DD-WRT: internal port forward via a hostname','','publish','open','open','','dd-wrt-internal-port-forward-via-a-hostname','','','2014-10-12 00:38:23','2014-10-11 22:38:23','',0,'http://gingerik.nl/?p=15',0,'post','',0),(16,1,'2014-10-11 18:35:42','2014-10-11 16:35:42','\r\n\r\ndd-wrt internal port forward from external hostname / ip adress\r\n03.03.2011\r\n\r\n\r\nIn recent DD-WRT versions NAT loopback is broken, therefore if you want to connect to an external ip / hostname from the internal network, this does not work even though it works if you connect from outside your lan!\r\n\r\nthe fix is easy, simply add the following command in administration -> commands as a startup command:\r\n\r\niptables -t nat -I POSTROUTING -o br0 -s 192.168.144.0/24 -d 192.168.144.0/24 -j MASQUERADE\r\n\r\n(of course you need to change 192.168.144.0 to your local lan subnet!)\r\n\r\n[1] http://hax.at/text/41','DD-WRT: internal port forward via hostname','','inherit','open','open','','15-revision-v1','','','2014-10-11 18:35:42','2014-10-11 16:35:42','',15,'http://gingerik.nl/?p=16',0,'revision','',0),(17,1,'2014-10-11 18:37:58','2014-10-11 16:37:58','In recent DD-WRT versions the NAT loopback is broken. Therefore, if you want to connect to an external hostname from within the internal network, this fails. Though it _does_ work if you connect from outside your LAN!\r\n\r\nThe fix is easy[1], simply add the following command in `administration > commands` as a `startup command`:\r\n\r\n```bash\r\niptables -t nat -I POSTROUTING -o br0 -s 192.168.1.0/24 -d 192.168.1.0/24 -j MASQUERADE\r\n```\r\n\r\n[1] http://hax.at/text/41','DD-WRT: internal port forward via a hostname','','inherit','open','open','','15-revision-v1','','','2014-10-11 18:37:58','2014-10-11 16:37:58','',15,'http://gingerik.nl/?p=17',0,'revision','',0),(18,1,'2014-10-11 18:38:17','2014-10-11 16:38:17','In recent DD-WRT versions the NAT loopback is broken. Therefore, if you want to connect to an external hostname from within the internal network, this fails. Though it _does_ work if you connect from outside your LAN!\r\n\r\nThe fix is easy[1], simply add the following command in `administration > commands` as a `startup command`:\r\n\r\n```bash\r\niptables -t nat -I POSTROUTING -o br0 -s 192.168.1.0/24 -d 192.168.1.0/24 -j MASQUERADE\r\n```\r\n\r\n[1] <http://hax.at/text/41>','DD-WRT: internal port forward via a hostname','','inherit','open','open','','15-revision-v1','','','2014-10-11 18:38:17','2014-10-11 16:38:17','',15,'http://gingerik.nl/?p=18',0,'revision','',0),(19,1,'2014-10-11 18:38:38','2014-10-11 16:38:38','Welcome to WordPress. This is your first post. Edit or delete it, then start blogging!','Hello world!','','inherit','open','open','','1-revision-v1','','','2014-10-11 18:38:38','2014-10-11 16:38:38','',1,'http://gingerik.nl/?p=19',0,'revision','',0),(20,1,'2014-10-11 18:39:32','2014-10-11 16:39:32','In my DD-WRT firmware, the NAT loopback is broken. Therefore, if you want to connect to an external hostname from within the internal network, this fails. Though it _does_ work if you connect from outside your LAN!\r\n\r\nThe fix is easy[1], simply add the following command in `administration > commands` as a `startup command`:\r\n\r\n```bash\r\niptables -t nat -I POSTROUTING -o br0 -s 192.168.1.0/24 -d 192.168.1.0/24 -j MASQUERADE\r\n```\r\n\r\n[1] <http://hax.at/text/41>','DD-WRT: internal port forward via a hostname','','inherit','open','open','','15-revision-v1','','','2014-10-11 18:39:32','2014-10-11 16:39:32','',15,'http://gingerik.nl/?p=20',0,'revision','',0),(21,1,'2014-10-11 18:40:34','2014-10-11 16:40:34','In my DD-WRT firmware, the NAT loopback is broken. Therefore, if I want to connect to an external hostname from within the internal network, this fails. Though it _does_ work if I connect from outside the LAN!\r\n\r\nThe fix is easy[1], simply add the following command in `administration > commands` as a `startup command`:\r\n\r\n```bash\r\niptables -t nat -I POSTROUTING -o br0 -s 192.168.1.0/24 -d 192.168.1.0/24 -j MASQUERADE\r\n```\r\n\r\n[1] <http://hax.at/text/41>','DD-WRT: internal port forward via a hostname','','inherit','open','open','','15-revision-v1','','','2014-10-11 18:40:34','2014-10-11 16:40:34','',15,'http://gingerik.nl/?p=21',0,'revision','',0),(22,1,'2014-10-11 10:05:13','2014-10-11 08:05:13','_Install and configure using the alternate Debian method[1]._\r\n\r\n## Installation\r\n\r\nInstall WordPress, Apache & MySQL.\r\n\r\n```bash\r\nsudo apt-get install wordpress apache2 mysql-server\r\n```\r\n\r\n## Configuration\r\n\r\nSet-up MySQL.\r\n\r\n```bash\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\n```\r\n\r\nConfigure & reload Apache. First edit `/etc/apache2/sites-available/blog.gingerik.nl` and add the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\nThen enable the site & some modules.\r\n\r\n```bash\r\nsudo a2dissite default\r\nsudo a2ensite blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\nNow visit <http://blog.gingerik.nl> to start blogging!\r\n\r\n## Extra\r\n\r\n### Install theme\r\n\r\n```bash\r\ncd /tmp\r\nwget https://downloads.wordpress.org/theme/sparkling.1.6.0.zip\r\nsudo unzip sparkling.1.6.0.zip -d /var/lib/wordpress/wp-content/themes/\r\n```\r\n\r\nAnd activate your theme!\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','publish','open','open','','wordpress-installation','','','2014-10-15 08:59:52','2014-10-15 06:59:52','',0,'http://gingerik.nl/?p=22',0,'post','',0),(23,1,'2014-10-12 00:40:56','2014-10-11 22:40:56','','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-12 00:40:56','2014-10-11 22:40:56','',22,'http://gingerik.nl/?p=23',0,'revision','',0),(24,1,'2014-10-12 07:51:16','2014-10-12 05:51:16','\r\n_Make sure you download the latest plugings from [1] and [2]._\r\n\r\n* Install the plugins\r\n```bash .linenums\r\ncd /tmp\r\n\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n* Visit <http://gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`;\r\n* Visit <https://wordpress.org/plugins/wp-code-prettify> and set `Always load the js/css files?` to `Yes`.\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Install Markdown on Wordpress','','inherit','open','open','','4-revision-v1','','','2014-10-12 07:51:16','2014-10-12 05:51:16','',4,'http://gingerik.nl/?p=24',0,'revision','',0),(25,1,'2014-10-12 14:04:28','2014-10-12 12:04:28','```bash\r\nsudo apt-get install wordpress apache2 mysql-server\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\nsudo vim /etc/apache2/sites-available/blog.gingerik.nl\r\n```\r\n\r\nAdd the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\n```bash\r\ncd /etc/apache2/sites-enabled/\r\nsudo ln -s ../sites-available/blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-12 14:04:28','2014-10-12 12:04:28','',22,'http://blog.gingerik.nl/?p=25',0,'revision','',0),(26,1,'2014-10-12 14:04:58','2014-10-12 12:04:58','```\r\nsudo apt-get install wordpress apache2 mysql-server\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\nsudo vim /etc/apache2/sites-available/blog.gingerik.nl\r\n```\r\n\r\nAdd the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\n```bash\r\ncd /etc/apache2/sites-enabled/\r\nsudo ln -s ../sites-available/blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-12 14:04:58','2014-10-12 12:04:58','',22,'http://blog.gingerik.nl/?p=26',0,'revision','',0),(27,1,'2014-10-12 14:05:06','2014-10-12 12:05:06','```sh\r\nsudo apt-get install wordpress apache2 mysql-server\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\nsudo vim /etc/apache2/sites-available/blog.gingerik.nl\r\n```\r\n\r\nAdd the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\n```bash\r\ncd /etc/apache2/sites-enabled/\r\nsudo ln -s ../sites-available/blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-12 14:05:06','2014-10-12 12:05:06','',22,'http://blog.gingerik.nl/?p=27',0,'revision','',0),(28,1,'2014-10-12 14:05:13','2014-10-12 12:05:13','```bash\r\nsudo apt-get install wordpress apache2 mysql-server\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\nsudo vim /etc/apache2/sites-available/blog.gingerik.nl\r\n```\r\n\r\nAdd the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\n```bash\r\ncd /etc/apache2/sites-enabled/\r\nsudo ln -s ../sites-available/blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-12 14:05:13','2014-10-12 12:05:13','',22,'http://blog.gingerik.nl/?p=28',0,'revision','',0),(29,1,'2014-10-12 14:05:54','2014-10-12 12:05:54','Install and configure using the alternate Debian method[1].\r\n\r\n```bash\r\nsudo apt-get install wordpress apache2 mysql-server\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\nsudo vim /etc/apache2/sites-available/blog.gingerik.nl\r\n```\r\n\r\nAdd the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\n```bash\r\ncd /etc/apache2/sites-enabled/\r\nsudo ln -s ../sites-available/blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-12 14:05:54','2014-10-12 12:05:54','',22,'http://blog.gingerik.nl/?p=29',0,'revision','',0),(30,1,'2014-10-14 11:59:19','2014-10-14 09:59:19','_Install and configure using the alternate Debian method[1]._\r\n\r\n## Installation\r\n\r\nInstall WordPress, Apache & MySQL.\r\n\r\n```bash\r\nsudo apt-get install wordpress apache2 mysql-server\r\n```\r\n\r\n## Configuration\r\n\r\nSet-up MySQL.\r\n\r\n```bash\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\n```\r\n\r\nConfigure & reload Apache. First edit `/etc/apache2/sites-available/blog.gingerik.nl` and add the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\nThen enable the site & some modules.\r\n\r\n```bash\r\ncd /etc/apache2/sites-enabled/\r\nsudo ln -s ../sites-available/blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\nNow visit <http://blog.gingerik.nl> to start blogging!\r\n\r\n## Extra\r\n\r\n### Install theme\r\n\r\n```bash\r\ncd /tmp\r\nwget https://downloads.wordpress.org/theme/sparkling.1.6.0.zip\r\nsudo unzip sparkling.1.6.0.zip -d /var/lib/wordpress/wp-content/themes/\r\n```\r\n\r\nAnd activate your theme!\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-autosave-v1','','','2014-10-14 11:59:19','2014-10-14 09:59:19','',22,'http://blog.gingerik.nl/?p=30',0,'revision','',0),(31,1,'2014-10-12 14:07:01','2014-10-12 12:07:01','_Install and configure using the alternate Debian method[1]._\r\n\r\n## Installation\r\n\r\n```bash\r\nsudo apt-get install wordpress apache2 mysql-server\r\n```\r\n\r\n## Configuration\r\n\r\n```bash\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\nsudo vim /etc/apache2/sites-available/blog.gingerik.nl\r\n```\r\n\r\nAdd the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\n```bash\r\ncd /etc/apache2/sites-enabled/\r\nsudo ln -s ../sites-available/blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-12 14:07:01','2014-10-12 12:07:01','',22,'http://blog.gingerik.nl/?p=31',0,'revision','',0),(32,1,'2014-10-12 14:11:48','2014-10-12 12:11:48','_Install and configure using the alternate Debian method[1]._\r\n\r\n## Installation\r\n\r\nInstall WordPress, Apache & MySQL.\r\n\r\n```bash\r\nsudo apt-get install wordpress apache2 mysql-server\r\n```\r\n\r\n## Configuration\r\n\r\nSet-up MySQL.\r\n\r\n```bash\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\n```\r\n\r\nConfigure & reload Apache. First edit `/etc/apache2/sites-available/blog.gingerik.nl` and add the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\nThen enable the site & some modules.\r\n\r\n```bash\r\ncd /etc/apache2/sites-enabled/\r\nsudo ln -s ../sites-available/blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\nNow visit <blog.gingerik.nl> to start blogging!\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-12 14:11:48','2014-10-12 12:11:48','',22,'http://blog.gingerik.nl/?p=32',0,'revision','',0),(33,1,'2014-10-12 14:12:16','2014-10-12 12:12:16','_Install and configure using the alternate Debian method[1]._\r\n\r\n## Installation\r\n\r\nInstall WordPress, Apache & MySQL.\r\n\r\n```bash\r\nsudo apt-get install wordpress apache2 mysql-server\r\n```\r\n\r\n## Configuration\r\n\r\nSet-up MySQL.\r\n\r\n```bash\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\n```\r\n\r\nConfigure & reload Apache. First edit `/etc/apache2/sites-available/blog.gingerik.nl` and add the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\nThen enable the site & some modules.\r\n\r\n```bash\r\ncd /etc/apache2/sites-enabled/\r\nsudo ln -s ../sites-available/blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\nNow visit <http://blog.gingerik.nl> to start blogging!\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-12 14:12:16','2014-10-12 12:12:16','',22,'http://blog.gingerik.nl/?p=33',0,'revision','',0),(34,1,'2014-10-15 08:59:12','2014-10-15 06:59:12','## Installation\n\n_Make sure you download the latest plugings from [1] and [2]._\n\nInstall the plugins.\n\n```bash\ncd /tmp\n# install wp-gfm\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\n# install wp-code-prettify\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\n```\n\n## Configuration\n\n* Visit <http://blog.gingerik.nl/wp-admin/plugins.php> and activate the plugins;\n* Visit <http://blog.gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`;\n* Visit <http://blog.gingerik.nl/wp-admin/options-general.php?page=wp-code-prettify> and:\n  - set _Always load the js/css files?_ to `Yes`;\n  - add some custom CSS to change the line numbering and indent when adding `.linenums`:\n\n```\npre.linenums {\n    margin-left: 2em;\n}\nol {\n    counter-reset: item;\n    margin-left: 0;\n    padding-left: 0;\n}\nol > li {\n    display: block;\n    margin-bottom: .25em;\n    margin-left: 2em;\n}\nol > li:before {\n    display: inline-block;\n    content: counter(item, decimal-leading-zero) \" \";\n    counter-increment: item;\n    width: 2em;\n    margin-left: -2em;\n}\n```\n\n[1] <https://github.com/makotokw/wp-gfm>\n[2] <https://wordpress.org/plugins/wp-code-prettify>\n','Install Markdown & Prettify on Wordpress','','inherit','open','open','','4-autosave-v1','','','2014-10-15 08:59:12','2014-10-15 06:59:12','',4,'http://blog.gingerik.nl/?p=34',0,'revision','',0),(35,1,'2014-10-12 14:15:31','2014-10-12 12:15:31','_Make sure you download the latest plugings from [1] and [2]._\r\n\r\n* Install the plugins\r\n```bash\r\ncd /tmp\r\n\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n* Visit <http://gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`;\r\n* Visit <https://wordpress.org/plugins/wp-code-prettify> and:\r\n  - set `Always load the js/css files?` to `Yes`;\r\n  - add some custom CSS to change the line numbering:\r\n\r\n```\r\nol {\r\n    counter-reset: item;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n}\r\nol > li {\r\n    display: block;\r\n    margin-bottom: .25em;\r\n    margin-left: 2em;\r\n}\r\nol > li:before {\r\n    display: inline-block;\r\n    content: counter(item, decimal-leading-zero) \" \";\r\n    counter-increment: item;\r\n    width: 2em;\r\n    margin-left: -2em;\r\n}\r\n```\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Install Markdown & Prettify on Wordpress','','inherit','open','open','','4-revision-v1','','','2014-10-12 14:15:31','2014-10-12 12:15:31','',4,'http://blog.gingerik.nl/?p=35',0,'revision','',0),(36,1,'2014-10-12 14:19:34','2014-10-12 12:19:34','## Installation\r\n\r\n_Make sure you download the latest plugings from [1] and [2]._\r\n\r\nInstall the plugins.\r\n\r\n```bash\r\ncd /tmp\r\n# install wp-gfm\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n# install wp-code-prettify\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\n* Visit <http://blog.gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://blog.gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`;\r\n* Visit <https://wordpress.org/plugins/wp-code-prettify> and:\r\n  - set `Always load the js/css files?` to `Yes`;\r\n  - add some custom CSS to change the line numbering:\r\n\r\n```\r\nol {\r\n    counter-reset: item;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n}\r\nol > li {\r\n    display: block;\r\n    margin-bottom: .25em;\r\n    margin-left: 2em;\r\n}\r\nol > li:before {\r\n    display: inline-block;\r\n    content: counter(item, decimal-leading-zero) \" \";\r\n    counter-increment: item;\r\n    width: 2em;\r\n    margin-left: -2em;\r\n}\r\n```\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Install Markdown & Prettify on Wordpress','','inherit','open','open','','4-revision-v1','','','2014-10-12 14:19:34','2014-10-12 12:19:34','',4,'http://blog.gingerik.nl/?p=36',0,'revision','',0),(37,1,'2014-08-03 14:21:34','2014-08-03 12:21:34','_Note that your device needs to be **rooted** in order for this to work!_\r\n\r\n## Preparation\r\n\r\nFirstly, pull `SystemUI.apk` and the device-specific framework from your device.\r\n\r\n```bash\r\nadb shell cp /system/priv-app/SystemUI.apk /sdcard/\r\nadb shell cp /system/framework/framework-res.apk /sdcard/\r\nadb pull /sdcard/SystemUI.apk .\r\nadb pull /sdcard/framework-res.apk .\r\n```\r\n\r\n## Decompiling\r\n\r\nNext, download `apktool_2.0.0b8.jar` from [1], set the correct framework and decompile[2] `SystemUI.apk`.\r\n\r\n```bash\r\nwget http://connortumbleson.com/apktool/test_versions/apktool_2.0.0b9.jar\r\njava -jar apktool_2.0.0b9.jar if framework-res.apk\r\njava -jar apktool_2.0.0b9.jar d SystemUI.apk\r\n```\r\n\r\n## Modification\r\n\r\nNow modify the package[3]: search for `onsText` and update the `TextView`\'s appropriate attribute to `android:maxLength=\"0\"`.\r\n\r\n```bash\r\nsed -i \'/onsText/ s/maxLength=\"[0-9]\\+\"/maxLength=\"0\"/\' SystemUI/res/layout/status_bar.xml\r\n```\r\n\r\n## Recompiling\r\n\r\nRecompile the modified version while preserving the signature (using `-c`), which will allow you to replace the APK later on.\r\n\r\n```bash\r\njava -jar apktool_2.0.0b9.jar b SystemUI -c\r\n```\r\n\r\n## Re-installation\r\n\r\nFinally, push the modified `SystemUI.apk` to the device and install it.\r\n\r\n```bash\r\nadb push SystemUI/dist/SystemUI.apk /sdcard/SystemUI.apk\r\nadb shell su -c \"mount -o remount,rw /system\"\r\nadb shell su -c \"cp /system/priv-app/SystemUI.apk /system/priv-app/SystemUI.apk.BAK\"\r\nadb shell su -c \"cp /system/priv-app/SystemUI.odex /system/priv-app/SystemUI.odex.BAK\"\r\nadb shell su -c \"cp /sdcard/SystemUI.apk /system/priv-app/SystemUI.apk\"\r\nadb shell su -c \"rm /system/priv-app/SystemUI.odex\"\r\nadb shell su -c \"chmod 644 /system/priv-app/SystemUI.apk\"\r\nadb shell su -c \"mount -o remount,ro /system\"\r\nadb shell su -c \"reboot\"\r\n```\r\n\r\n[1] <https://code.google.com/p/android-apktool/>  \r\n[2] <http://forum.xda-developers.com/showthread.php?t=1760133>  \r\n[3] <http://forum.xda-developers.com/showthread.php?t=2021796>  \r\n','Hide the carrier label on your Moto G','','publish','open','open','','hide-the-carrier-label-on-your-moto-g','','','2014-10-12 14:36:43','2014-10-12 12:36:43','',0,'http://blog.gingerik.nl/?p=37',0,'post','',0),(38,1,'2014-10-12 14:24:35','2014-10-12 12:24:35','Firstly, pull `SystemUI.apk` and the device-specific framework from your device.\r\n\r\n    $ adb shell cp /system/priv-app/SystemUI.apk /sdcard/\r\n    $ adb shell cp /system/framework/framework-res.apk /sdcard/\r\n    $ adb pull /sdcard/SystemUI.apk .\r\n    $ adb pull /sdcard/framework-res.apk .\r\n\r\nNext, download `apktool_2.0.0b8.jar` from [1], set the correct framework and decompile[2] `SystemUI.apk`.\r\n\r\n    $ wget http://connortumbleson.com/apktool/test_versions/apktool_2.0.0b9.jar\r\n    $ java -jar apktool_2.0.0b9.jar if framework-res.apk\r\n    $ java -jar apktool_2.0.0b9.jar d SystemUI.apk\r\n\r\nNow modify the package[3]: search for `onsText` and update the `TextView`\'s appropriate attribute to `android:maxLength=\"0\"`.\r\n\r\n    $ sed -i \'/onsText/ s/maxLength=\"[0-9]\\+\"/maxLength=\"0\"/\' SystemUI/res/layout/status_bar.xml\r\n\r\nRecompile the modified version while preserving the signature (using `-c`), which will allow you to replace the APK later on.\r\n\r\n    $ java -jar apktool_2.0.0b9.jar b SystemUI -c\r\n\r\nFinally, push the modified `SystemUI.apk` to the device and install it.\r\n\r\n    $ adb push SystemUI/dist/SystemUI.apk /sdcard/SystemUI.apk\r\n    $ adb shell\r\n    $ su\r\n    # mount -o remount,rw /system\r\n    # cp /system/priv-app/SystemUI.apk /system/priv-app/SystemUI.apk.BAK\r\n    # cp /system/priv-app/SystemUI.odex /system/priv-app/SystemUI.odex.BAK\r\n    # cp /sdcard/SystemUI.apk /system/priv-app/SystemUI.apk\r\n    # rm /system/priv-app/SystemUI.odex\r\n    # chmod 644 /system/priv-app/SystemUI.apk\r\n    # mount -o remount,ro /system\r\n    # reboot\r\n\r\n[1] <https://code.google.com/p/android-apktool/>  \r\n[2] <http://forum.xda-developers.com/showthread.php?t=1760133>  \r\n[3] <http://forum.xda-developers.com/showthread.php?t=2021796>  \r\n','Hide the carrier label on your Moto G','','inherit','open','open','','37-revision-v1','','','2014-10-12 14:24:35','2014-10-12 12:24:35','',37,'http://blog.gingerik.nl/?p=38',0,'revision','',0),(39,1,'2014-10-12 14:27:24','2014-10-12 12:27:24','Firstly, pull `SystemUI.apk` and the device-specific framework from your device.\r\n\r\n```bash\r\nadb shell cp /system/priv-app/SystemUI.apk /sdcard/\r\nadb shell cp /system/framework/framework-res.apk /sdcard/\r\nadb pull /sdcard/SystemUI.apk .\r\nadb pull /sdcard/framework-res.apk .\r\n```\r\n\r\nNext, download `apktool_2.0.0b8.jar` from [1], set the correct framework and decompile[2] `SystemUI.apk`.\r\n\r\n```bash\r\nwget http://connortumbleson.com/apktool/test_versions/apktool_2.0.0b9.jar\r\njava -jar apktool_2.0.0b9.jar if framework-res.apk\r\njava -jar apktool_2.0.0b9.jar d SystemUI.apk\r\n```\r\n\r\nNow modify the package[3]: search for `onsText` and update the `TextView`\'s appropriate attribute to `android:maxLength=\"0\"`.\r\n\r\n```bash\r\nsed -i \'/onsText/ s/maxLength=\"[0-9]\\+\"/maxLength=\"0\"/\' SystemUI/res/layout/status_bar.xml\r\n```\r\n\r\nRecompile the modified version while preserving the signature (using `-c`), which will allow you to replace the APK later on.\r\n\r\n```bash\r\njava -jar apktool_2.0.0b9.jar b SystemUI -c\r\n```\r\n\r\nFinally, push the modified `SystemUI.apk` to the device and install it.\r\n\r\n```bash\r\nadb push SystemUI/dist/SystemUI.apk /sdcard/SystemUI.apk\r\nadb shell\r\nsu\r\nmount -o remount,rw /system\r\ncp /system/priv-app/SystemUI.apk /system/priv-app/SystemUI.apk.BAK\r\ncp /system/priv-app/SystemUI.odex /system/priv-app/SystemUI.odex.BAK\r\ncp /sdcard/SystemUI.apk /system/priv-app/SystemUI.apk\r\nrm /system/priv-app/SystemUI.odex\r\nchmod 644 /system/priv-app/SystemUI.apk\r\nmount -o remount,ro /system\r\nreboot\r\n```\r\n\r\n[1] <https://code.google.com/p/android-apktool/>  \r\n[2] <http://forum.xda-developers.com/showthread.php?t=1760133>  \r\n[3] <http://forum.xda-developers.com/showthread.php?t=2021796>  \r\n','Hide the carrier label on your Moto G','','inherit','open','open','','37-revision-v1','','','2014-10-12 14:27:24','2014-10-12 12:27:24','',37,'http://blog.gingerik.nl/?p=39',0,'revision','',0),(40,1,'2014-10-12 14:29:45','2014-10-12 12:29:45','Firstly, pull `SystemUI.apk` and the device-specific framework from your device.\r\n\r\n```bash\r\nadb shell cp /system/priv-app/SystemUI.apk /sdcard/\r\nadb shell cp /system/framework/framework-res.apk /sdcard/\r\nadb pull /sdcard/SystemUI.apk .\r\nadb pull /sdcard/framework-res.apk .\r\n```\r\n\r\nNext, download `apktool_2.0.0b8.jar` from [1], set the correct framework and decompile[2] `SystemUI.apk`.\r\n\r\n```bash\r\nwget http://connortumbleson.com/apktool/test_versions/apktool_2.0.0b9.jar\r\njava -jar apktool_2.0.0b9.jar if framework-res.apk\r\njava -jar apktool_2.0.0b9.jar d SystemUI.apk\r\n```\r\n\r\nNow modify the package[3]: search for `onsText` and update the `TextView`\'s appropriate attribute to `android:maxLength=\"0\"`.\r\n\r\n```bash\r\nsed -i \'/onsText/ s/maxLength=\"[0-9]\\+\"/maxLength=\"0\"/\' SystemUI/res/layout/status_bar.xml\r\n```\r\n\r\nRecompile the modified version while preserving the signature (using `-c`), which will allow you to replace the APK later on.\r\n\r\n```bash\r\njava -jar apktool_2.0.0b9.jar b SystemUI -c\r\n```\r\n\r\nFinally, push the modified `SystemUI.apk` to the device and install it.\r\n\r\n```bash\r\nadb push SystemUI/dist/SystemUI.apk /sdcard/SystemUI.apk\r\nadb shell \"su -c \'mount -o remount,rw /system; cp /system/priv-app/SystemUI.apk /system/priv-app/SystemUI.apk.BAK; cp /system/priv-app/SystemUI.odex /system/priv-app/SystemUI.odex.BAK; cp /sdcard/SystemUI.apk /system/priv-app/SystemUI.apk; rm /system/priv-app/SystemUI.odex; chmod 644 /system/priv-app/SystemUI.apk; mount -o remount,ro /system; reboot\'\"\r\n```\r\n\r\n[1] <https://code.google.com/p/android-apktool/>  \r\n[2] <http://forum.xda-developers.com/showthread.php?t=1760133>  \r\n[3] <http://forum.xda-developers.com/showthread.php?t=2021796>  \r\n','Hide the carrier label on your Moto G','','inherit','open','open','','37-revision-v1','','','2014-10-12 14:29:45','2014-10-12 12:29:45','',37,'http://blog.gingerik.nl/?p=40',0,'revision','',0),(41,1,'2014-10-12 14:31:44','2014-10-12 12:31:44','Firstly, pull `SystemUI.apk` and the device-specific framework from your device.\r\n\r\n```bash\r\nadb shell cp /system/priv-app/SystemUI.apk /sdcard/\r\nadb shell cp /system/framework/framework-res.apk /sdcard/\r\nadb pull /sdcard/SystemUI.apk .\r\nadb pull /sdcard/framework-res.apk .\r\n```\r\n\r\nNext, download `apktool_2.0.0b8.jar` from [1], set the correct framework and decompile[2] `SystemUI.apk`.\r\n\r\n```bash\r\nwget http://connortumbleson.com/apktool/test_versions/apktool_2.0.0b9.jar\r\njava -jar apktool_2.0.0b9.jar if framework-res.apk\r\njava -jar apktool_2.0.0b9.jar d SystemUI.apk\r\n```\r\n\r\nNow modify the package[3]: search for `onsText` and update the `TextView`\'s appropriate attribute to `android:maxLength=\"0\"`.\r\n\r\n```bash\r\nsed -i \'/onsText/ s/maxLength=\"[0-9]\\+\"/maxLength=\"0\"/\' SystemUI/res/layout/status_bar.xml\r\n```\r\n\r\nRecompile the modified version while preserving the signature (using `-c`), which will allow you to replace the APK later on.\r\n\r\n```bash\r\njava -jar apktool_2.0.0b9.jar b SystemUI -c\r\n```\r\n\r\nFinally, push the modified `SystemUI.apk` to the device and install it.\r\n\r\n```bash\r\nadb push SystemUI/dist/SystemUI.apk /sdcard/SystemUI.apk\r\nadb shell su -c \"mount -o remount,rw /system\"\r\nadb shell su -c \"cp /system/priv-app/SystemUI.apk /system/priv-app/SystemUI.apk.BAK\"\r\nadb shell su -c \"cp /system/priv-app/SystemUI.odex /system/priv-app/SystemUI.odex.BAK\"\r\nadb shell su -c \"cp /sdcard/SystemUI.apk /system/priv-app/SystemUI.apk\"\r\nadb shell su -c \"rm /system/priv-app/SystemUI.odex\"\r\nadb shell su -c \"chmod 644 /system/priv-app/SystemUI.apk\"\r\nadb shell su -c \"mount -o remount,ro /system\"\r\nadb shell su -c \"reboot\"\r\n```\r\n\r\n[1] <https://code.google.com/p/android-apktool/>  \r\n[2] <http://forum.xda-developers.com/showthread.php?t=1760133>  \r\n[3] <http://forum.xda-developers.com/showthread.php?t=2021796>  \r\n','Hide the carrier label on your Moto G','','inherit','open','open','','37-revision-v1','','','2014-10-12 14:31:44','2014-10-12 12:31:44','',37,'http://blog.gingerik.nl/?p=41',0,'revision','',0),(42,1,'2014-10-12 14:32:45','2014-10-12 12:32:45','_Note that your device needs to be rooted in order for this to work!_\r\n\r\nFirstly, pull `SystemUI.apk` and the device-specific framework from your device.\r\n\r\n```bash\r\nadb shell cp /system/priv-app/SystemUI.apk /sdcard/\r\nadb shell cp /system/framework/framework-res.apk /sdcard/\r\nadb pull /sdcard/SystemUI.apk .\r\nadb pull /sdcard/framework-res.apk .\r\n```\r\n\r\nNext, download `apktool_2.0.0b8.jar` from [1], set the correct framework and decompile[2] `SystemUI.apk`.\r\n\r\n```bash\r\nwget http://connortumbleson.com/apktool/test_versions/apktool_2.0.0b9.jar\r\njava -jar apktool_2.0.0b9.jar if framework-res.apk\r\njava -jar apktool_2.0.0b9.jar d SystemUI.apk\r\n```\r\n\r\nNow modify the package[3]: search for `onsText` and update the `TextView`\'s appropriate attribute to `android:maxLength=\"0\"`.\r\n\r\n```bash\r\nsed -i \'/onsText/ s/maxLength=\"[0-9]\\+\"/maxLength=\"0\"/\' SystemUI/res/layout/status_bar.xml\r\n```\r\n\r\nRecompile the modified version while preserving the signature (using `-c`), which will allow you to replace the APK later on.\r\n\r\n```bash\r\njava -jar apktool_2.0.0b9.jar b SystemUI -c\r\n```\r\n\r\nFinally, push the modified `SystemUI.apk` to the device and install it.\r\n\r\n```bash\r\nadb push SystemUI/dist/SystemUI.apk /sdcard/SystemUI.apk\r\nadb shell su -c \"mount -o remount,rw /system\"\r\nadb shell su -c \"cp /system/priv-app/SystemUI.apk /system/priv-app/SystemUI.apk.BAK\"\r\nadb shell su -c \"cp /system/priv-app/SystemUI.odex /system/priv-app/SystemUI.odex.BAK\"\r\nadb shell su -c \"cp /sdcard/SystemUI.apk /system/priv-app/SystemUI.apk\"\r\nadb shell su -c \"rm /system/priv-app/SystemUI.odex\"\r\nadb shell su -c \"chmod 644 /system/priv-app/SystemUI.apk\"\r\nadb shell su -c \"mount -o remount,ro /system\"\r\nadb shell su -c \"reboot\"\r\n```\r\n\r\n[1] <https://code.google.com/p/android-apktool/>  \r\n[2] <http://forum.xda-developers.com/showthread.php?t=1760133>  \r\n[3] <http://forum.xda-developers.com/showthread.php?t=2021796>  \r\n','Hide the carrier label on your Moto G','','inherit','open','open','','37-revision-v1','','','2014-10-12 14:32:45','2014-10-12 12:32:45','',37,'http://blog.gingerik.nl/?p=42',0,'revision','',0),(43,1,'2014-10-12 14:33:47','2014-10-12 12:33:47','_Note that your device needs to be **rooted** in order for this to work!_\n\n## Preparation\n\nFirstly, pull `SystemUI.apk` and the device-specific framework from your device.\n\n```bash\nadb shell cp /system/priv-app/SystemUI.apk /sdcard/\nadb shell cp /system/framework/framework-res.apk /sdcard/\nadb pull /sdcard/SystemUI.apk .\nadb pull /sdcard/framework-res.apk .\n```\n\n## Decompiling\n\nNext, download `apktool_2.0.0b8.jar` from [1], set the correct framework and decompile[2] `SystemUI.apk`.\n\n```bash\nwget http://connortumbleson.com/apktool/test_versions/apktool_2.0.0b9.jar\njava -jar apktool_2.0.0b9.jar if framework-res.apk\njava -jar apktool_2.0.0b9.jar d SystemUI.apk\n```\n\n## Modification\n\nNow modify the package[3]: search for `onsText` and update the `TextView`\'s appropriate attribute to `android:maxLength=\"0\"`.\n\n```bash\nsed -i \'/onsText/ s/maxLength=\"[0-9]\\+\"/maxLength=\"0\"/\' SystemUI/res/layout/status_bar.xml\n```\n\nRecompile the modified version while preserving the signature (using `-c`), which will allow you to replace the APK later on.\n\n```bash\njava -jar apktool_2.0.0b9.jar b SystemUI -c\n```\n\nFinally, push the modified `SystemUI.apk` to the device and install it.\n\n```bash\nadb push SystemUI/dist/SystemUI.apk /sdcard/SystemUI.apk\nadb shell su -c \"mount -o remount,rw /system\"\nadb shell su -c \"cp /system/priv-app/SystemUI.apk /system/priv-app/SystemUI.apk.BAK\"\nadb shell su -c \"cp /system/priv-app/SystemUI.odex /system/priv-app/SystemUI.odex.BAK\"\nadb shell su -c \"cp /sdcard/SystemUI.apk /system/priv-app/SystemUI.apk\"\nadb shell su -c \"rm /system/priv-app/SystemUI.odex\"\nadb shell su -c \"chmod 644 /system/priv-app/SystemUI.apk\"\nadb shell su -c \"mount -o remount,ro /system\"\nadb shell su -c \"reboot\"\n```\n\n[1] <https://code.google.com/p/android-apktool/>  \n[2] <http://forum.xda-developers.com/showthread.php?t=1760133>  \n[3] <http://forum.xda-developers.com/showthread.php?t=2021796>  \n','Hide the carrier label on your Moto G','','inherit','open','open','','37-autosave-v1','','','2014-10-12 14:33:47','2014-10-12 12:33:47','',37,'http://blog.gingerik.nl/?p=43',0,'revision','',0),(44,1,'2014-10-12 14:34:05','2014-10-12 12:34:05','_Note that your device needs to be **rooted** in order for this to work!_\r\n\r\n## Preparation\r\n\r\nFirstly, pull `SystemUI.apk` and the device-specific framework from your device.\r\n\r\n```bash\r\nadb shell cp /system/priv-app/SystemUI.apk /sdcard/\r\nadb shell cp /system/framework/framework-res.apk /sdcard/\r\nadb pull /sdcard/SystemUI.apk .\r\nadb pull /sdcard/framework-res.apk .\r\n```\r\n\r\n## Decompiling\r\n\r\nNext, download `apktool_2.0.0b8.jar` from [1], set the correct framework and decompile[2] `SystemUI.apk`.\r\n\r\n```bash\r\nwget http://connortumbleson.com/apktool/test_versions/apktool_2.0.0b9.jar\r\njava -jar apktool_2.0.0b9.jar if framework-res.apk\r\njava -jar apktool_2.0.0b9.jar d SystemUI.apk\r\n```\r\n\r\n## Modification\r\n\r\nNow modify the package[3]: search for `onsText` and update the `TextView`\'s appropriate attribute to `android:maxLength=\"0\"`.\r\n\r\n```bash\r\nsed -i \'/onsText/ s/maxLength=\"[0-9]\\+\"/maxLength=\"0\"/\' SystemUI/res/layout/status_bar.xml\r\n```\r\n\r\n## Recompiling\r\n\r\nRecompile the modified version while preserving the signature (using `-c`), which will allow you to replace the APK later on.\r\n\r\n```bash\r\njava -jar apktool_2.0.0b9.jar b SystemUI -c\r\n```\r\n\r\n## Re-installation\r\n\r\nFinally, push the modified `SystemUI.apk` to the device and install it.\r\n\r\n```bash\r\nadb push SystemUI/dist/SystemUI.apk /sdcard/SystemUI.apk\r\nadb shell su -c \"mount -o remount,rw /system\"\r\nadb shell su -c \"cp /system/priv-app/SystemUI.apk /system/priv-app/SystemUI.apk.BAK\"\r\nadb shell su -c \"cp /system/priv-app/SystemUI.odex /system/priv-app/SystemUI.odex.BAK\"\r\nadb shell su -c \"cp /sdcard/SystemUI.apk /system/priv-app/SystemUI.apk\"\r\nadb shell su -c \"rm /system/priv-app/SystemUI.odex\"\r\nadb shell su -c \"chmod 644 /system/priv-app/SystemUI.apk\"\r\nadb shell su -c \"mount -o remount,ro /system\"\r\nadb shell su -c \"reboot\"\r\n```\r\n\r\n[1] <https://code.google.com/p/android-apktool/>  \r\n[2] <http://forum.xda-developers.com/showthread.php?t=1760133>  \r\n[3] <http://forum.xda-developers.com/showthread.php?t=2021796>  \r\n','Hide the carrier label on your Moto G','','inherit','open','open','','37-revision-v1','','','2014-10-12 14:34:05','2014-10-12 12:34:05','',37,'http://blog.gingerik.nl/?p=44',0,'revision','',0),(45,1,'2013-10-28 17:35:54','2013-10-28 16:35:54','This post (inspired by [2] and [3]) describes how to enable Yubikey [1] access to any server.\r\nThe setup aims at forcing a Yubikey when logging in over the Internet\r\nbut allows for direct access on your Local Area Network.\r\n\r\n## Installation\r\n\r\nFirstly, install the Yubico PAM library\r\n\r\n```bash\r\nsudo apt-get install libpam-yubico\r\n```\r\n\r\n## Configuration\r\n\r\nStore all Yubikey tokan ids that have access to the server\r\n\r\n```bash\r\necho \"<user>:<yubikey tokan id>[:<yubikey tokan id>]\" | sudo tee /etc/yubikey\r\n```\r\n\r\nMake sure only root can read the file\r\n\r\n```bash\r\nsudo chmod 600 /etc/yubikey\r\n```\r\n\r\nDisable Yubikey for local network access\r\n\r\n```bash\r\nsudo vim /etc/security/access-local.conf\r\n```\r\n\r\n``` .linenums\r\n# yubikey can be skipped on local network\r\n+ : ALL : 192.168.1.0/24\r\n+ : ALL : LOCAL\r\n- : ALL : ALL\r\n```\r\n\r\nConfigure PAM to use the Yubikey for SSH.\r\nThe API key and id can be generated on <https://upgrade.yubico.com/getapikey/>.\r\n\r\n    # vim /etc/pam.d/sshd\r\n\r\n>     # PAM configuration for the Secure Shell service\r\n>     auth [success=1 default=ignore] pam_access.so accessfile=/etc/security/access-local.conf\r\n>     auth required pam_yubico.so authfile=/etc/yubikey id=<yubikey-api-id> key=<yubikey-api-key>\r\n>     \r\n>     [...]\r\n\r\nConfigure the SSH daemon to use PAM\r\n\r\n    # vim /etc/ssh/sshd_config\r\n\r\n>     [...]\r\n>     \r\n>     # Change to yes to enable challenge-response passwords (beware issues with\r\n>     # some PAM modules and threads)\r\n>     ChallengeResponseAuthentication no\r\n> \r\n>     # Change to no to disable tunnelled clear text passwords\r\n>     PasswordAuthentication yes\r\n> \r\n>     # Set this to \'yes\' to enable PAM authentication, account processing,\r\n>     # and session processing. If this is enabled, PAM authentication will\r\n>     # be allowed through the ChallengeResponseAuthentication and\r\n>     # PasswordAuthentication.  Depending on your PAM configuration,\r\n>     # PAM authentication via ChallengeResponseAuthentication may bypass\r\n>     # the setting of \"PermitRootLogin without-password\".\r\n>     # If you just want the PAM account and session checks to run without\r\n>     # PAM authentication, then enable this but set PasswordAuthentication\r\n>     # and ChallengeResponseAuthentication to \'no\'.\r\n>     UsePAM yes\r\n\r\nConfigure PAM authorisation\r\n\r\n    # vim /etc/pam.d/common-auth\r\n\r\n>     # here are the per-package modules (the \"Primary\" block)\r\n>     auth    [success=1 default=ignore]      pam_unix.so nullok_secure try_first_pass\r\n>     # here\'s the fallback if no module succeeds\r\n>     auth    requisite                       pam_deny.so\r\n>     # prime the stack with a positive return value if there isn\'t one already;\r\n>     # this avoids us returning an error just because nothing sets a success code\r\n>     # since the modules above will each just jump around\r\n>     auth    required                        pam_permit.so\r\n>     # and here are more per-package modules (the \"Additional\" block)\r\n>     auth    optional                        pam_cap.so\r\n>     # end of pam-auth-update config\r\n\r\nRestart SSH to enable Yubikey access\r\n\r\n    # service ssh restart\r\n\r\n## References\r\n\r\n[1] <http://www.yubico.com/products/yubikey-hardware/yubikey/>\r\n[2] <https://www.berrange.com/posts/2011/12/18/multi-factor-ssh-authentication-using-yubikey-and-ssh-public-keys-together/>\r\n[3] <https://code.google.com/p/yubico-pam/wiki/YubikeyAndSSHViaPAM>','Yubikey','','publish','open','open','','45','','','2014-10-12 18:47:14','2014-10-12 16:47:14','',0,'http://blog.gingerik.nl/?p=45',0,'post','',0),(46,1,'2014-10-12 17:40:14','2014-10-12 15:40:14','\r\nThis post (inspired by [2] and [3]) describes how to enable Yubikey [1] access to any server.\r\nThe setup aims at forcing a Yubikey when logging in over the Internet\r\nbut allows for direct access on your Local Area Network.\r\n\r\n## Installation\r\n\r\nFirstly, install the Yubico PAM library\r\n\r\n    $ su\r\n    # apt-get install libpam-yubico\r\n\r\n## Configuration\r\n\r\nStore all Yubikey tokan ids that have access to the server\r\n\r\n    # vim /etc/yubikey\r\n\r\n>     <user>:<yubikey tokan id>[:<yubikey tokan id>]\r\n\r\nMake sure only root can read the file\r\n\r\n    # chmod 600 /etc/yubikey\r\n\r\nDisable Yubikey for local network access\r\n\r\n    # vim /etc/security/access-local.conf\r\n\r\n>     # yubikey can be skipped on local network\r\n>     + : ALL : 192.168.1.0/24\r\n>     + : ALL : LOCAL\r\n>     - : ALL : ALL\r\n\r\nConfigure PAM to use the Yubikey for SSH.\r\nThe API key and id can be generated on <https://upgrade.yubico.com/getapikey/>.\r\n\r\n    # vim /etc/pam.d/sshd\r\n\r\n>     # PAM configuration for the Secure Shell service\r\n>     auth [success=1 default=ignore] pam_access.so accessfile=/etc/security/access-local.conf\r\n>     auth required pam_yubico.so authfile=/etc/yubikey id=<yubikey-api-id> key=<yubikey-api-key>\r\n>     \r\n>     [...]\r\n\r\nConfigure the SSH daemon to use PAM\r\n\r\n    # vim /etc/ssh/sshd_config\r\n\r\n>     [...]\r\n>     \r\n>     # Change to yes to enable challenge-response passwords (beware issues with\r\n>     # some PAM modules and threads)\r\n>     ChallengeResponseAuthentication no\r\n> \r\n>     # Change to no to disable tunnelled clear text passwords\r\n>     PasswordAuthentication yes\r\n> \r\n>     # Set this to \'yes\' to enable PAM authentication, account processing,\r\n>     # and session processing. If this is enabled, PAM authentication will\r\n>     # be allowed through the ChallengeResponseAuthentication and\r\n>     # PasswordAuthentication.  Depending on your PAM configuration,\r\n>     # PAM authentication via ChallengeResponseAuthentication may bypass\r\n>     # the setting of \"PermitRootLogin without-password\".\r\n>     # If you just want the PAM account and session checks to run without\r\n>     # PAM authentication, then enable this but set PasswordAuthentication\r\n>     # and ChallengeResponseAuthentication to \'no\'.\r\n>     UsePAM yes\r\n\r\nConfigure PAM authorisation\r\n\r\n    # vim /etc/pam.d/common-auth\r\n\r\n>     # here are the per-package modules (the \"Primary\" block)\r\n>     auth    [success=1 default=ignore]      pam_unix.so nullok_secure try_first_pass\r\n>     # here\'s the fallback if no module succeeds\r\n>     auth    requisite                       pam_deny.so\r\n>     # prime the stack with a positive return value if there isn\'t one already;\r\n>     # this avoids us returning an error just because nothing sets a success code\r\n>     # since the modules above will each just jump around\r\n>     auth    required                        pam_permit.so\r\n>     # and here are more per-package modules (the \"Additional\" block)\r\n>     auth    optional                        pam_cap.so\r\n>     # end of pam-auth-update config\r\n\r\nRestart SSH to enable Yubikey access\r\n\r\n    # service ssh restart\r\n\r\n## References\r\n\r\n[1] <http://www.yubico.com/products/yubikey-hardware/yubikey/>\r\n[2] <https://www.berrange.com/posts/2011/12/18/multi-factor-ssh-authentication-using-yubikey-and-ssh-public-keys-together/>\r\n[3] <https://code.google.com/p/yubico-pam/wiki/YubikeyAndSSHViaPAM>\r\n','','','inherit','open','open','','45-revision-v1','','','2014-10-12 17:40:14','2014-10-12 15:40:14','',45,'http://blog.gingerik.nl/?p=46',0,'revision','',0),(47,1,'2014-10-12 18:36:22','2014-10-12 16:36:22','This post (inspired by [2] and [3]) describes how to enable Yubikey [1] access to any server.\r\nThe setup aims at forcing a Yubikey when logging in over the Internet\r\nbut allows for direct access on your Local Area Network.\r\n\r\n## Installation\r\n\r\nFirstly, install the Yubico PAM library\r\n\r\n```bash\r\nsudo apt-get install libpam-yubico\r\n```\r\n\r\n## Configuration\r\n\r\nStore all Yubikey tokan ids that have access to the server\r\n\r\n```bash\r\necho \"<user>:<yubikey tokan id>[:<yubikey tokan id>]\" | sudo tee /etc/yubikey\r\n```\r\n\r\nMake sure only root can read the file\r\n\r\n```bash\r\nsudo chmod 600 /etc/yubikey\r\n```\r\n\r\nDisable Yubikey for local network access\r\n\r\n```bash\r\nsudo vim /etc/security/access-local.conf\r\n```\r\n\r\n```.linenums\r\n# yubikey can be skipped on local network\r\n+ : ALL : 192.168.1.0/24\r\n+ : ALL : LOCAL\r\n- : ALL : ALL\r\n```\r\n\r\nConfigure PAM to use the Yubikey for SSH.\r\nThe API key and id can be generated on <https://upgrade.yubico.com/getapikey/>.\r\n\r\n    # vim /etc/pam.d/sshd\r\n\r\n>     # PAM configuration for the Secure Shell service\r\n>     auth [success=1 default=ignore] pam_access.so accessfile=/etc/security/access-local.conf\r\n>     auth required pam_yubico.so authfile=/etc/yubikey id=<yubikey-api-id> key=<yubikey-api-key>\r\n>     \r\n>     [...]\r\n\r\nConfigure the SSH daemon to use PAM\r\n\r\n    # vim /etc/ssh/sshd_config\r\n\r\n>     [...]\r\n>     \r\n>     # Change to yes to enable challenge-response passwords (beware issues with\r\n>     # some PAM modules and threads)\r\n>     ChallengeResponseAuthentication no\r\n> \r\n>     # Change to no to disable tunnelled clear text passwords\r\n>     PasswordAuthentication yes\r\n> \r\n>     # Set this to \'yes\' to enable PAM authentication, account processing,\r\n>     # and session processing. If this is enabled, PAM authentication will\r\n>     # be allowed through the ChallengeResponseAuthentication and\r\n>     # PasswordAuthentication.  Depending on your PAM configuration,\r\n>     # PAM authentication via ChallengeResponseAuthentication may bypass\r\n>     # the setting of \"PermitRootLogin without-password\".\r\n>     # If you just want the PAM account and session checks to run without\r\n>     # PAM authentication, then enable this but set PasswordAuthentication\r\n>     # and ChallengeResponseAuthentication to \'no\'.\r\n>     UsePAM yes\r\n\r\nConfigure PAM authorisation\r\n\r\n    # vim /etc/pam.d/common-auth\r\n\r\n>     # here are the per-package modules (the \"Primary\" block)\r\n>     auth    [success=1 default=ignore]      pam_unix.so nullok_secure try_first_pass\r\n>     # here\'s the fallback if no module succeeds\r\n>     auth    requisite                       pam_deny.so\r\n>     # prime the stack with a positive return value if there isn\'t one already;\r\n>     # this avoids us returning an error just because nothing sets a success code\r\n>     # since the modules above will each just jump around\r\n>     auth    required                        pam_permit.so\r\n>     # and here are more per-package modules (the \"Additional\" block)\r\n>     auth    optional                        pam_cap.so\r\n>     # end of pam-auth-update config\r\n\r\nRestart SSH to enable Yubikey access\r\n\r\n    # service ssh restart\r\n\r\n## References\r\n\r\n[1] <http://www.yubico.com/products/yubikey-hardware/yubikey/>\r\n[2] <https://www.berrange.com/posts/2011/12/18/multi-factor-ssh-authentication-using-yubikey-and-ssh-public-keys-together/>\r\n[3] <https://code.google.com/p/yubico-pam/wiki/YubikeyAndSSHViaPAM>','','','inherit','open','open','','45-autosave-v1','','','2014-10-12 18:36:22','2014-10-12 16:36:22','',45,'http://blog.gingerik.nl/?p=47',0,'revision','',0),(48,1,'2014-10-12 18:38:03','2014-10-12 16:38:03','This post (inspired by [2] and [3]) describes how to enable Yubikey [1] access to any server.\r\nThe setup aims at forcing a Yubikey when logging in over the Internet\r\nbut allows for direct access on your Local Area Network.\r\n\r\n## Installation\r\n\r\nFirstly, install the Yubico PAM library\r\n\r\n```bash\r\nsudo apt-get install libpam-yubico\r\n```\r\n\r\n## Configuration\r\n\r\nStore all Yubikey tokan ids that have access to the server\r\n\r\n```bash\r\necho \"<user>:<yubikey tokan id>[:<yubikey tokan id>]\" | sudo tee /etc/yubikey\r\n```\r\n\r\nMake sure only root can read the file\r\n\r\n```bash\r\nsudo chmod 600 /etc/yubikey\r\n```\r\n\r\nDisable Yubikey for local network access\r\n\r\n```bash\r\nsudo vim /etc/security/access-local.conf\r\n```\r\n\r\n```.linenums\r\n# yubikey can be skipped on local network\r\n+ : ALL : 192.168.1.0/24\r\n+ : ALL : LOCAL\r\n- : ALL : ALL\r\n```\r\n\r\nConfigure PAM to use the Yubikey for SSH.\r\nThe API key and id can be generated on <https://upgrade.yubico.com/getapikey/>.\r\n\r\n    # vim /etc/pam.d/sshd\r\n\r\n>     # PAM configuration for the Secure Shell service\r\n>     auth [success=1 default=ignore] pam_access.so accessfile=/etc/security/access-local.conf\r\n>     auth required pam_yubico.so authfile=/etc/yubikey id=<yubikey-api-id> key=<yubikey-api-key>\r\n>     \r\n>     [...]\r\n\r\nConfigure the SSH daemon to use PAM\r\n\r\n    # vim /etc/ssh/sshd_config\r\n\r\n>     [...]\r\n>     \r\n>     # Change to yes to enable challenge-response passwords (beware issues with\r\n>     # some PAM modules and threads)\r\n>     ChallengeResponseAuthentication no\r\n> \r\n>     # Change to no to disable tunnelled clear text passwords\r\n>     PasswordAuthentication yes\r\n> \r\n>     # Set this to \'yes\' to enable PAM authentication, account processing,\r\n>     # and session processing. If this is enabled, PAM authentication will\r\n>     # be allowed through the ChallengeResponseAuthentication and\r\n>     # PasswordAuthentication.  Depending on your PAM configuration,\r\n>     # PAM authentication via ChallengeResponseAuthentication may bypass\r\n>     # the setting of \"PermitRootLogin without-password\".\r\n>     # If you just want the PAM account and session checks to run without\r\n>     # PAM authentication, then enable this but set PasswordAuthentication\r\n>     # and ChallengeResponseAuthentication to \'no\'.\r\n>     UsePAM yes\r\n\r\nConfigure PAM authorisation\r\n\r\n    # vim /etc/pam.d/common-auth\r\n\r\n>     # here are the per-package modules (the \"Primary\" block)\r\n>     auth    [success=1 default=ignore]      pam_unix.so nullok_secure try_first_pass\r\n>     # here\'s the fallback if no module succeeds\r\n>     auth    requisite                       pam_deny.so\r\n>     # prime the stack with a positive return value if there isn\'t one already;\r\n>     # this avoids us returning an error just because nothing sets a success code\r\n>     # since the modules above will each just jump around\r\n>     auth    required                        pam_permit.so\r\n>     # and here are more per-package modules (the \"Additional\" block)\r\n>     auth    optional                        pam_cap.so\r\n>     # end of pam-auth-update config\r\n\r\nRestart SSH to enable Yubikey access\r\n\r\n    # service ssh restart\r\n\r\n## References\r\n\r\n[1] <http://www.yubico.com/products/yubikey-hardware/yubikey/>\r\n[2] <https://www.berrange.com/posts/2011/12/18/multi-factor-ssh-authentication-using-yubikey-and-ssh-public-keys-together/>\r\n[3] <https://code.google.com/p/yubico-pam/wiki/YubikeyAndSSHViaPAM>','','','inherit','open','open','','45-revision-v1','','','2014-10-12 18:38:03','2014-10-12 16:38:03','',45,'http://blog.gingerik.nl/?p=48',0,'revision','',0),(49,1,'2014-10-12 18:47:14','2014-10-12 16:47:14','This post (inspired by [2] and [3]) describes how to enable Yubikey [1] access to any server.\r\nThe setup aims at forcing a Yubikey when logging in over the Internet\r\nbut allows for direct access on your Local Area Network.\r\n\r\n## Installation\r\n\r\nFirstly, install the Yubico PAM library\r\n\r\n```bash\r\nsudo apt-get install libpam-yubico\r\n```\r\n\r\n## Configuration\r\n\r\nStore all Yubikey tokan ids that have access to the server\r\n\r\n```bash\r\necho \"<user>:<yubikey tokan id>[:<yubikey tokan id>]\" | sudo tee /etc/yubikey\r\n```\r\n\r\nMake sure only root can read the file\r\n\r\n```bash\r\nsudo chmod 600 /etc/yubikey\r\n```\r\n\r\nDisable Yubikey for local network access\r\n\r\n```bash\r\nsudo vim /etc/security/access-local.conf\r\n```\r\n\r\n``` .linenums\r\n# yubikey can be skipped on local network\r\n+ : ALL : 192.168.1.0/24\r\n+ : ALL : LOCAL\r\n- : ALL : ALL\r\n```\r\n\r\nConfigure PAM to use the Yubikey for SSH.\r\nThe API key and id can be generated on <https://upgrade.yubico.com/getapikey/>.\r\n\r\n    # vim /etc/pam.d/sshd\r\n\r\n>     # PAM configuration for the Secure Shell service\r\n>     auth [success=1 default=ignore] pam_access.so accessfile=/etc/security/access-local.conf\r\n>     auth required pam_yubico.so authfile=/etc/yubikey id=<yubikey-api-id> key=<yubikey-api-key>\r\n>     \r\n>     [...]\r\n\r\nConfigure the SSH daemon to use PAM\r\n\r\n    # vim /etc/ssh/sshd_config\r\n\r\n>     [...]\r\n>     \r\n>     # Change to yes to enable challenge-response passwords (beware issues with\r\n>     # some PAM modules and threads)\r\n>     ChallengeResponseAuthentication no\r\n> \r\n>     # Change to no to disable tunnelled clear text passwords\r\n>     PasswordAuthentication yes\r\n> \r\n>     # Set this to \'yes\' to enable PAM authentication, account processing,\r\n>     # and session processing. If this is enabled, PAM authentication will\r\n>     # be allowed through the ChallengeResponseAuthentication and\r\n>     # PasswordAuthentication.  Depending on your PAM configuration,\r\n>     # PAM authentication via ChallengeResponseAuthentication may bypass\r\n>     # the setting of \"PermitRootLogin without-password\".\r\n>     # If you just want the PAM account and session checks to run without\r\n>     # PAM authentication, then enable this but set PasswordAuthentication\r\n>     # and ChallengeResponseAuthentication to \'no\'.\r\n>     UsePAM yes\r\n\r\nConfigure PAM authorisation\r\n\r\n    # vim /etc/pam.d/common-auth\r\n\r\n>     # here are the per-package modules (the \"Primary\" block)\r\n>     auth    [success=1 default=ignore]      pam_unix.so nullok_secure try_first_pass\r\n>     # here\'s the fallback if no module succeeds\r\n>     auth    requisite                       pam_deny.so\r\n>     # prime the stack with a positive return value if there isn\'t one already;\r\n>     # this avoids us returning an error just because nothing sets a success code\r\n>     # since the modules above will each just jump around\r\n>     auth    required                        pam_permit.so\r\n>     # and here are more per-package modules (the \"Additional\" block)\r\n>     auth    optional                        pam_cap.so\r\n>     # end of pam-auth-update config\r\n\r\nRestart SSH to enable Yubikey access\r\n\r\n    # service ssh restart\r\n\r\n## References\r\n\r\n[1] <http://www.yubico.com/products/yubikey-hardware/yubikey/>\r\n[2] <https://www.berrange.com/posts/2011/12/18/multi-factor-ssh-authentication-using-yubikey-and-ssh-public-keys-together/>\r\n[3] <https://code.google.com/p/yubico-pam/wiki/YubikeyAndSSHViaPAM>','Yubikey','','inherit','open','open','','45-revision-v1','','','2014-10-12 18:47:14','2014-10-12 16:47:14','',45,'http://blog.gingerik.nl/?p=49',0,'revision','',0),(50,1,'2014-10-12 18:49:09','2014-10-12 16:49:09','## Installation\r\n\r\n_Make sure you download the latest plugings from [1] and [2]._\r\n\r\nInstall the plugins.\r\n\r\n```bash\r\ncd /tmp\r\n# install wp-gfm\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n# install wp-code-prettify\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\n* Visit <http://blog.gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://blog.gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`;\r\n* Visit <https://wordpress.org/plugins/wp-code-prettify> and:\r\n  - set `Always load the js/css files?` to `Yes`;\r\n  - add some custom CSS to change the line numbering and indent when adding `.linenums`:\r\n\r\n```\r\npre.linenums {\r\n    margin-left: 2em;\r\n}\r\nol {\r\n    counter-reset: item;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n}\r\nol > li {\r\n    display: block;\r\n    margin-bottom: .25em;\r\n    margin-left: 2em;\r\n}\r\nol > li:before {\r\n    display: inline-block;\r\n    content: counter(item, decimal-leading-zero) \" \";\r\n    counter-increment: item;\r\n    width: 2em;\r\n    margin-left: -2em;\r\n}\r\n```\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Install Markdown & Prettify on Wordpress','','inherit','open','open','','4-revision-v1','','','2014-10-12 18:49:09','2014-10-12 16:49:09','',4,'http://blog.gingerik.nl/?p=50',0,'revision','',0),(51,1,'2013-10-22 19:47:24','2013-10-22 17:47:24','This micro guide (inspired by [2]) describes how to run Sopcast on Debian using the command-line.\r\n\r\n> VLC 2.0.8, Sopcast 3.2.6  \r\n\r\n## Installation\r\n\r\nFirst install VLC which is used for playing the stream\r\n\r\n```bash\r\nsudo apt-get install vlc\r\n```\r\n\r\nDownload the required Sopcast files [1], unzip them and add Sopcast to the system\'s binaries\r\n\r\n```bash\r\nwget http://download.easetuner.com/download/sp-auth.tgz\r\ntar -xvf sp-auth.tgz\r\nsudo cp sp-auth/sp-sc-auth /usr/local/bin/\r\nrm sp-auth.tgz\r\n```\r\n\r\nTest whether Sopcast is working by running\r\n\r\n```bash\r\nsp-sc-auth\r\n```\r\n\r\n### Errors\r\n\r\nIf the following error occures\r\n\r\n```bash\r\nsp-sc-auth: error while loading shared libraries:\r\nlibstdc++.so.5: cannot open shared object file: No such file or directory\r\n```\r\n\r\nthis can be fixed by running\r\n\r\n```bash\r\nwget http://www.sopcast.com/download/libstdcpp5.tgz\r\ntar -xvf libstdcpp5.tgz\r\nsudo cp -a libstdcpp5/* /usr/lib/\r\nrm libstdcpp5.tgz\r\n```\r\n\r\n## Usage\r\n\r\nRun Sopcast\r\n\r\n```bash\r\nsp-sc-auth sop://broker.sopcast.com:3912/<channel> 3908 8908 > /dev/null\r\n```\r\n\r\nView the Sopcast stream with VLC\r\n\r\n```bash\r\nvlc http://localhost:8908/tv.asf > /dev/null\r\n```\r\n\r\n## References\r\n\r\n[1] <http://www.sopcast.org/download/linux.html>\r\n[2] <http://fedellandogz.wordpress.com/2012/11/26/howto-install-sopcast-in-ubuntu-debian/>\r\n\r\n','Sopcast','','publish','open','open','','sopcast','','','2014-10-14 22:29:19','2014-10-14 20:29:19','',0,'http://blog.gingerik.nl/?p=51',0,'post','',0),(52,1,'2014-10-12 19:47:23','2014-10-12 17:47:23','\r\nThis micro guide (inspired by [[2]][blog]) describes how to run Sopcast on Debian using the command-line.\r\n\r\n> **system** Debian Sid  \r\n> **versions** VLC 2.0.8, Sopcast 3.2.6  \r\n\r\n## Installation\r\n\r\nFirst install VLC which is used for playing the stream\r\n\r\n    $ sudo apt-get install vlc\r\n\r\nDownload the required Sopcast files [[1]][sopcast], unzip them and add Sopcast to the system\'s binaries\r\n\r\n    $ wget http://download.easetuner.com/download/sp-auth.tgz\r\n    $ tar -xvf sp-auth.tgz\r\n    $ sudo cp sp-auth/sp-sc-auth /usr/local/bin/\r\n    $ rm sp-auth.tgz\r\n\r\nTest whether Sopcast is working by running\r\n\r\n    $ sp-sc-auth\r\n\r\n### Errors\r\n\r\nIf the following error occures\r\n\r\n    sp-sc-auth: error while loading shared libraries:\r\n    libstdc++.so.5: cannot open shared object file: No such file or directory\r\n\r\nthis can be fixed by running\r\n\r\n    $ wget http://www.sopcast.com/download/libstdcpp5.tgz\r\n    $ tar -xvf libstdcpp5.tgz\r\n    $ sudo cp -a libstdcpp5/* /usr/lib/\r\n    $ rm libstdcpp5.tgz\r\n\r\n## Usage\r\n\r\nRun Sopcast\r\n\r\n    $ sp-sc-auth sop://broker.sopcast.com:3912/<channel> 3908 8908 > /dev/null\r\n\r\nView the Sopcast stream with VLC\r\n\r\n    $ vlc http://localhost:8908/tv.asf > /dev/null\r\n\r\n## References\r\n\r\n1. <http://www.sopcast.org/download/linux.html>\r\n2. <http://fedellandogz.wordpress.com/2012/11/26/howto-install-sopcast-in-ubuntu-debian/>\r\n\r\n[sopcast]: http://www.sopcast.org/download/linux.html \r\n[blog]: http://fedellandogz.wordpress.com/2012/11/26/howto-install-sopcast-in-ubuntu-debian/ \r\n','Sopcast','','inherit','open','open','','51-revision-v1','','','2014-10-12 19:47:23','2014-10-12 17:47:23','',51,'http://blog.gingerik.nl/?p=52',0,'revision','',0),(53,1,'2014-10-12 19:48:55','2014-10-12 17:48:55','This micro guide (inspired by [[2]][blog]) describes how to run Sopcast on Debian using the command-line.\r\n\r\n\r\n> VLC 2.0.8, Sopcast 3.2.6  \r\n\r\n## Installation\r\n\r\nFirst install VLC which is used for playing the stream\r\n\r\n    $ sudo apt-get install vlc\r\n\r\nDownload the required Sopcast files [[1]][sopcast], unzip them and add Sopcast to the system\'s binaries\r\n\r\n    $ wget http://download.easetuner.com/download/sp-auth.tgz\r\n    $ tar -xvf sp-auth.tgz\r\n    $ sudo cp sp-auth/sp-sc-auth /usr/local/bin/\r\n    $ rm sp-auth.tgz\r\n\r\nTest whether Sopcast is working by running\r\n\r\n    $ sp-sc-auth\r\n\r\n### Errors\r\n\r\nIf the following error occures\r\n\r\n    sp-sc-auth: error while loading shared libraries:\r\n    libstdc++.so.5: cannot open shared object file: No such file or directory\r\n\r\nthis can be fixed by running\r\n\r\n    $ wget http://www.sopcast.com/download/libstdcpp5.tgz\r\n    $ tar -xvf libstdcpp5.tgz\r\n    $ sudo cp -a libstdcpp5/* /usr/lib/\r\n    $ rm libstdcpp5.tgz\r\n\r\n## Usage\r\n\r\nRun Sopcast\r\n\r\n    $ sp-sc-auth sop://broker.sopcast.com:3912/<channel> 3908 8908 > /dev/null\r\n\r\nView the Sopcast stream with VLC\r\n\r\n    $ vlc http://localhost:8908/tv.asf > /dev/null\r\n\r\n## References\r\n\r\n1. <http://www.sopcast.org/download/linux.html>\r\n2. <http://fedellandogz.wordpress.com/2012/11/26/howto-install-sopcast-in-ubuntu-debian/>\r\n\r\n[sopcast]: http://www.sopcast.org/download/linux.html \r\n[blog]: http://fedellandogz.wordpress.com/2012/11/26/howto-install-sopcast-in-ubuntu-debian/ \r\n','Sopcast','','inherit','open','open','','51-revision-v1','','','2014-10-12 19:48:55','2014-10-12 17:48:55','',51,'http://blog.gingerik.nl/?p=53',0,'revision','',0),(54,1,'2014-10-12 21:42:38','0000-00-00 00:00:00','## Installation\r\n\r\n```bash\r\ncd /tmp/\r\nwget https://downloads.wordpress.org/plugin/revisr.zip\r\nsudo unzip revisr.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\nTo prevent anyone from reading your MySQL dumps directly, add the following lines to `/etc/apache2/sites-enabled/blog.gingerik.nl`:\r\n\r\n``` .linenums\r\n<FilesMatch \"\\.sql\">\r\n    Order allow,deny\r\n    Deny from all\r\n    Satisfy All\r\n</FilesMatch>\r\n```\r\n\r\nNow reload apache. \r\n\r\n```bash\r\nsudo service apache2 reload\r\n```\r\n\r\nActivate the plugin and goto `Revisr > Settings`. \r\n\r\n* Under _General_:\r\n  * Choose a _username_, e.g. `WordPress`;\r\n  * Fill out your _email_;\r\n  * TODO gitignore\r\n  * Set _automatic backup schedule_ to `daily`.\r\n* Under _Remote Repository_:\r\n  * Set _remote url_ to your Github repository, e.g. <>\r\n\r\n[1] <https://wordpress.org/plugins/revisr/>\r\n[2] <http://revisr.io/documentation/>','Managing WordPress with Git','','draft','open','open','','','','','2014-10-12 21:42:38','2014-10-12 19:42:38','',0,'http://blog.gingerik.nl/?p=54',0,'post','',0),(55,1,'2014-10-12 21:11:28','2014-10-12 19:11:28','## Installation\r\n\r\n```bash\r\ncd /tmp/\r\nwget https://downloads.wordpress.org/plugin/revisr.zip\r\nsudo unzip revisr.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\nTo prevent anyone from reading your MySQL dumps directly, add the following lines to `/etc/apache2/sites-enabled/blog.gingerik.nl`:\r\n\r\n``` .linenums\r\n<FilesMatch \"\\.sql\">\r\n    Order allow,deny\r\n    Deny from all\r\n    Satisfy All\r\n</FilesMatch>\r\n```\r\n\r\n[1] <https://wordpress.org/plugins/revisr/>','Managing WordPress with Git','','inherit','open','open','','54-revision-v1','','','2014-10-12 21:11:28','2014-10-12 19:11:28','',54,'http://blog.gingerik.nl/?p=55',0,'revision','',0),(56,1,'2014-10-12 21:13:42','2014-10-12 19:13:42','## Installation\r\n\r\n```bash\r\ncd /tmp/\r\nwget https://downloads.wordpress.org/plugin/revisr.zip\r\nsudo unzip revisr.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\nTo prevent anyone from reading your MySQL dumps directly, add the following lines to `/etc/apache2/sites-enabled/blog.gingerik.nl`:\r\n\r\n``` .linenums\r\n<FilesMatch \"\\.sql\">\r\n    Order allow,deny\r\n    Deny from all\r\n    Satisfy All\r\n</FilesMatch>\r\n```\r\n\r\nNow reload apache. \r\n\r\n```bash\r\nsudo service apache2 reload\r\n```\r\n\r\n[1] <https://wordpress.org/plugins/revisr/>','Managing WordPress with Git','','inherit','open','open','','54-revision-v1','','','2014-10-12 21:13:42','2014-10-12 19:13:42','',54,'http://blog.gingerik.nl/?p=56',0,'revision','',0),(59,1,'2014-10-12 21:28:19','2014-10-12 19:28:19','## Installation\r\n\r\n```bash\r\ncd /tmp/\r\nwget https://downloads.wordpress.org/plugin/revisr.zip\r\nsudo unzip revisr.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\nTo prevent anyone from reading your MySQL dumps directly, add the following lines to `/etc/apache2/sites-enabled/blog.gingerik.nl`:\r\n\r\n``` .linenums\r\n<FilesMatch \"\\.sql\">\r\n    Order allow,deny\r\n    Deny from all\r\n    Satisfy All\r\n</FilesMatch>\r\n```\r\n\r\nNow reload apache. \r\n\r\n```bash\r\nsudo service apache2 reload\r\n```\r\n\r\nActivate the plugin and goto `Revisr > Settings`. \r\n\r\n* Under _General_:\r\n  * Fill out a _username_, e.g. `WordPress`;\r\n  * Fill out your _email address_;\r\n  * Set _automatic backup schedule_ to `daily`. \r\n\r\n[1] <https://wordpress.org/plugins/revisr/>','Managing WordPress with Git','','inherit','open','open','','54-revision-v1','','','2014-10-12 21:28:19','2014-10-12 19:28:19','',54,'http://blog.gingerik.nl/?p=59',0,'revision','',0),(60,1,'2014-10-12 21:31:17','2014-10-12 19:31:17','## Installation\r\n\r\n```bash\r\ncd /tmp/\r\nwget https://downloads.wordpress.org/plugin/revisr.zip\r\nsudo unzip revisr.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\nTo prevent anyone from reading your MySQL dumps directly, add the following lines to `/etc/apache2/sites-enabled/blog.gingerik.nl`:\r\n\r\n``` .linenums\r\n<FilesMatch \"\\.sql\">\r\n    Order allow,deny\r\n    Deny from all\r\n    Satisfy All\r\n</FilesMatch>\r\n```\r\n\r\nNow reload apache. \r\n\r\n```bash\r\nsudo service apache2 reload\r\n```\r\n\r\nActivate the plugin and goto `Revisr > Settings`. \r\n\r\n* Under _General_:\r\n  * Choose a _username_, e.g. `WordPress`;\r\n  * Fill out your _email_;\r\n  * Set _automatic backup schedule_ to `daily`.\r\n* Under _Remote Repository_:\r\n  * Set _remote url_ to your Github repository, e.g. \r\n\r\n[1] <https://wordpress.org/plugins/revisr/>','Managing WordPress with Git','','inherit','open','open','','54-revision-v1','','','2014-10-12 21:31:17','2014-10-12 19:31:17','',54,'http://blog.gingerik.nl/?p=60',0,'revision','',0),(61,1,'2014-10-12 21:42:38','2014-10-12 19:42:38','## Installation\r\n\r\n```bash\r\ncd /tmp/\r\nwget https://downloads.wordpress.org/plugin/revisr.zip\r\nsudo unzip revisr.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\nTo prevent anyone from reading your MySQL dumps directly, add the following lines to `/etc/apache2/sites-enabled/blog.gingerik.nl`:\r\n\r\n``` .linenums\r\n<FilesMatch \"\\.sql\">\r\n    Order allow,deny\r\n    Deny from all\r\n    Satisfy All\r\n</FilesMatch>\r\n```\r\n\r\nNow reload apache. \r\n\r\n```bash\r\nsudo service apache2 reload\r\n```\r\n\r\nActivate the plugin and goto `Revisr > Settings`. \r\n\r\n* Under _General_:\r\n  * Choose a _username_, e.g. `WordPress`;\r\n  * Fill out your _email_;\r\n  * TODO gitignore\r\n  * Set _automatic backup schedule_ to `daily`.\r\n* Under _Remote Repository_:\r\n  * Set _remote url_ to your Github repository, e.g. <>\r\n\r\n[1] <https://wordpress.org/plugins/revisr/>\r\n[2] <http://revisr.io/documentation/>','Managing WordPress with Git','','inherit','open','open','','54-revision-v1','','','2014-10-12 21:42:38','2014-10-12 19:42:38','',54,'http://blog.gingerik.nl/?p=61',0,'revision','',0),(63,1,'2014-10-14 11:59:28','2014-10-14 09:59:28','_Install and configure using the alternate Debian method[1]._\r\n\r\n## Installation\r\n\r\nInstall WordPress, Apache & MySQL.\r\n\r\n```bash\r\nsudo apt-get install wordpress apache2 mysql-server\r\n```\r\n\r\n## Configuration\r\n\r\nSet-up MySQL.\r\n\r\n```bash\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\n```\r\n\r\nConfigure & reload Apache. First edit `/etc/apache2/sites-available/blog.gingerik.nl` and add the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\nThen enable the site & some modules.\r\n\r\n```bash\r\ncd /etc/apache2/sites-enabled/\r\nsudo ln -s ../sites-available/blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\nNow visit <http://blog.gingerik.nl> to start blogging!\r\n\r\n## Extra\r\n\r\n### Install theme\r\n\r\n```bash\r\ncd /tmp\r\nwget https://downloads.wordpress.org/theme/sparkling.1.6.0.zip\r\nsudo unzip sparkling.1.6.0.zip -d /var/lib/wordpress/wp-content/themes/\r\n```\r\n\r\nAnd activate your theme!\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-14 11:59:28','2014-10-14 09:59:28','',22,'http://blog.gingerik.nl/?p=63',0,'revision','',0),(64,1,'2014-10-14 22:27:00','2014-10-14 20:27:00','This micro guide (inspired by [[2]][blog]) describes how to run Sopcast on Debian using the command-line.\n\n> VLC 2.0.8, Sopcast 3.2.6  \n\n## Installation\n\nFirst install VLC which is used for playing the stream\n\n```bash\nsudo apt-get install vlc\n```\n\nDownload the required Sopcast files [1], unzip them and add Sopcast to the system\'s binaries\n\n```bash\nwget http://download.easetuner.com/download/sp-auth.tgz\ntar -xvf sp-auth.tgz\nsudo cp sp-auth/sp-sc-auth /usr/local/bin/\nrm sp-auth.tgz\n```\n\nTest whether Sopcast is working by running\n\n```bash\nsp-sc-auth\n```\n\n### Errors\n\nIf the following error occures\n\n```bash\nsp-sc-auth: error while loading shared libraries:\nlibstdc++.so.5: cannot open shared object file: No such file or directory\n```\n\nthis can be fixed by running\n\n```bash\nwget http://www.sopcast.com/download/libstdcpp5.tgz\ntar -xvf libstdcpp5.tgz\nsudo cp -a libstdcpp5/* /usr/lib/\nrm libstdcpp5.tgz\n```\n\n## Usage\n\nRun Sopcast\n\n```bash\nsp-sc-auth sop://broker.sopcast.com:3912/<channel> 3908 8908 > /dev/null\n```\n\nView the Sopcast stream with VLC\n\n```bash\nvlc http://localhost:8908/tv.asf > /dev/null\n```\n\n## References\n\n1. <http://www.sopcast.org/download/linux.html>\n2. <http://fedellandogz.wordpress.com/2012/11/26/howto-install-sopcast-in-ubuntu-debian/>\n\n','Sopcast','','inherit','open','open','','51-autosave-v1','','','2014-10-14 22:27:00','2014-10-14 20:27:00','',51,'http://blog.gingerik.nl/?p=64',0,'revision','',0),(65,1,'2014-10-14 22:27:22','2014-10-14 20:27:22','This micro guide (inspired by [2]) describes how to run Sopcast on Debian using the command-line.\r\n\r\n> VLC 2.0.8, Sopcast 3.2.6  \r\n\r\n## Installation\r\n\r\nFirst install VLC which is used for playing the stream\r\n\r\n```bash\r\nsudo apt-get install vlc\r\n```\r\n\r\nDownload the required Sopcast files [1], unzip them and add Sopcast to the system\'s binaries\r\n\r\n```bash\r\nwget http://download.easetuner.com/download/sp-auth.tgz\r\ntar -xvf sp-auth.tgz\r\nsudo cp sp-auth/sp-sc-auth /usr/local/bin/\r\nrm sp-auth.tgz\r\n```\r\n\r\nTest whether Sopcast is working by running\r\n\r\n```bash\r\nsp-sc-auth\r\n```\r\n\r\n### Errors\r\n\r\nIf the following error occures\r\n\r\n```bash\r\nsp-sc-auth: error while loading shared libraries:\r\nlibstdc++.so.5: cannot open shared object file: No such file or directory\r\n```\r\n\r\nthis can be fixed by running\r\n\r\n```bash\r\nwget http://www.sopcast.com/download/libstdcpp5.tgz\r\ntar -xvf libstdcpp5.tgz\r\nsudo cp -a libstdcpp5/* /usr/lib/\r\nrm libstdcpp5.tgz\r\n```\r\n\r\n## Usage\r\n\r\nRun Sopcast\r\n\r\n```bash\r\nsp-sc-auth sop://broker.sopcast.com:3912/<channel> 3908 8908 > /dev/null\r\n```\r\n\r\nView the Sopcast stream with VLC\r\n\r\n```bash\r\nvlc http://localhost:8908/tv.asf > /dev/null\r\n```\r\n\r\n## References\r\n\r\n1. <http://www.sopcast.org/download/linux.html>\r\n2. <http://fedellandogz.wordpress.com/2012/11/26/howto-install-sopcast-in-ubuntu-debian/>\r\n\r\n','Sopcast','','inherit','open','open','','51-revision-v1','','','2014-10-14 22:27:22','2014-10-14 20:27:22','',51,'http://blog.gingerik.nl/?p=65',0,'revision','',0),(66,1,'2014-10-14 22:29:19','2014-10-14 20:29:19','This micro guide (inspired by [2]) describes how to run Sopcast on Debian using the command-line.\r\n\r\n> VLC 2.0.8, Sopcast 3.2.6  \r\n\r\n## Installation\r\n\r\nFirst install VLC which is used for playing the stream\r\n\r\n```bash\r\nsudo apt-get install vlc\r\n```\r\n\r\nDownload the required Sopcast files [1], unzip them and add Sopcast to the system\'s binaries\r\n\r\n```bash\r\nwget http://download.easetuner.com/download/sp-auth.tgz\r\ntar -xvf sp-auth.tgz\r\nsudo cp sp-auth/sp-sc-auth /usr/local/bin/\r\nrm sp-auth.tgz\r\n```\r\n\r\nTest whether Sopcast is working by running\r\n\r\n```bash\r\nsp-sc-auth\r\n```\r\n\r\n### Errors\r\n\r\nIf the following error occures\r\n\r\n```bash\r\nsp-sc-auth: error while loading shared libraries:\r\nlibstdc++.so.5: cannot open shared object file: No such file or directory\r\n```\r\n\r\nthis can be fixed by running\r\n\r\n```bash\r\nwget http://www.sopcast.com/download/libstdcpp5.tgz\r\ntar -xvf libstdcpp5.tgz\r\nsudo cp -a libstdcpp5/* /usr/lib/\r\nrm libstdcpp5.tgz\r\n```\r\n\r\n## Usage\r\n\r\nRun Sopcast\r\n\r\n```bash\r\nsp-sc-auth sop://broker.sopcast.com:3912/<channel> 3908 8908 > /dev/null\r\n```\r\n\r\nView the Sopcast stream with VLC\r\n\r\n```bash\r\nvlc http://localhost:8908/tv.asf > /dev/null\r\n```\r\n\r\n## References\r\n\r\n[1] <http://www.sopcast.org/download/linux.html>\r\n[2] <http://fedellandogz.wordpress.com/2012/11/26/howto-install-sopcast-in-ubuntu-debian/>\r\n\r\n','Sopcast','','inherit','open','open','','51-revision-v1','','','2014-10-14 22:29:19','2014-10-14 20:29:19','',51,'http://blog.gingerik.nl/?p=66',0,'revision','',0),(67,1,'2014-10-15 08:59:22','2014-10-15 06:59:22','## Installation\r\n\r\n_Make sure you download the latest plugings from [1] and [2]._\r\n\r\nInstall the plugins.\r\n\r\n```bash\r\ncd /tmp\r\n# install wp-gfm\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n# install wp-code-prettify\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\n* Visit <http://blog.gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://blog.gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`;\r\n* Visit <http://blog.gingerik.nl/wp-admin/options-general.php?page=wp-code-prettify> and:\r\n  - set _Always load the js/css files?_ to `Yes`;\r\n  - add some custom CSS to change the line numbering and indent when adding `.linenums`:\r\n\r\n```\r\npre.linenums {\r\n    margin-left: 2em;\r\n}\r\nol {\r\n    counter-reset: item;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n}\r\nol > li {\r\n    display: block;\r\n    margin-bottom: .25em;\r\n    margin-left: 2em;\r\n}\r\nol > li:before {\r\n    display: inline-block;\r\n    content: counter(item, decimal-leading-zero) \" \";\r\n    counter-increment: item;\r\n    width: 2em;\r\n    margin-left: -2em;\r\n}\r\n```\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Install Markdown & Prettify on Wordpress','','inherit','open','open','','4-revision-v1','','','2014-10-15 08:59:22','2014-10-15 06:59:22','',4,'http://blog.gingerik.nl/?p=67',0,'revision','',0),(68,1,'2014-10-15 08:59:52','2014-10-15 06:59:52','_Install and configure using the alternate Debian method[1]._\r\n\r\n## Installation\r\n\r\nInstall WordPress, Apache & MySQL.\r\n\r\n```bash\r\nsudo apt-get install wordpress apache2 mysql-server\r\n```\r\n\r\n## Configuration\r\n\r\nSet-up MySQL.\r\n\r\n```bash\r\ncd /usr/share/doc/wordpress/examples/\r\nsudo gunzip setup-mysql.gzip\r\nsudo bash setup-mysql -n wordpress blog.gingerik.nl\r\n```\r\n\r\nConfigure & reload Apache. First edit `/etc/apache2/sites-available/blog.gingerik.nl` and add the following contents:\r\n\r\n```.linenumbers\r\nNameVirtualHost *:80\r\n\r\n<VirtualHost *:80>\r\n    UseCanonicalName Off\r\n    VirtualDocumentRoot /usr/share/wordpress\r\n    Options All\r\n\r\n    # wp-content in /srv/www/wp-content/$0\r\n    RewriteEngine On\r\n    RewriteRule ^/wp-content/(.*)$ /srv/www/wp-content/%{HTTP_HOST}/$1\r\n</VirtualHost>\r\n```\r\n\r\nThen enable the site & some modules.\r\n\r\n```bash\r\nsudo a2dissite default\r\nsudo a2ensite blog.gingerik.nl\r\nsudo a2enmod rewrite\r\nsudo a2enmod vhost_alias\r\nsudo service apache2 restart\r\n```\r\n\r\nNow visit <http://blog.gingerik.nl> to start blogging!\r\n\r\n## Extra\r\n\r\n### Install theme\r\n\r\n```bash\r\ncd /tmp\r\nwget https://downloads.wordpress.org/theme/sparkling.1.6.0.zip\r\nsudo unzip sparkling.1.6.0.zip -d /var/lib/wordpress/wp-content/themes/\r\n```\r\n\r\nAnd activate your theme!\r\n\r\n[1] <https://wiki.debian.org/WordPress>','WordPress installation ','','inherit','open','open','','22-revision-v1','','','2014-10-15 08:59:52','2014-10-15 06:59:52','',22,'http://blog.gingerik.nl/?p=68',0,'revision','',0),(69,1,'2014-10-15 09:41:34','2014-10-15 07:41:34','## Installation\r\n\r\n_Make sure you download the latest plugings from [1] and [2]._\r\n\r\nInstall the plugins.\r\n\r\n```bash\r\ncd /tmp\r\n# install wp-gfm\r\nwget https://github.com/makotokw/wp-gfm/archive/v0.7.2.tar.gz -O wp-gfm-0.7.2.tar.gz\r\nsudo tar -xvf wp-gfm-0.7.2.tar.gz -C /var/lib/wordpress/wp-content/plugins\r\n# install wp-code-prettify\r\nwget https://downloads.wordpress.org/plugin/wp-code-prettify.zip\r\nsudo unzip wp-code-prettify.zip -d /var/lib/wordpress/wp-content/plugins\r\n```\r\n\r\n## Configuration\r\n\r\n* Visit <http://blog.gingerik.nl/wp-admin/plugins.php> and activate the plugins;\r\n* Visit <http://blog.gingerik.nl/wp-admin/options-general.php?page=wp-gfm> and check `All contents are markdown!`;\r\n* Visit <http://blog.gingerik.nl/wp-admin/options-general.php?page=wp-code-prettify> and:\r\n  - set _Always load the js/css files?_ to `Yes`;\r\n  - add some custom CSS to change the line numbering and indent when adding `.linenums`:\r\n\r\n```css file\r\n/* style file contents */\r\npre.prettyprint.file {\r\n    margin-left: 2em;\r\n    margin-right: 2em;\r\n}\r\n\r\n/* style line numbers */\r\nol {\r\n    counter-reset: item;\r\n    margin-left: 0;\r\n    padding-left: 0;\r\n}\r\nol > li {\r\n    display: block;\r\n    margin-bottom: .25em;\r\n    margin-left: 2em;\r\n}\r\nol > li:before {\r\n    display: inline-block;\r\n    content: counter(item, decimal-leading-zero) \" \";\r\n    counter-increment: item;\r\n    width: 2em;\r\n    margin-left: -2em;\r\n}\r\n```\r\n\r\n[1] <https://github.com/makotokw/wp-gfm>\r\n[2] <https://wordpress.org/plugins/wp-code-prettify>\r\n','Install Markdown & Prettify on Wordpress','','inherit','open','open','','4-revision-v1','','','2014-10-15 09:41:34','2014-10-15 07:41:34','',4,'http://blog.gingerik.nl/?p=69',0,'revision','',0),(70,1,'2014-10-16 22:02:12','0000-00-00 00:00:00','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**, e.g. on a VPS.\r\nTime to install[3].\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install -y wget curl gcc libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz | tar xz\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler\r\n\r\n# create a gitlab ci runner user\r\nsudo adduser --disabled-login --gecos \'GitLab CI Runner\' gitlab_ci_runner\r\n```\r\n\r\n#### GitLab CI Runner\r\n\r\nThe registration token can be found at: <http://the-gitlab-ci-domain/admin/runners>, accessible through _Header_ > _Runners_.\r\n\r\n```bash\r\n# get the gitlab ci runner source\r\ncd /home/gitlab_ci_runner/\r\nsudo -u gitlab_ci_runner -H git clone https://gitlab.com/gitlab-org/gitlab-ci-runner.git\r\ncd gitlab-ci-runner\r\n\r\n# install gems\r\nsudo -u gitlab_ci_runner -H bundle install --deployment\r\n\r\n# set-up the bundle interactively\r\nsudo -u gitlab_ci_runner -H bundle exec ./bin/setup\r\n```\r\n\r\n#### Post-installation\r\n\r\nWe need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want the GitLab CI Runner to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp lib/support/init.d/gitlab_ci_runner /etc/init.d/gitlab-ci-runner\r\nsudo chmod +x /etc/init.d/gitlab-ci-runner\r\nsudo update-rc.d gitlab-ci-runner defaults 21 # start on boot\r\nsudo service gitlab-ci-runner start\r\n```\r\n\r\n### Easily add Runners\r\n\r\nCreating a snapshot enables you to quickly add runners. Have the registration token at hand and:\r\n\r\n* instantiate a new VPS with the snapshot `gitlab-ci-runner-2gb-2gbswap`\r\n* `bundle exec ./bin/setup`\r\n* `sudo service gitlab-ci-runner start`\r\n\r\nNow the runner will start to pick up builds automatically. When you are done with it, you can destroy the VPS without worrying about anything.\r\n\r\n## References\r\n\r\n[1] <https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/>\r\n[2] <https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md>\r\n[3] <https://gitlab.com/gitlab-org/gitlab-ci-runner/blob/master/README.md>','GitLab Continuous Integration','','draft','open','open','','','','','2014-10-16 22:02:12','2014-10-16 20:02:12','',0,'http://blog.gingerik.nl/?p=70',0,'post','',0),(71,1,'2014-10-16 20:28:20','2014-10-16 18:28:20','**If you are running tests on the CI server you are doing it wrong!**\r\n\r\n[1] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','Gitlab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:28:20','2014-10-16 18:28:20','',70,'http://blog.gingerik.nl/?p=71',0,'revision','',0),(72,1,'2014-10-16 20:28:59','2014-10-16 18:28:59','> If you are running tests on the CI server you are doing it wrong!\r\n\r\n[1] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','Gitlab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:28:59','2014-10-16 18:28:59','',70,'http://blog.gingerik.nl/?p=72',0,'revision','',0),(73,1,'2014-10-16 20:29:24','2014-10-16 18:29:24','> If you are running tests on the CI server you are doing it wrong!\r\n\r\n## Installation\r\n\r\n\r\n\r\n[1] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:29:24','2014-10-16 18:29:24','',70,'http://blog.gingerik.nl/?p=73',0,'revision','',0),(74,1,'2014-10-16 20:30:00','2014-10-16 18:30:00','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n## Installation\r\n\r\n\r\n\r\n[1] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:30:00','2014-10-16 18:30:00','',70,'http://blog.gingerik.nl/?p=74',0,'revision','',0),(75,1,'2014-10-16 20:31:03','2014-10-16 18:31:03','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n## Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n```\r\n\r\n\r\n[1] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:31:03','2014-10-16 18:31:03','',70,'http://blog.gingerik.nl/?p=75',0,'revision','',0),(76,1,'2014-10-16 20:33:23','2014-10-16 18:33:23','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\nAnybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server.\r\n\r\nTo solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code.[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:33:23','2014-10-16 18:33:23','',70,'http://blog.gingerik.nl/?p=76',0,'revision','',0),(77,1,'2014-10-16 20:34:08','2014-10-16 18:34:08','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server.\r\n\r\nTo solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:34:08','2014-10-16 18:34:08','',70,'http://blog.gingerik.nl/?p=77',0,'revision','',0),(78,1,'2014-10-16 20:34:24','2014-10-16 18:34:24','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:34:24','2014-10-16 18:34:24','',70,'http://blog.gingerik.nl/?p=78',0,'revision','',0),(79,1,'2014-10-16 20:36:27','2014-10-16 18:36:27','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# install ruby, if not installed yet\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:36:27','2014-10-16 18:36:27','',70,'http://blog.gingerik.nl/?p=79',0,'revision','',0),(80,1,'2014-10-16 20:38:28','2014-10-16 18:38:28','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# install ruby, if not installed yet\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:38:28','2014-10-16 18:38:28','',70,'http://blog.gingerik.nl/?p=80',0,'revision','',0),(81,1,'2014-10-16 20:46:48','2014-10-16 18:46:48','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\n# to check if it worked: sudo -u gitlab_ci -H psql -d gitlab_ci_production\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:46:48','2014-10-16 18:46:48','',70,'http://blog.gingerik.nl/?p=81',0,'revision','',0),(82,1,'2014-10-16 20:48:47','2014-10-16 18:48:47','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\n# to check if it worked: sudo -u gitlab_ci -H psql -d gitlab_ci_production\r\n\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:48:47','2014-10-16 18:48:47','',70,'http://blog.gingerik.nl/?p=82',0,'revision','',0),(83,1,'2014-10-16 20:53:35','2014-10-16 18:53:35','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\n#  we do not specify a password because we are using peer authentication\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:53:35','2014-10-16 18:53:35','',70,'http://blog.gingerik.nl/?p=83',0,'revision','',0),(84,1,'2014-10-16 20:54:24','2014-10-16 18:54:24','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 20:54:24','2014-10-16 18:54:24','',70,'http://blog.gingerik.nl/?p=84',0,'revision','',0),(85,1,'2014-10-16 21:07:43','2014-10-16 19:07:43','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:07:43','2014-10-16 19:07:43','',70,'http://blog.gingerik.nl/?p=85',0,'revision','',0),(86,1,'2014-10-16 21:10:07','2014-10-16 19:10:07','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:10:07','2014-10-16 19:10:07','',70,'http://blog.gingerik.nl/?p=86',0,'revision','',0),(87,1,'2014-10-16 21:12:32','2014-10-16 19:12:32','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:12:32','2014-10-16 19:12:32','',70,'http://blog.gingerik.nl/?p=87',0,'revision','',0),(88,1,'2014-10-16 21:16:39','2014-10-16 19:16:39','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\n```bash\r\n# install init.d script\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:16:39','2014-10-16 19:16:39','',70,'http://blog.gingerik.nl/?p=88',0,'revision','',0),(89,1,'2014-10-16 21:21:04','2014-10-16 19:21:04','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\n##### Init.d script\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:21:04','2014-10-16 19:21:04','',70,'http://blog.gingerik.nl/?p=89',0,'revision','',0),(90,1,'2014-10-16 21:22:38','2014-10-16 19:22:38','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:22:38','2014-10-16 19:22:38','',70,'http://blog.gingerik.nl/?p=90',0,'revision','',0),(91,1,'2014-10-16 21:25:33','2014-10-16 19:25:33','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:25:33','2014-10-16 19:25:33','',70,'http://blog.gingerik.nl/?p=91',0,'revision','',0),(92,1,'2014-10-16 21:34:10','2014-10-16 19:34:10','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**.\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:34:10','2014-10-16 19:34:10','',70,'http://blog.gingerik.nl/?p=92',0,'revision','',0),(93,1,'2014-10-16 21:35:06','2014-10-16 19:35:06','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**.\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:35:06','2014-10-16 19:35:06','',70,'http://blog.gingerik.nl/?p=93',0,'revision','',0),(94,1,'2014-10-16 21:37:51','2014-10-16 19:37:51','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab -CI-)\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**.\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:37:51','2014-10-16 19:37:51','',70,'http://blog.gingerik.nl/?p=94',0,'revision','',0),(95,1,'2014-10-16 21:38:27','2014-10-16 19:38:27','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**.\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:38:27','2014-10-16 19:38:27','',70,'http://blog.gingerik.nl/?p=95',0,'revision','',0),(96,1,'2014-10-16 21:38:58','2014-10-16 19:38:58','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml\r\n    # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**.\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:38:58','2014-10-16 19:38:58','',70,'http://blog.gingerik.nl/?p=96',0,'revision','',0),(97,1,'2014-10-16 21:39:20','2014-10-16 19:39:20','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**.\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:39:20','2014-10-16 19:39:20','',70,'http://blog.gingerik.nl/?p=97',0,'revision','',0),(98,1,'2014-10-16 21:40:41','2014-10-16 19:40:41','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**, e.g. on a virtual machine.\r\nTime to install[3].\r\n\r\n\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md\r\n[3] https://gitlab.com/gitlab-org/gitlab-ci-runner/blob/master/README.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:40:41','2014-10-16 19:40:41','',70,'http://blog.gingerik.nl/?p=98',0,'revision','',0),(99,1,'2014-10-16 21:44:19','2014-10-16 19:44:19','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**, e.g. on a VPS.\r\nTime to install[3].\r\n\r\n### Easily add Runners to existing GitLab CI\r\n\r\nCreating a snapshot enables you to quickly add runners. Have the registration token at hand and:\r\n\r\n* instantiate a new VPS with the snapshot `gitlab-ci-runner-2gb-2gbswap`\r\n* `bundle exec ./bin/setup`\r\n* `sudo service gitlab-ci-runner start`\r\n\r\nNow the runner will start to pick up builds automatically. When you are done with it, you can destroy the VPS without worrying about anything.\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md\r\n[3] https://gitlab.com/gitlab-org/gitlab-ci-runner/blob/master/README.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:44:19','2014-10-16 19:44:19','',70,'http://blog.gingerik.nl/?p=99',0,'revision','',0),(100,1,'2014-10-16 21:44:45','2014-10-16 19:44:45','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# compile ruby\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# Create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**, e.g. on a VPS.\r\nTime to install[3].\r\n\r\n### Easily add Runners\r\n\r\nCreating a snapshot enables you to quickly add runners. Have the registration token at hand and:\r\n\r\n* instantiate a new VPS with the snapshot `gitlab-ci-runner-2gb-2gbswap`\r\n* `bundle exec ./bin/setup`\r\n* `sudo service gitlab-ci-runner start`\r\n\r\nNow the runner will start to pick up builds automatically. When you are done with it, you can destroy the VPS without worrying about anything.\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md\r\n[3] https://gitlab.com/gitlab-org/gitlab-ci-runner/blob/master/README.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:44:45','2014-10-16 19:44:45','',70,'http://blog.gingerik.nl/?p=100',0,'revision','',0),(101,1,'2014-10-16 21:53:45','2014-10-16 19:53:45','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**, e.g. on a VPS.\r\nTime to install[3].\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install -y wget curl gcc libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz | tar xz\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler\r\n\r\n# create a gitlab ci runner user\r\nsudo adduser --disabled-login --gecos \'GitLab CI Runner\' gitlab_ci_runner\r\n```\r\n\r\n#### GitLab CI Runner\r\n\r\n```bash\r\n# get the gitlab ci runner source\r\ncd /home/gitlab_ci_runner/\r\nsudo -u gitlab_ci_runner -H git clone https://gitlab.com/gitlab-org/gitlab-ci-runner.git\r\ncd gitlab-ci-runner\r\n\r\n# install gems\r\nsudo -u gitlab_ci_runner -H bundle install --deployment\r\n\r\n# set-up the bundle interactively\r\nsudo -u gitlab_ci_runner -H bundle exec ./bin/setup\r\n```\r\n\r\n### Easily add Runners\r\n\r\nCreating a snapshot enables you to quickly add runners. Have the registration token at hand and:\r\n\r\n* instantiate a new VPS with the snapshot `gitlab-ci-runner-2gb-2gbswap`\r\n* `bundle exec ./bin/setup`\r\n* `sudo service gitlab-ci-runner start`\r\n\r\nNow the runner will start to pick up builds automatically. When you are done with it, you can destroy the VPS without worrying about anything.\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md\r\n[3] https://gitlab.com/gitlab-org/gitlab-ci-runner/blob/master/README.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:53:45','2014-10-16 19:53:45','',70,'http://blog.gingerik.nl/?p=101',0,'revision','',0),(102,1,'2014-10-16 21:57:45','2014-10-16 19:57:45','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**, e.g. on a VPS.\r\nTime to install[3].\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install -y wget curl gcc libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz | tar xz\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler\r\n\r\n# create a gitlab ci runner user\r\nsudo adduser --disabled-login --gecos \'GitLab CI Runner\' gitlab_ci_runner\r\n```\r\n\r\n#### GitLab CI Runner\r\n\r\nThe registration token can be found at: <http://ci-domain/admin/runners>, accessible through _Header_ > _Runners_.\r\n\r\n```bash\r\n# get the gitlab ci runner source\r\ncd /home/gitlab_ci_runner/\r\nsudo -u gitlab_ci_runner -H git clone https://gitlab.com/gitlab-org/gitlab-ci-runner.git\r\ncd gitlab-ci-runner\r\n\r\n# install gems\r\nsudo -u gitlab_ci_runner -H bundle install --deployment\r\n\r\n# set-up the bundle interactively\r\nsudo -u gitlab_ci_runner -H bundle exec ./bin/setup\r\n```\r\n\r\n#### Post-installation\r\n\r\nWe need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want the GitLab CI Runner to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp lib/support/init.d/gitlab_ci_runner /etc/init.d/gitlab-ci-runner\r\nsudo chmod +x /etc/init.d/gitlab-ci-runner\r\nsudo update-rc.d gitlab-ci-runner defaults 21 # start on boot\r\nsudo service gitlab-ci-runner start\r\n```\r\n\r\n### Easily add Runners\r\n\r\nCreating a snapshot enables you to quickly add runners. Have the registration token at hand and:\r\n\r\n* instantiate a new VPS with the snapshot `gitlab-ci-runner-2gb-2gbswap`\r\n* `bundle exec ./bin/setup`\r\n* `sudo service gitlab-ci-runner start`\r\n\r\nNow the runner will start to pick up builds automatically. When you are done with it, you can destroy the VPS without worrying about anything.\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md\r\n[3] https://gitlab.com/gitlab-org/gitlab-ci-runner/blob/master/README.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:57:45','2014-10-16 19:57:45','',70,'http://blog.gingerik.nl/?p=102',0,'revision','',0),(103,1,'2014-10-16 21:58:15','2014-10-16 19:58:15','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**, e.g. on a VPS.\r\nTime to install[3].\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install -y wget curl gcc libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz | tar xz\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler\r\n\r\n# create a gitlab ci runner user\r\nsudo adduser --disabled-login --gecos \'GitLab CI Runner\' gitlab_ci_runner\r\n```\r\n\r\n#### GitLab CI Runner\r\n\r\nThe registration token can be found at: <http://ci-domain/admin/runners>, accessible through _Header_ > _Runners_.\r\n\r\n```bash\r\n# get the gitlab ci runner source\r\ncd /home/gitlab_ci_runner/\r\nsudo -u gitlab_ci_runner -H git clone https://gitlab.com/gitlab-org/gitlab-ci-runner.git\r\ncd gitlab-ci-runner\r\n\r\n# install gems\r\nsudo -u gitlab_ci_runner -H bundle install --deployment\r\n\r\n# set-up the bundle interactively\r\nsudo -u gitlab_ci_runner -H bundle exec ./bin/setup\r\n```\r\n\r\n#### Post-installation\r\n\r\nWe need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want the GitLab CI Runner to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp lib/support/init.d/gitlab_ci_runner /etc/init.d/gitlab-ci-runner\r\nsudo chmod +x /etc/init.d/gitlab-ci-runner\r\nsudo update-rc.d gitlab-ci-runner defaults 21 # start on boot\r\nsudo service gitlab-ci-runner start\r\n```\r\n\r\n### Easily add Runners\r\n\r\nCreating a snapshot enables you to quickly add runners. Have the registration token at hand and:\r\n\r\n* instantiate a new VPS with the snapshot `gitlab-ci-runner-2gb-2gbswap`\r\n* `bundle exec ./bin/setup`\r\n* `sudo service gitlab-ci-runner start`\r\n\r\nNow the runner will start to pick up builds automatically. When you are done with it, you can destroy the VPS without worrying about anything.\r\n\r\n## References\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md\r\n[3] https://gitlab.com/gitlab-org/gitlab-ci-runner/blob/master/README.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 21:58:15','2014-10-16 19:58:15','',70,'http://blog.gingerik.nl/?p=103',0,'revision','',0),(104,1,'2014-10-16 22:01:23','2014-10-16 20:01:23','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**, e.g. on a VPS.\r\nTime to install[3].\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install -y wget curl gcc libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz | tar xz\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler\r\n\r\n# create a gitlab ci runner user\r\nsudo adduser --disabled-login --gecos \'GitLab CI Runner\' gitlab_ci_runner\r\n```\r\n\r\n#### GitLab CI Runner\r\n\r\nThe registration token can be found at: <http://the-gitlab-ci-domain/admin/runners>, accessible through _Header_ > _Runners_.\r\n\r\n```bash\r\n# get the gitlab ci runner source\r\ncd /home/gitlab_ci_runner/\r\nsudo -u gitlab_ci_runner -H git clone https://gitlab.com/gitlab-org/gitlab-ci-runner.git\r\ncd gitlab-ci-runner\r\n\r\n# install gems\r\nsudo -u gitlab_ci_runner -H bundle install --deployment\r\n\r\n# set-up the bundle interactively\r\nsudo -u gitlab_ci_runner -H bundle exec ./bin/setup\r\n```\r\n\r\n#### Post-installation\r\n\r\nWe need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want the GitLab CI Runner to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp lib/support/init.d/gitlab_ci_runner /etc/init.d/gitlab-ci-runner\r\nsudo chmod +x /etc/init.d/gitlab-ci-runner\r\nsudo update-rc.d gitlab-ci-runner defaults 21 # start on boot\r\nsudo service gitlab-ci-runner start\r\n```\r\n\r\n### Easily add Runners\r\n\r\nCreating a snapshot enables you to quickly add runners. Have the registration token at hand and:\r\n\r\n* instantiate a new VPS with the snapshot `gitlab-ci-runner-2gb-2gbswap`\r\n* `bundle exec ./bin/setup`\r\n* `sudo service gitlab-ci-runner start`\r\n\r\nNow the runner will start to pick up builds automatically. When you are done with it, you can destroy the VPS without worrying about anything.\r\n\r\n## References\r\n\r\n[1] https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/\r\n[2] https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md\r\n[3] https://gitlab.com/gitlab-org/gitlab-ci-runner/blob/master/README.md','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 22:01:23','2014-10-16 20:01:23','',70,'http://blog.gingerik.nl/?p=104',0,'revision','',0),(105,1,'2014-10-16 22:02:08','2014-10-16 20:02:08','_The GitLab.com team strongly believes in using feature branches and merge requests in software development. We also think that Test Driven Development (TDD) should be used wherever possible. If you combine these things what follows is that you have to know the testing results of a feature branch before accepting the merge request. GitLab CI was build to offer this functionality and we think most people using GitLab would benefit from using GitLab CI as well._\r\n\r\n> If you are running tests on the CI server you are doing it wrong!\r\n\r\n_Anybody who can push to a branch that is tested on a CI server can easily own that server. So you don\'t want to have projects with different authorization levels being tested on the same CI server._\r\n\r\n_To solve the problem we have split the CI application in two parts, a coordinator and runners. The coordinator enables you to specify how you want to test and stores the results. This is a rack application that communicates with the GitLab API. The runners perform the actual build and they are installed on separate machines. This way you never run tests on the same server that stores all you code._[1]\r\n\r\nTime to install GitLab CI[2]!\r\n\r\n## The Coordinator\r\n\r\nThe Coordinator is installed on the **same** server as GitLab itself. There is no need to put this somewhere else.\r\n\r\n### Installation\r\n\r\nMake sure **all** steps are run successfully!\r\n\r\n#### Dependencies\r\n\r\nFirst we install some packages that are required by GitLab CI.\r\n\r\n```bash\r\n# update the system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install wget curl gcc checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\nsudo apt-get install redis-server\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.bz2 | tar xj\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler --no-ri --no-rdoc\r\n\r\n# create a gitlab ci user\r\nsudo adduser --disabled-login --gecos \'GitLab CI\' gitlab_ci\r\n\r\n# install & configure postgresql\r\n#  we do not specify a password because we are using peer authentication\r\nsudo apt-get install -y postgresql-9.1 libpq-dev\r\nsudo -u postgres psql -d template1 -c \"CREATE USER gitlab_ci;\"\r\nsudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlab_ci_production OWNER gitlab_ci;\"\r\nsudo -u gitlab_ci -H psql -d gitlab_ci_production -c \"\\du\" # verify you can connect\r\n```\r\n\r\n#### GitLab CI\r\n\r\nNow we have successfully installed all dependencies, it is time to install GitLab CI itself.\r\n\r\n```bash\r\n# get the gitlab ci source\r\ncd /home/gitlab_ci/\r\nsudo -u gitlab_ci -H git clone https://gitlab.com/gitlab-org/gitlab-ci.git\r\ncd gitlab-ci\r\nsudo -u gitlab_ci -H git checkout 5-0-stable\r\n\r\n# set-up gitlab\r\nsudo -u gitlab_ci -H cp config/application.yml.example config/application.yml\r\nsudo -u gitlab_ci -H vim config/application.yml # configure the application (gitlab_server_urls = GitLab [not CI])\r\nsudo -u gitlab_ci -H cp config/unicorn.rb.example config/unicorn.rb\r\nsudo -u gitlab_ci -H vim config/unicorn.rb # configure the server\r\n\r\n# create socket and pid directories\r\nsudo -u gitlab_ci -H mkdir -p tmp/sockets/\r\nsudo chmod -R u+rwX tmp/sockets/ # yes, relative\r\nsudo -u gitlab_ci -H mkdir -p tmp/pids/\r\nsudo chmod -R u+rwX tmp/pids/ # yes, relative\r\n\r\n# install gems\r\nsudo -u gitlab_ci -H bundle install --without development test mysql --deployment # without ... mysql\r\n\r\n# set-up database\r\nsudo -u gitlab_ci -H cp config/database.yml.postgresql config/database.yml\r\nsudo -u gitlab_ci -H bundle exec rake setup RAILS_ENV=production\r\nsudo -u gitlab_ci -H bundle exec whenever -w RAILS_ENV=production\r\n```\r\n\r\n#### Post-installation\r\n\r\nGitLab is now installed! We need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want GitLab CI to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/init.d/gitlab_ci /etc/init.d/gitlab_ci\r\nsudo update-rc.d gitlab_ci defaults 21 # start on boot\r\nsudo service gitlab_ci start\r\n```\r\n\r\n##### Nginx\r\n\r\nConfigure nginx (an apache alternative) to host GitLab CI.\r\n\r\n```bash\r\nsudo apt-get install nginx\r\nsudo cp /home/gitlab_ci/gitlab-ci/lib/support/nginx/gitlab_ci /etc/nginx/sites-available/gitlab_ci\r\nsudo vim /etc/nginx/sites-available/gitlab_ci # edit ip & fqdn\r\nsudo ln -s /etc/nginx/sites-available/gitlab_ci /etc/nginx/sites-enabled/gitlab_ci\r\nsudo service nginx start\r\n```\r\n\r\n## Runners\r\n\r\nThe runners perform the actual build and need to be installed on **separate machines**, e.g. on a VPS.\r\nTime to install[3].\r\n\r\n### Installation\r\n\r\n#### Dependencies\r\n\r\n```bash\r\n# update system\r\nsudo apt-get update\r\nsudo apt-get upgrade\r\n\r\n# install dependencies\r\nsudo apt-get install -y wget curl gcc libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\n\r\n# install ruby from source\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz | tar xz\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n\r\n# install the bundler gem\r\nsudo gem install bundler\r\n\r\n# create a gitlab ci runner user\r\nsudo adduser --disabled-login --gecos \'GitLab CI Runner\' gitlab_ci_runner\r\n```\r\n\r\n#### GitLab CI Runner\r\n\r\nThe registration token can be found at: <http://the-gitlab-ci-domain/admin/runners>, accessible through _Header_ > _Runners_.\r\n\r\n```bash\r\n# get the gitlab ci runner source\r\ncd /home/gitlab_ci_runner/\r\nsudo -u gitlab_ci_runner -H git clone https://gitlab.com/gitlab-org/gitlab-ci-runner.git\r\ncd gitlab-ci-runner\r\n\r\n# install gems\r\nsudo -u gitlab_ci_runner -H bundle install --deployment\r\n\r\n# set-up the bundle interactively\r\nsudo -u gitlab_ci_runner -H bundle exec ./bin/setup\r\n```\r\n\r\n#### Post-installation\r\n\r\nWe need some final configurations.\r\n\r\n##### Init.d script\r\n\r\nWe want the GitLab CI Runner to start on boot, so we add an init.d script.\r\n\r\n```bash\r\nsudo cp lib/support/init.d/gitlab_ci_runner /etc/init.d/gitlab-ci-runner\r\nsudo chmod +x /etc/init.d/gitlab-ci-runner\r\nsudo update-rc.d gitlab-ci-runner defaults 21 # start on boot\r\nsudo service gitlab-ci-runner start\r\n```\r\n\r\n### Easily add Runners\r\n\r\nCreating a snapshot enables you to quickly add runners. Have the registration token at hand and:\r\n\r\n* instantiate a new VPS with the snapshot `gitlab-ci-runner-2gb-2gbswap`\r\n* `bundle exec ./bin/setup`\r\n* `sudo service gitlab-ci-runner start`\r\n\r\nNow the runner will start to pick up builds automatically. When you are done with it, you can destroy the VPS without worrying about anything.\r\n\r\n## References\r\n\r\n[1] <https://about.gitlab.com/2013/06/20/integrating-gitlab-ci-with-gitlab/>\r\n[2] <https://gitlab.com/gitlab-org/gitlab-ci/blob/master/doc/install/installation.md>\r\n[3] <https://gitlab.com/gitlab-org/gitlab-ci-runner/blob/master/README.md>','GitLab Continuous Integration','','inherit','open','open','','70-revision-v1','','','2014-10-16 22:02:08','2014-10-16 20:02:08','',70,'http://blog.gingerik.nl/?p=105',0,'revision','',0),(106,1,'2014-10-20 22:46:09','0000-00-00 00:00:00','','Auto Draft','','auto-draft','open','open','','','','','2014-10-20 22:46:09','0000-00-00 00:00:00','',0,'http://blog.gingerik.nl/?p=106',0,'post','',0),(108,0,'2014-10-21 00:26:38','2014-10-20 22:26:38','','Daily backup - October 20, 2014','','publish','open','open','','daily-backup-october-20-2014','','','2014-10-21 00:26:38','2014-10-20 22:26:38','',0,'http://blog.gingerik.nl/?revisr_commits=daily-backup-october-20-2014',0,'revisr_commits','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_revisr`
--

DROP TABLE IF EXISTS `wp_revisr`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_revisr` (
  `id` mediumint(9) NOT NULL AUTO_INCREMENT,
  `time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `message` text,
  `event` varchar(42) NOT NULL,
  UNIQUE KEY `id` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_revisr`
--

LOCK TABLES `wp_revisr` WRITE;
/*!40000 ALTER TABLE `wp_revisr` DISABLE KEYS */;
INSERT INTO `wp_revisr` VALUES (1,'2014-10-20 22:10:14','Initialized a new repository.','init'),(2,'2014-10-20 22:26:38','Failed to backup the database.','error'),(3,'2014-10-20 22:26:39','The daily backup ran successfully.','backup'),(4,'2014-10-20 22:43:04','Failed to backup the database.','error'),(5,'2014-10-20 22:44:41','Failed to backup the database.','error'),(6,'2014-10-20 22:49:55','Failed to backup the database.','error'),(7,'2014-10-20 22:51:15','Failed to backup the database.','error'),(8,'2014-10-21 07:08:36','Failed to backup the database.','error');
/*!40000 ALTER TABLE `wp_revisr` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (1,1,0),(4,2,0),(4,5,0),(4,7,0),(4,8,0),(4,9,0),(4,17,0),(15,4,0),(15,6,0),(22,2,0),(22,5,0),(22,7,0),(22,17,0),(37,5,0),(37,10,0),(37,11,0),(37,12,0),(37,13,0),(45,2,0),(45,5,0),(45,7,0),(45,14,0),(51,2,0),(51,5,0),(51,15,0),(51,16,0),(54,2,0),(54,5,0),(54,7,0),(54,17,0),(54,18,0),(54,19,0),(70,2,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) NOT NULL DEFAULT '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,0),(2,2,'category','',0,4),(4,4,'category','',0,1),(5,5,'post_tag','',0,5),(6,6,'post_tag','',0,1),(7,7,'post_tag','',0,3),(8,8,'post_tag','',0,1),(9,9,'post_tag','',0,1),(10,10,'post_tag','',0,1),(11,11,'post_tag','',0,1),(12,12,'post_tag','',0,1),(13,13,'category','',0,1),(14,14,'post_tag','',0,1),(15,15,'post_tag','',0,1),(16,16,'post_tag','',0,1),(17,17,'post_tag','',0,2),(18,18,'post_tag','',0,0),(19,19,'post_tag','',0,0);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL DEFAULT '',
  `slug` varchar(200) NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'Uncategorized','uncategorized',0),(2,'Debian','debian-2',0),(4,'Other','other',0),(5,'debian','debian',0),(6,'dd-wrt','dd-wrt',0),(7,'server','server',0),(8,'markdown','markdown',0),(9,'prettify','prettify',0),(10,'moto g','moto-g',0),(11,'android','android',0),(12,'root','root',0),(13,'Android','android-2',0),(14,'yubikey','yubikey',0),(15,'sopcast','sopcast',0),(16,'streaming','streaming',0),(17,'wordpress','wordpress',0),(18,'git','git',0),(19,'backup','backup',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'first_name',''),(2,1,'last_name',''),(3,1,'nickname','erik'),(4,1,'description',''),(5,1,'rich_editing','false'),(6,1,'comment_shortcuts','false'),(7,1,'admin_color','fresh'),(8,1,'use_ssl','0'),(9,1,'show_admin_bar_front','true'),(10,1,'wp_capabilities','a:1:{s:13:\"administrator\";b:1;}'),(11,1,'wp_user_level','10'),(12,1,'dismissed_wp_pointers','wp330_toolbar,wp330_saving_widgets,wp340_choose_image_from_library,wp340_customize_current_theme_link,wp350_media,wp360_revisions,wp360_locks,wp390_widgets'),(13,1,'show_welcome_panel','1'),(14,1,'wp_dashboard_quick_press_last_post_id','106'),(15,1,'meta-box-order_post','a:3:{s:4:\"side\";s:61:\"submitdiv,categorydiv,tagsdiv-post_tag,formatdiv,postimagediv\";s:6:\"normal\";s:96:\"postexcerpt,trackbacksdiv,postcustom,commentstatusdiv,slugdiv,authordiv,revisionsdiv,commentsdiv\";s:8:\"advanced\";s:0:\"\";}'),(16,1,'screen_layout_post','2'),(17,1,'wp_user-settings','unfold=0&mfold=o&ed_size=631'),(18,1,'wp_user-settings-time','1413489221'),(19,1,'managenav-menuscolumnshidden','a:4:{i:0;s:11:\"link-target\";i:1;s:11:\"css-classes\";i:2;s:3:\"xfn\";i:3;s:11:\"description\";}'),(20,1,'metaboxhidden_nav-menus','a:3:{i:0;s:8:\"add-post\";i:1;s:12:\"add-post_tag\";i:2;s:15:\"add-post_format\";}'),(21,1,'meta-box-order_dashboard','a:4:{s:6:\"normal\";s:88:\"dashboard_right_now,dashboard_incoming_links,dashboard_recent_comments,dashboard_plugins\";s:4:\"side\";s:83:\"dashboard_quick_press,dashboard_recent_drafts,dashboard_primary,dashboard_secondary\";s:7:\"column3\";s:0:\"\";s:7:\"column4\";s:0:\"\";}'),(22,1,'screen_layout_dashboard','2'),(23,1,'session_tokens','a:2:{s:64:\"1aea4784bfd21f056d341b48a84f312a9b6cfffcdab2d7d065abc5ff4d97a266\";i:1414013327;s:64:\"563cda212006499542ecc37d8947ce4fda9a69de21b1c0aad13d6f9e4fc06055\";i:1414047787;}');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `user_pass` varchar(64) NOT NULL DEFAULT '',
  `user_nicename` varchar(50) NOT NULL DEFAULT '',
  `user_email` varchar(100) NOT NULL DEFAULT '',
  `user_url` varchar(100) NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(60) NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES (1,'erik','$P$BFma/Wgoha6C/GQJtZd.QWNoimc2IP1','erik','e.timmers@gmail.com','','2014-10-11 15:51:07','',0,'erik');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-10-21  9:11:29
